{
  "contractName": "RekamMedis",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminDitetapkan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        }
      ],
      "name": "DokterStatusDiubah",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "nama",
          "type": "string"
        }
      ],
      "name": "DokterTerdaftar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "PasienDiassignKeDokter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "PasienTerdaftar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        }
      ],
      "name": "RekamMedisDiperbarui",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "RekamMedisDitambahkan",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "daftarDokter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "daftarPasien",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dataDokter",
      "outputs": [
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDokter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPasien",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedis",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedisByPasien",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rekamMedisCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedisVersions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        }
      ],
      "name": "registerDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDokter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getDokterByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_aktif",
          "type": "bool"
        }
      ],
      "name": "setStatusDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "assignPasienToDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "isPasienAssignedToDokter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        }
      ],
      "name": "getDokter",
      "outputs": [
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        },
        {
          "internalType": "address[]",
          "name": "pasien",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "registerPasien",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "selfRegisterPasien",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserRole",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "getRekamMedisIdsByPasien",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDaftarPasien",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_catatan",
          "type": "string"
        }
      ],
      "name": "tambahRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_catatan",
          "type": "string"
        }
      ],
      "name": "updateRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRekamMedisVersions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pasien",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "nama",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "umur",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "golonganDarah",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tanggalLahir",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "gender",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "alamat",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "noTelepon",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "diagnosa",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "foto",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "catatan",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ],
          "internalType": "struct RekamMedis.RekamMedisData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "nonaktifkanRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminDitetapkan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"}],\"name\":\"DokterStatusDiubah\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"}],\"name\":\"DokterTerdaftar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"PasienDiassignKeDokter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"PasienTerdaftar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"}],\"name\":\"RekamMedisDiperbarui\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"RekamMedisDitambahkan\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"assignPasienToDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daftarDokter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daftarPasien\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dataDokter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDaftarPasien\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"}],\"name\":\"getDokter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"pasien\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDokterByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"getRekamMedisIdsByPasien\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRekamMedisVersions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"internalType\":\"struct RekamMedis.RekamMedisData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserRole\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDokter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPasien\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"isPasienAssignedToDokter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"nonaktifkanRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"}],\"name\":\"registerDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"registerPasien\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedisByPasien\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rekamMedisCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedisVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selfRegisterPasien\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_aktif\",\"type\":\"bool\"}],\"name\":\"setStatusDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_catatan\",\"type\":\"string\"}],\"name\":\"tambahRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDokter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_catatan\",\"type\":\"string\"}],\"name\":\"updateRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RekamMedis.sol\":\"RekamMedis\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/RekamMedis.sol\":{\"keccak256\":\"0x1f7f790cb25afc3f1dcaa815c2c2afe849bcd34f5e03a778e87589ad914b6e43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34477a2d8ab3a89d31698f7e037975b077dac5347555ec218cb0abd08724f7aa\",\"dweb:/ipfs/QmcuHSc5Mj5StqJdtPbD9sJozYaw5J8n1u5NqwWpYiEZct\"]}},\"version\":1}",
  "bytecode": "0x6080806040523461003c57600080546001600160a01b03191673b0dc0bf642d339517438017fc185bb0f758a01d217905561332690816100428239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062410cb314612b61578063010ef3b314612a20578063046bdbcc146129b2578063083d88241461296e578063107e202f146125c55780631132beb51461258657806319e8f405146123dc57806327820851146123a45780632e2dd10214612386578063334181f2146122c05780633da05518146121ff57806342699651146121bd57806351887b67146121285780635c4c9348146120e9578063683700871461208e57806368f5dc99146114a457806370419a811461146e578063704b6c02146113fc5780637d3e9db8146113de578063932e0f6d1461132e578063abf72abb146112eb578063c3c0fdea14611288578063c967ede8146111d4578063d688780214610f0c578063dd09a96814610e24578063f7dc5714146101725763f851a4401461014457600080fd5b3461016d57600036600319011261016d576000546040516001600160a01b039091168152602090f35b600080fd5b3461016d5761018036600319011261016d576024356001600160401b03811161016d576101a3903690600401612ca2565b6064356001600160401b03811161016d576101c2903690600401612ca2565b6084356001600160401b03811161016d576101e1903690600401612ca2565b9160a4356001600160401b03811161016d57610201903690600401612ca2565b9060c4356001600160401b03811161016d57610221903690600401612ca2565b60e4356001600160401b03811161016d57610240903690600401612ca2565b610104356001600160401b03811161016d57610260903690600401612ca2565b91610124356001600160401b03811161016d57610281903690600401612ca2565b94610144356001600160401b03811161016d576102a2903690600401612ca2565b97610164356001600160401b03811161016d576102c3903690600401612ca2565b97600435600052600660205260018060a01b036001604060002001541633600052600260205260ff6040600020541680610e0d575b15610daa5761030790336130e5565b15610d54576004356000526006602052604060002096600960205260406000208054600160401b8110156107d15761034491600182018155612f3a565b610d3e57888103610c48575b508051906001600160401b0382116107d157819061037e8261037560028d0154612d75565b60028d01612fcb565b602090601f8311600114610bd657600092610bcb575b50508160011b916000199060031b1c19161760028801555b60443560038801558051906001600160401b0382116107d15781906103e1826103d860048c0154612d75565b60048c01612fcb565b602090601f8311600114610b5957600092610b4e575b50508160011b916000199060031b1c19161760048701555b8051906001600160401b0382116107d157819061043c8261043360058b0154612d75565b60058b01612fcb565b602090601f8311600114610adc57600092610ad1575b50508160011b916000199060031b1c19161760058601555b8051906001600160401b0382116107d15781906104978261048e60068a0154612d75565b60068a01612fcb565b602090601f8311600114610a5f57600092610a54575b50508160011b916000199060031b1c19161760068501555b8051906001600160401b0382116107d15781906104f2826104e96007890154612d75565b60078901612fcb565b602090601f83116001146109e2576000926109d7575b50508160011b916000199060031b1c19161760078401555b8051906001600160401b0382116107d157819061054d826105446008880154612d75565b60088801612fcb565b602090601f83116001146109655760009261095a575b50508160011b916000199060031b1c19161760088301555b8051906001600160401b0382116107d15781906105a88261059f6009870154612d75565b60098701612fcb565b602090601f83116001146108e8576000926108dd575b50508160011b916000199060031b1c19161760098201555b81516001600160401b0381116107d157610600816105f7600a850154612d75565b600a8501612fcb565b806020601f821160011461087057600091610865575b508160011b916000199060031b1c191617600a8201555b83516001600160401b0381116107d1576106578161064e600b850154612d75565b600b8501612fcb565b6020601f82116001146107f2578190600c9495966000926107e7575b50508160011b916000199060031b1c191617600b8201555b01918051926001600160401b0384116107d1576106b2846106ac8354612d75565b83612fcb565b602093601f81116001146107435791610733918361072595947f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1397600091610738575b508160011b916000199060031b1c19161790555b6040519384936004358552606060208601526060850190612cf8565b908382036040850152612cf8565b0390a1005b9050830151886106f5565b601f1981168260005260206000209060005b8181106107b957508261073394927f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1398610725989795600194106107a0575b5050811b019055610709565b85015160001960f88460031b161c191690558880610794565b85880151835560209788019760019093019201610755565b634e487b7160e01b600052604160045260246000fd5b015190508680610673565b600b830160005260206000209560005b601f198416811061084d5750958291600c959697600194601f19811610610834575b505050811b01600b82015561068b565b015160001960f88460031b161c19169055868080610824565b82820151885560019097019660209283019201610802565b905083015186610616565b9150600a830160005260206000206000925b601f19831684106108c5576001935082601f198116106108ac575b5050811b01600a82015561062d565b85015160001960f88460031b161c19169055868061089d565b85810151825560209384019360019092019101610882565b0151905086806105be565b9250600984016000526020600020906000935b601f198416851061093f576001945083601f19811610610926575b505050811b0160098201556105d6565b015160001960f88460031b161c19169055868080610916565b818101518355602094850194600190930192909101906108fb565b015190508780610563565b9250600885016000526020600020906000935b601f19841685106109bc576001945083601f198116106109a3575b505050811b01600883015561057b565b015160001960f88460031b161c19169055878080610993565b81810151835560209485019460019093019290910190610978565b015190508880610508565b9250600786016000526020600020906000935b601f1984168510610a39576001945083601f19811610610a20575b505050811b016007840155610520565b015160001960f88460031b161c19169055888080610a10565b818101518355602094850194600190930192909101906109f5565b0151905089806104ad565b9250600687016000526020600020906000935b601f1984168510610ab6576001945083601f19811610610a9d575b505050811b0160068501556104c5565b015160001960f88460031b161c19169055898080610a8d565b81810151835560209485019460019093019290910190610a72565b015190508a80610452565b9250600588016000526020600020906000935b601f1984168510610b33576001945083601f19811610610b1a575b505050811b01600586015561046a565b015160001960f88460031b161c191690558a8080610b0a565b81810151835560209485019460019093019290910190610aef565b015190508b806103f7565b9250600489016000526020600020906000935b601f1984168510610bb0576001945083601f19811610610b97575b505050811b01600487015561040f565b015160001960f88460031b161c191690558b8080610b87565b81810151835560209485019460019093019290910190610b6c565b015190508c80610394565b925060028a016000526020600020906000935b601f1984168510610c2d576001945083601f19811610610c14575b505050811b0160028801556103ac565b015160001960f88460031b161c191690558c8080610c04565b81810151835560209485019460019093019290910190610be9565b610d3890895481556001810160018060a01b0360018c0154166001600160601b0360a01b825416179055610c8260028b0160028301613218565b60038a01546003820155610c9c60048b0160048301613218565b610cac60058b0160058301613218565b610cbc60068b0160068301613218565b610ccc60078b0160078301613218565b610cdc60088b0160088301613218565b610cec60098b0160098301613218565b610cfc600a8b01600a8301613218565b610d0c600b8b01600b8301613218565b610d1c600c8b01600c8301613218565b600d60ff818c01541691019060ff801983541691151516179055565b8b610350565b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152602860248201527f446f6b74657220746964616b2064692d61737369676e20756e74756b2070617360448201526734b2b71034b7349760c11b6064820152608490fd5b60405162461bcd60e51b815260206004820152603560248201527f48616e796120646f6b74657220616b7469662079616e672062697361206d656d6044820152743832b93130b93ab4903932b5b0b69036b2b234b99760591b6064820152608490fd5b50600160205260ff600160406000200154166102f8565b3461016d57604036600319011261016d576024356004356000526009602052604060002090815481101561016d57610e5b91612f3a565b50805460018201546001600160a01b031691610f0890610e7d60028201612daf565b906003810154610e8f60048301612daf565b610e9b60058401612daf565b610ea760068501612daf565b610eb360078601612daf565b610ebf60088701612daf565b91610ecc60098801612daf565b93610ed9600a8901612daf565b95610ee6600b8a01612daf565b9760ff600d610ef7600c8d01612daf565b9b0154169a6040519e8f9e8f612e55565b0390f35b3461016d5760208060031936011261016d57600435600052600990818152604060002080546001600160401b0381116107d1579160405192600594610f558383881b0186612c81565b81855260009384528284208386019491855b8484106110d4575050505050604051928184019082855251809152604081818601961b85010192916000955b828710610fa05785850386f35b909192938280600192603f1989820301855287519081518152848060a01b038383015116838201526110b76110a361108f61107b61106761105361104161102e61101b610ffe60408c015160408c6101c091829101528c0190612cf8565b6060808d0151908c01526080808d0151908c8303908d0152612cf8565b60a0808c0151908b8303908c0152612cf8565b60c0808b0151908a8303908b0152612cf8565b60e089015188820360e08a0152612cf8565b610100808901519088830390890152612cf8565b610120808801519087830390880152612cf8565b610140808701519086830390870152612cf8565b610160808601519085830390860152612cf8565b610180808501519084830390850152612cf8565b916101a08091015115159101529601920196019592919092610f93565b600e8660019260409a989a516110e981612c4a565b86548152848060a01b0385880154168382015261110860028801612daf565b60408201526003870154606082015261112360048801612daf565b60808201526111338d8801612daf565b60a082015261114460068801612daf565b60c082015261115560078801612daf565b60e082015261116660088801612daf565b610100820152611177868801612daf565b610120820152611189600a8801612daf565b61014082015261119b600b8801612daf565b6101608201526111ad600c8801612daf565b61018082015260ff600d8801541615156101a0820152815201930193019291969496610f67565b3461016d5760208060031936011261016d576001600160a01b036111f6612bb9565b1660005260078152604060002060405190818382549182815201908192600052846000209060005b8682821061127457868661123482880383612c81565b604051928392818401908285525180915260408401929160005b82811061125d57505050500390f35b83518552869550938101939281019260010161124e565b83548552909301926001928301920161121e565b3461016d57602036600319011261016d576001600160a01b036112a9612bb9565b1660005260016020526112df604060002060ff60016112c783612daf565b92015416604051928392604084526040840190612cf8565b90151560208301520390f35b3461016d57602036600319011261016d576004356000908152600660205260409020805460018201546001600160a01b031691610f0890610e7d60028201612daf565b3461016d57604036600319011261016d57611347612bb9565b602435908115159182810361016d577f3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a926113d160409360018060a01b039061139582600054163314612f56565b16928360005260026020526113b060ff866000205416613074565b836000526001602052600185600020019060ff801983541691151516179055565b82519182526020820152a1005b3461016d57600036600319011261016d576020600454604051908152f35b3461016d57602036600319011261016d577f4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d6020611438612bb9565b600054906001600160a01b03906114523383851614612f56565b1680916001600160601b0360a01b1617600055604051908152a1005b3461016d57604036600319011261016d57602061149a61148c612bb9565b611494612bcf565b906130e5565b6040519015158152f35b3461016d5761018036600319011261016d576114be612bb9565b6024356001600160401b03811161016d576114dd903690600401612ca2565b906064356001600160401b03811161016d576114fd903690600401612ca2565b916084356001600160401b03811161016d5761151d903690600401612ca2565b9260a4356001600160401b03811161016d5761153d903690600401612ca2565b9360c4356001600160401b03811161016d5761155d903690600401612ca2565b9460e4356001600160401b03811161016d5761157d903690600401612ca2565b610104356001600160401b03811161016d5761159d903690600401612ca2565b90610124356001600160401b03811161016d576115be903690600401612ca2565b97610144356001600160401b03811161016d576115df903690600401612ca2565b93610164356001600160401b03811161016d57611600903690600401612ca2565b956001600160a01b038a16330361202e5761161c6008546130c0565b97886008556040519961162e8b612c4a565b898b5260018060a01b038c1660208c015260408b015260443560608b015260808a015260a089015260c088015260e08701526101008601526101208501528561014085015261016084015261018083015260016101a08301526000526006602052604060002090805182556001820160018060a01b036020830151166001600160601b0360a01b82541617905560408101518051906001600160401b0382116107d15781906116ed826116e46002880154612d75565b60028801612fcb565b602090601f8311600114611fbc57600092611fb1575b50508160011b916000199060031b1c19161760028301555b6060810151600383015560808101518051906001600160401b0382116107d15781906117578261174e6004880154612d75565b60048801612fcb565b602090601f8311600114611f3f57600092611f34575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116107d15781906117b7826117ae6005880154612d75565b60058801612fcb565b602090601f8311600114611ec257600092611eb7575b50508160011b916000199060031b1c19161760058301555b60c08101518051906001600160401b0382116107d15781906118178261180e6006880154612d75565b60068801612fcb565b602090601f8311600114611e4557600092611e3a575b50508160011b916000199060031b1c19161760068301555b60e08101518051906001600160401b0382116107d15781906118778261186e6007880154612d75565b60078801612fcb565b602090601f8311600114611dc857600092611dbd575b50508160011b916000199060031b1c19161760078301555b6101008101518051906001600160401b0382116107d15781906118cf826105446008880154612d75565b602090601f8311600114611d4b57600092611d40575b50508160011b916000199060031b1c19161760088301555b6101208101518051906001600160401b0382116107d1578190611930826119276009880154612d75565b60098801612fcb565b602090601f8311600114611cce57600092611cc3575b50508160011b916000199060031b1c19161760098301555b6101408101518051906001600160401b0382116107d157819061199182611988600a880154612d75565b600a8801612fcb565b602090601f8311600114611c5157600092611c46575b50508160011b916000199060031b1c191617600a8301555b6101608101518051906001600160401b0382116107d15781906119f2826119e9600b880154612d75565b600b8801612fcb565b602090601f8311600114611bd457600092611bc9575b50508160011b916000199060031b1c191617600b8301555b600c82016101808201518051906001600160401b0382116107d157611a4f82611a498554612d75565b85612fcb565b602090601f8311600114611b565792826101a093611aa0979693600d96600092611b4b575b50508160011b916000199060031b1c19161790555b0151151591019060ff801983541691151516179055565b6001600160a01b038116600090815260076020526040902060085481549391600160401b8510156107d15784611afc9160017f8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c99797018155612c32565b819291549060031b91821b91600019901b1916179055611b3f60085491604051938493845260018060a01b03166020840152608060408401526080830190612cf8565b600160608301520390a1005b015190508a80611a74565b90601f198316918460005260206000209260005b818110611bb1575093611aa0979693600d9693600193836101a09810611b98575b505050811b019055611a89565b015160001960f88460031b161c191690558a8080611b8b565b92936020600181928786015181550195019301611b6a565b015190508680611a08565b9250600b85016000526020600020906000935b601f1984168510611c2b576001945083601f19811610611c12575b505050811b01600b830155611a20565b015160001960f88460031b161c19169055868080611c02565b81810151835560209485019460019093019290910190611be7565b0151905086806119a7565b9250600a85016000526020600020906000935b601f1984168510611ca8576001945083601f19811610611c8f575b505050811b01600a8301556119bf565b015160001960f88460031b161c19169055868080611c7f565b81810151835560209485019460019093019290910190611c64565b015190508680611946565b9250600985016000526020600020906000935b601f1984168510611d25576001945083601f19811610611d0c575b505050811b01600983015561195e565b015160001960f88460031b161c19169055868080611cfc565b81810151835560209485019460019093019290910190611ce1565b0151905086806118e5565b9250600885016000526020600020906000935b601f1984168510611da2576001945083601f19811610611d89575b505050811b0160088301556118fd565b015160001960f88460031b161c19169055868080611d79565b81810151835560209485019460019093019290910190611d5e565b01519050868061188d565b9250600785016000526020600020906000935b601f1984168510611e1f576001945083601f19811610611e06575b505050811b0160078301556118a5565b015160001960f88460031b161c19169055868080611df6565b81810151835560209485019460019093019290910190611ddb565b01519050868061182d565b9250600685016000526020600020906000935b601f1984168510611e9c576001945083601f19811610611e83575b505050811b016006830155611845565b015160001960f88460031b161c19169055868080611e73565b81810151835560209485019460019093019290910190611e58565b0151905086806117cd565b9250600585016000526020600020906000935b601f1984168510611f19576001945083601f19811610611f00575b505050811b0160058301556117e5565b015160001960f88460031b161c19169055868080611ef0565b81810151835560209485019460019093019290910190611ed5565b01519050868061176d565b9250600485016000526020600020906000935b601f1984168510611f96576001945083601f19811610611f7d575b505050811b016004830155611785565b015160001960f88460031b161c19169055868080611f6d565b81810151835560209485019460019093019290910190611f52565b015190508680611703565b9250600285016000526020600020906000935b601f1984168510612013576001945083601f19811610611ffa575b505050811b01600283015561171b565b015160001960f88460031b161c19169055868080611fea565b81810151835560209485019460019093019290910190611fcf565b60405162461bcd60e51b815260206004820152603260248201527f48616e79612070617369656e2079616e672062697361206d656d62756174207260448201527132b5b0b69036b2b234b99036b2b932b5b09760711b6064820152608490fd5b3461016d57602036600319011261016d5760043560055481101561016d5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001546040516001600160a01b039091168152602090f35b3461016d57602036600319011261016d576001600160a01b0361210a612bb9565b166000526002602052602060ff604060002054166040519015158152f35b3461016d57600036600319011261016d576040518060055480825282602080930160056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09260005b8582821061219e5750505061218a92500383612c81565b610f08604051928284938452830190612d38565b85546001600160a01b0316845260019586019588955093019201612173565b3461016d57602036600319011261016d5760043560045481101561016d576121e6602091612be5565b905460405160039290921b1c6001600160a01b03168152f35b3461016d5760208060031936011261016d576001600160a01b039081612223612bb9565b1660005260019081815260406000209260ff8385015416916122486002860195612daf565b93604051928383885491828152019760005283600020916000905b8282106122a95761229589610f088a8a8a8f82612281910383612c81565b604051958695606087526060870190612cf8565b921515908501528382036040850152612d38565b835481168a52988501989284019290840190612263565b3461016d57600036600319011261016d5733600052600360205260ff60406000205416612335573360005260036020526040600020600160ff1982541617905561230933613010565b7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470586020604051338152a1005b60405162461bcd60e51b8152602060048201526024808201527f416e64612073756461682074657264616674617220736562616761692050617360448201526334b2b71760e11b6064820152608490fd5b3461016d57600036600319011261016d576020600854604051908152f35b3461016d57602036600319011261016d57610f086123c86123c3612bb9565b61314d565b604051918291602083526020830190612cf8565b3461016d57604036600319011261016d576123f5612bb9565b6123fd612bcf565b9060018060a01b03809161241682600054163314612f56565b1680600052816020936002855261243460ff60406000205416613074565b168060005260039384815260ff60406000205416156125425782600052600181526002604060002001946000948654955b8681106124c85750600160401b8610156107d1576124ac867fd9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a986001604099018155612c32565b81939154911b9185831b921b19161790558351928352820152a1005b84826124d4838b612c32565b905490861b1c16146124ee576124e9906130c0565b612465565b60405162461bcd60e51b815260048101859052602660248201527f50617369656e20737564616820646974756761736b616e206b6520646f6b7465604482015265391034b7349760d11b6064820152608490fd5b6064906040519062461bcd60e51b82526004820152601760248201527f50617369656e20746964616b207465726461667461722e0000000000000000006044820152fd5b3461016d57602036600319011261016d576001600160a01b036125a7612bb9565b166000526003602052602060ff604060002054166040519015158152f35b3461016d57604036600319011261016d576125de612bb9565b6024356001600160401b03811161016d576125fd903690600401612ca2565b61261260018060a01b03600054163314612f56565b6001600160a01b03821660009081526002602052604090205460ff16612929576001600160a01b03821660009081526003602052604090205460ff166128d55760018060a01b03821660005260026020526040600020600160ff1982541617905560405191602083018381106001600160401b038211176107d1576040526000835260405192606084018481106001600160401b038211176107d157604052828452602084019060018252604085015260018060a01b038216600052600160205260406000209084518051906001600160401b0382116107d157612700826126fa8654612d75565b86612fcb565b602090601f83116001146128625792826040959361275093600296600092612857575b50508160011b916000199060031b1c19161783555b511515600183019060ff801983541691151516179055565b01930151928351906001600160401b0382116107d157600160401b948583116107d157602090825484845580851061283a575b500190600052602060002060005b83811061281d5750505050600454928310156107d1576127d88360017fc38147498c0c3f6433ae14d0586b30fef7b292e301be82700c6478971c423dce9501600455612be5565b81549060031b9060018060a01b038416821b9160018060a01b03901b191617905561073360405192839260018060a01b03168352604060208401526040830190612cf8565b82516001600160a01b031681830155602090920191600101612791565b612851908460005285846000209182019101612fb4565b87612783565b015190508a80612723565b908460005260206000209160005b601f19851681106128bd575083612750936002969360019360409997601f198116106128a4575b505050811b018355612738565b015160001960f88460031b161c191690558a8080612897565b91926020600181928685015181550194019201612870565b60405162461bcd60e51b815260206004820152602660248201527f416c616d6174207375646168207465726461667461722073656261676169205060448201526530b9b4b2b71760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f446f6b746572207375646168207465726461667461722e0000000000000000006044820152606490fd5b3461016d57602036600319011261016d5761299460018060a01b03600054163314612f56565b6004356000908152600660205260409020600d01805460ff19169055005b3461016d57602036600319011261016d576004356004548110156129db576121e6602091612be5565b60405162461bcd60e51b815260206004820152601960248201527f496e64657820646f6b74657220746964616b2076616c69642e000000000000006044820152606490fd5b3461016d5760208060031936011261016d57612a3a612bb9565b9060018060a01b03612a5181600054163314612f56565b8216806000526002825260ff60406000205416612b0d57806000526003825260ff60406000205416612ac857612abf7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470589382600052600384526040600020600160ff19825416179055613010565b604051908152a1005b60405162461bcd60e51b815260048101839052601760248201527f50617369656e207375646168207465726461667461722e0000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101839052602660248201527f416c616d6174207375646168207465726461667461722073656261676169204460448201526537b5ba32b91760d11b6064820152608490fd5b3461016d57604036600319011261016d57612b7a612bb9565b6001600160a01b031660009081526007602052604090208054602435919082101561016d57602091612bab91612c32565b90546040519160031b1c8152f35b600435906001600160a01b038216820361016d57565b602435906001600160a01b038216820361016d57565b600454811015612c1c5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015612c1c5760005260206000200190600090565b6101c081019081106001600160401b038211176107d157604052565b604081019081106001600160401b038211176107d157604052565b90601f801991011681019081106001600160401b038211176107d157604052565b81601f8201121561016d578035906001600160401b0382116107d15760405192612cd6601f8401601f191660200185612c81565b8284526020838301011161016d57816000926020809301838601378301015290565b919082519283825260005b848110612d24575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612d03565b90815180825260208080930193019160005b828110612d58575050505090565b83516001600160a01b031685529381019392810192600101612d4a565b90600182811c92168015612da5575b6020831014612d8f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612d84565b9060405191826000825492612dc384612d75565b908184526001948581169081600014612e325750600114612def575b5050612ded92500383612c81565b565b9093915060005260209081600020936000915b818310612e1a575050612ded93508201013880612ddf565b85548884018501529485019487945091830191612e02565b915050612ded94506020925060ff191682840152151560051b8201013880612ddf565b9d9e9d6101a09c98612ed9829f9c9699612ecb612f329f9a612ebd612f239f989d612f059c612f149f612ef69c612eaa91612ee79c8c5260018060a01b031660208c01526101c08060408d01528b0190612cf8565b9160608a015288820360808a0152612cf8565b9086820360a0880152612cf8565b9084820360c0860152612cf8565b9160e0818403910152612cf8565b8c81036101008e015290612cf8565b908a82036101208c0152612cf8565b908882036101408a0152612cf8565b90868203610160880152612cf8565b90848203610180860152612cf8565b931515910152565b8054821015612c1c57600052600e602060002091020190600090565b15612f5d57565b60405162461bcd60e51b815260206004820152602960248201527f48616e79612061646d696e2079616e672062697361206d656c616b756b616e2060448201526830b5b9b49034b7349760b91b6064820152608490fd5b818110612fbf575050565b60008155600101612fb4565b9190601f8111612fda57505050565b612ded926000526020600020906020601f840160051c83019310613006575b601f0160051c0190612fb4565b9091508190612ff9565b600554600160401b8110156107d1576001810180600555811015612c1c5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03909216919091179055565b1561307b57565b60405162461bcd60e51b815260206004820152601760248201527f446f6b74657220746964616b207465726461667461722e0000000000000000006044820152606490fd5b60001981146130cf5760010190565b634e487b7160e01b600052601160045260246000fd5b60018060a01b038091166000526001908160205260026040600020016000938154945b85811061311a57505050505050600090565b836131258285612c32565b9190548185169260031b1c16146131445761313f906130c0565b613108565b50505050905090565b6000546001600160a01b03918216911681146131f65780600052600260205260ff604060002054166131d357600052600360205260ff604060002054166131b15760405161319a81612c66565b60078152662ab735b737bbb760c91b602082015290565b6040516131bd81612c66565b60068152652830b9b4b2b760d11b602082015290565b506040516131e081612c66565b60068152652237b5ba32b960d11b602082015290565b5060405161320381612c66565b600581526420b236b4b760d91b602082015290565b908082146132ec5761322a8154612d75565b906001600160401b0382116107d1578190613249826126fa8654612d75565b600090601f831160011461328057600092613275575b50508160011b916000199060031b1c1916179055565b01549050388061325f565b81526020808220858352818320935090601f1985169083905b8282106132d35750509084600195949392106132ba575b505050811b019055565b015460001960f88460031b161c191690553880806132b0565b8495819295850154815560018091019601940190613299565b505056fea26469706673582212207d71f77cfd477761635de894afd09c46d29a393a08c0d78206454563d37e89e464736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c8062410cb314612b61578063010ef3b314612a20578063046bdbcc146129b2578063083d88241461296e578063107e202f146125c55780631132beb51461258657806319e8f405146123dc57806327820851146123a45780632e2dd10214612386578063334181f2146122c05780633da05518146121ff57806342699651146121bd57806351887b67146121285780635c4c9348146120e9578063683700871461208e57806368f5dc99146114a457806370419a811461146e578063704b6c02146113fc5780637d3e9db8146113de578063932e0f6d1461132e578063abf72abb146112eb578063c3c0fdea14611288578063c967ede8146111d4578063d688780214610f0c578063dd09a96814610e24578063f7dc5714146101725763f851a4401461014457600080fd5b3461016d57600036600319011261016d576000546040516001600160a01b039091168152602090f35b600080fd5b3461016d5761018036600319011261016d576024356001600160401b03811161016d576101a3903690600401612ca2565b6064356001600160401b03811161016d576101c2903690600401612ca2565b6084356001600160401b03811161016d576101e1903690600401612ca2565b9160a4356001600160401b03811161016d57610201903690600401612ca2565b9060c4356001600160401b03811161016d57610221903690600401612ca2565b60e4356001600160401b03811161016d57610240903690600401612ca2565b610104356001600160401b03811161016d57610260903690600401612ca2565b91610124356001600160401b03811161016d57610281903690600401612ca2565b94610144356001600160401b03811161016d576102a2903690600401612ca2565b97610164356001600160401b03811161016d576102c3903690600401612ca2565b97600435600052600660205260018060a01b036001604060002001541633600052600260205260ff6040600020541680610e0d575b15610daa5761030790336130e5565b15610d54576004356000526006602052604060002096600960205260406000208054600160401b8110156107d15761034491600182018155612f3a565b610d3e57888103610c48575b508051906001600160401b0382116107d157819061037e8261037560028d0154612d75565b60028d01612fcb565b602090601f8311600114610bd657600092610bcb575b50508160011b916000199060031b1c19161760028801555b60443560038801558051906001600160401b0382116107d15781906103e1826103d860048c0154612d75565b60048c01612fcb565b602090601f8311600114610b5957600092610b4e575b50508160011b916000199060031b1c19161760048701555b8051906001600160401b0382116107d157819061043c8261043360058b0154612d75565b60058b01612fcb565b602090601f8311600114610adc57600092610ad1575b50508160011b916000199060031b1c19161760058601555b8051906001600160401b0382116107d15781906104978261048e60068a0154612d75565b60068a01612fcb565b602090601f8311600114610a5f57600092610a54575b50508160011b916000199060031b1c19161760068501555b8051906001600160401b0382116107d15781906104f2826104e96007890154612d75565b60078901612fcb565b602090601f83116001146109e2576000926109d7575b50508160011b916000199060031b1c19161760078401555b8051906001600160401b0382116107d157819061054d826105446008880154612d75565b60088801612fcb565b602090601f83116001146109655760009261095a575b50508160011b916000199060031b1c19161760088301555b8051906001600160401b0382116107d15781906105a88261059f6009870154612d75565b60098701612fcb565b602090601f83116001146108e8576000926108dd575b50508160011b916000199060031b1c19161760098201555b81516001600160401b0381116107d157610600816105f7600a850154612d75565b600a8501612fcb565b806020601f821160011461087057600091610865575b508160011b916000199060031b1c191617600a8201555b83516001600160401b0381116107d1576106578161064e600b850154612d75565b600b8501612fcb565b6020601f82116001146107f2578190600c9495966000926107e7575b50508160011b916000199060031b1c191617600b8201555b01918051926001600160401b0384116107d1576106b2846106ac8354612d75565b83612fcb565b602093601f81116001146107435791610733918361072595947f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1397600091610738575b508160011b916000199060031b1c19161790555b6040519384936004358552606060208601526060850190612cf8565b908382036040850152612cf8565b0390a1005b9050830151886106f5565b601f1981168260005260206000209060005b8181106107b957508261073394927f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1398610725989795600194106107a0575b5050811b019055610709565b85015160001960f88460031b161c191690558880610794565b85880151835560209788019760019093019201610755565b634e487b7160e01b600052604160045260246000fd5b015190508680610673565b600b830160005260206000209560005b601f198416811061084d5750958291600c959697600194601f19811610610834575b505050811b01600b82015561068b565b015160001960f88460031b161c19169055868080610824565b82820151885560019097019660209283019201610802565b905083015186610616565b9150600a830160005260206000206000925b601f19831684106108c5576001935082601f198116106108ac575b5050811b01600a82015561062d565b85015160001960f88460031b161c19169055868061089d565b85810151825560209384019360019092019101610882565b0151905086806105be565b9250600984016000526020600020906000935b601f198416851061093f576001945083601f19811610610926575b505050811b0160098201556105d6565b015160001960f88460031b161c19169055868080610916565b818101518355602094850194600190930192909101906108fb565b015190508780610563565b9250600885016000526020600020906000935b601f19841685106109bc576001945083601f198116106109a3575b505050811b01600883015561057b565b015160001960f88460031b161c19169055878080610993565b81810151835560209485019460019093019290910190610978565b015190508880610508565b9250600786016000526020600020906000935b601f1984168510610a39576001945083601f19811610610a20575b505050811b016007840155610520565b015160001960f88460031b161c19169055888080610a10565b818101518355602094850194600190930192909101906109f5565b0151905089806104ad565b9250600687016000526020600020906000935b601f1984168510610ab6576001945083601f19811610610a9d575b505050811b0160068501556104c5565b015160001960f88460031b161c19169055898080610a8d565b81810151835560209485019460019093019290910190610a72565b015190508a80610452565b9250600588016000526020600020906000935b601f1984168510610b33576001945083601f19811610610b1a575b505050811b01600586015561046a565b015160001960f88460031b161c191690558a8080610b0a565b81810151835560209485019460019093019290910190610aef565b015190508b806103f7565b9250600489016000526020600020906000935b601f1984168510610bb0576001945083601f19811610610b97575b505050811b01600487015561040f565b015160001960f88460031b161c191690558b8080610b87565b81810151835560209485019460019093019290910190610b6c565b015190508c80610394565b925060028a016000526020600020906000935b601f1984168510610c2d576001945083601f19811610610c14575b505050811b0160028801556103ac565b015160001960f88460031b161c191690558c8080610c04565b81810151835560209485019460019093019290910190610be9565b610d3890895481556001810160018060a01b0360018c0154166001600160601b0360a01b825416179055610c8260028b0160028301613218565b60038a01546003820155610c9c60048b0160048301613218565b610cac60058b0160058301613218565b610cbc60068b0160068301613218565b610ccc60078b0160078301613218565b610cdc60088b0160088301613218565b610cec60098b0160098301613218565b610cfc600a8b01600a8301613218565b610d0c600b8b01600b8301613218565b610d1c600c8b01600c8301613218565b600d60ff818c01541691019060ff801983541691151516179055565b8b610350565b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152602860248201527f446f6b74657220746964616b2064692d61737369676e20756e74756b2070617360448201526734b2b71034b7349760c11b6064820152608490fd5b60405162461bcd60e51b815260206004820152603560248201527f48616e796120646f6b74657220616b7469662079616e672062697361206d656d6044820152743832b93130b93ab4903932b5b0b69036b2b234b99760591b6064820152608490fd5b50600160205260ff600160406000200154166102f8565b3461016d57604036600319011261016d576024356004356000526009602052604060002090815481101561016d57610e5b91612f3a565b50805460018201546001600160a01b031691610f0890610e7d60028201612daf565b906003810154610e8f60048301612daf565b610e9b60058401612daf565b610ea760068501612daf565b610eb360078601612daf565b610ebf60088701612daf565b91610ecc60098801612daf565b93610ed9600a8901612daf565b95610ee6600b8a01612daf565b9760ff600d610ef7600c8d01612daf565b9b0154169a6040519e8f9e8f612e55565b0390f35b3461016d5760208060031936011261016d57600435600052600990818152604060002080546001600160401b0381116107d1579160405192600594610f558383881b0186612c81565b81855260009384528284208386019491855b8484106110d4575050505050604051928184019082855251809152604081818601961b85010192916000955b828710610fa05785850386f35b909192938280600192603f1989820301855287519081518152848060a01b038383015116838201526110b76110a361108f61107b61106761105361104161102e61101b610ffe60408c015160408c6101c091829101528c0190612cf8565b6060808d0151908c01526080808d0151908c8303908d0152612cf8565b60a0808c0151908b8303908c0152612cf8565b60c0808b0151908a8303908b0152612cf8565b60e089015188820360e08a0152612cf8565b610100808901519088830390890152612cf8565b610120808801519087830390880152612cf8565b610140808701519086830390870152612cf8565b610160808601519085830390860152612cf8565b610180808501519084830390850152612cf8565b916101a08091015115159101529601920196019592919092610f93565b600e8660019260409a989a516110e981612c4a565b86548152848060a01b0385880154168382015261110860028801612daf565b60408201526003870154606082015261112360048801612daf565b60808201526111338d8801612daf565b60a082015261114460068801612daf565b60c082015261115560078801612daf565b60e082015261116660088801612daf565b610100820152611177868801612daf565b610120820152611189600a8801612daf565b61014082015261119b600b8801612daf565b6101608201526111ad600c8801612daf565b61018082015260ff600d8801541615156101a0820152815201930193019291969496610f67565b3461016d5760208060031936011261016d576001600160a01b036111f6612bb9565b1660005260078152604060002060405190818382549182815201908192600052846000209060005b8682821061127457868661123482880383612c81565b604051928392818401908285525180915260408401929160005b82811061125d57505050500390f35b83518552869550938101939281019260010161124e565b83548552909301926001928301920161121e565b3461016d57602036600319011261016d576001600160a01b036112a9612bb9565b1660005260016020526112df604060002060ff60016112c783612daf565b92015416604051928392604084526040840190612cf8565b90151560208301520390f35b3461016d57602036600319011261016d576004356000908152600660205260409020805460018201546001600160a01b031691610f0890610e7d60028201612daf565b3461016d57604036600319011261016d57611347612bb9565b602435908115159182810361016d577f3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a926113d160409360018060a01b039061139582600054163314612f56565b16928360005260026020526113b060ff866000205416613074565b836000526001602052600185600020019060ff801983541691151516179055565b82519182526020820152a1005b3461016d57600036600319011261016d576020600454604051908152f35b3461016d57602036600319011261016d577f4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d6020611438612bb9565b600054906001600160a01b03906114523383851614612f56565b1680916001600160601b0360a01b1617600055604051908152a1005b3461016d57604036600319011261016d57602061149a61148c612bb9565b611494612bcf565b906130e5565b6040519015158152f35b3461016d5761018036600319011261016d576114be612bb9565b6024356001600160401b03811161016d576114dd903690600401612ca2565b906064356001600160401b03811161016d576114fd903690600401612ca2565b916084356001600160401b03811161016d5761151d903690600401612ca2565b9260a4356001600160401b03811161016d5761153d903690600401612ca2565b9360c4356001600160401b03811161016d5761155d903690600401612ca2565b9460e4356001600160401b03811161016d5761157d903690600401612ca2565b610104356001600160401b03811161016d5761159d903690600401612ca2565b90610124356001600160401b03811161016d576115be903690600401612ca2565b97610144356001600160401b03811161016d576115df903690600401612ca2565b93610164356001600160401b03811161016d57611600903690600401612ca2565b956001600160a01b038a16330361202e5761161c6008546130c0565b97886008556040519961162e8b612c4a565b898b5260018060a01b038c1660208c015260408b015260443560608b015260808a015260a089015260c088015260e08701526101008601526101208501528561014085015261016084015261018083015260016101a08301526000526006602052604060002090805182556001820160018060a01b036020830151166001600160601b0360a01b82541617905560408101518051906001600160401b0382116107d15781906116ed826116e46002880154612d75565b60028801612fcb565b602090601f8311600114611fbc57600092611fb1575b50508160011b916000199060031b1c19161760028301555b6060810151600383015560808101518051906001600160401b0382116107d15781906117578261174e6004880154612d75565b60048801612fcb565b602090601f8311600114611f3f57600092611f34575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116107d15781906117b7826117ae6005880154612d75565b60058801612fcb565b602090601f8311600114611ec257600092611eb7575b50508160011b916000199060031b1c19161760058301555b60c08101518051906001600160401b0382116107d15781906118178261180e6006880154612d75565b60068801612fcb565b602090601f8311600114611e4557600092611e3a575b50508160011b916000199060031b1c19161760068301555b60e08101518051906001600160401b0382116107d15781906118778261186e6007880154612d75565b60078801612fcb565b602090601f8311600114611dc857600092611dbd575b50508160011b916000199060031b1c19161760078301555b6101008101518051906001600160401b0382116107d15781906118cf826105446008880154612d75565b602090601f8311600114611d4b57600092611d40575b50508160011b916000199060031b1c19161760088301555b6101208101518051906001600160401b0382116107d1578190611930826119276009880154612d75565b60098801612fcb565b602090601f8311600114611cce57600092611cc3575b50508160011b916000199060031b1c19161760098301555b6101408101518051906001600160401b0382116107d157819061199182611988600a880154612d75565b600a8801612fcb565b602090601f8311600114611c5157600092611c46575b50508160011b916000199060031b1c191617600a8301555b6101608101518051906001600160401b0382116107d15781906119f2826119e9600b880154612d75565b600b8801612fcb565b602090601f8311600114611bd457600092611bc9575b50508160011b916000199060031b1c191617600b8301555b600c82016101808201518051906001600160401b0382116107d157611a4f82611a498554612d75565b85612fcb565b602090601f8311600114611b565792826101a093611aa0979693600d96600092611b4b575b50508160011b916000199060031b1c19161790555b0151151591019060ff801983541691151516179055565b6001600160a01b038116600090815260076020526040902060085481549391600160401b8510156107d15784611afc9160017f8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c99797018155612c32565b819291549060031b91821b91600019901b1916179055611b3f60085491604051938493845260018060a01b03166020840152608060408401526080830190612cf8565b600160608301520390a1005b015190508a80611a74565b90601f198316918460005260206000209260005b818110611bb1575093611aa0979693600d9693600193836101a09810611b98575b505050811b019055611a89565b015160001960f88460031b161c191690558a8080611b8b565b92936020600181928786015181550195019301611b6a565b015190508680611a08565b9250600b85016000526020600020906000935b601f1984168510611c2b576001945083601f19811610611c12575b505050811b01600b830155611a20565b015160001960f88460031b161c19169055868080611c02565b81810151835560209485019460019093019290910190611be7565b0151905086806119a7565b9250600a85016000526020600020906000935b601f1984168510611ca8576001945083601f19811610611c8f575b505050811b01600a8301556119bf565b015160001960f88460031b161c19169055868080611c7f565b81810151835560209485019460019093019290910190611c64565b015190508680611946565b9250600985016000526020600020906000935b601f1984168510611d25576001945083601f19811610611d0c575b505050811b01600983015561195e565b015160001960f88460031b161c19169055868080611cfc565b81810151835560209485019460019093019290910190611ce1565b0151905086806118e5565b9250600885016000526020600020906000935b601f1984168510611da2576001945083601f19811610611d89575b505050811b0160088301556118fd565b015160001960f88460031b161c19169055868080611d79565b81810151835560209485019460019093019290910190611d5e565b01519050868061188d565b9250600785016000526020600020906000935b601f1984168510611e1f576001945083601f19811610611e06575b505050811b0160078301556118a5565b015160001960f88460031b161c19169055868080611df6565b81810151835560209485019460019093019290910190611ddb565b01519050868061182d565b9250600685016000526020600020906000935b601f1984168510611e9c576001945083601f19811610611e83575b505050811b016006830155611845565b015160001960f88460031b161c19169055868080611e73565b81810151835560209485019460019093019290910190611e58565b0151905086806117cd565b9250600585016000526020600020906000935b601f1984168510611f19576001945083601f19811610611f00575b505050811b0160058301556117e5565b015160001960f88460031b161c19169055868080611ef0565b81810151835560209485019460019093019290910190611ed5565b01519050868061176d565b9250600485016000526020600020906000935b601f1984168510611f96576001945083601f19811610611f7d575b505050811b016004830155611785565b015160001960f88460031b161c19169055868080611f6d565b81810151835560209485019460019093019290910190611f52565b015190508680611703565b9250600285016000526020600020906000935b601f1984168510612013576001945083601f19811610611ffa575b505050811b01600283015561171b565b015160001960f88460031b161c19169055868080611fea565b81810151835560209485019460019093019290910190611fcf565b60405162461bcd60e51b815260206004820152603260248201527f48616e79612070617369656e2079616e672062697361206d656d62756174207260448201527132b5b0b69036b2b234b99036b2b932b5b09760711b6064820152608490fd5b3461016d57602036600319011261016d5760043560055481101561016d5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001546040516001600160a01b039091168152602090f35b3461016d57602036600319011261016d576001600160a01b0361210a612bb9565b166000526002602052602060ff604060002054166040519015158152f35b3461016d57600036600319011261016d576040518060055480825282602080930160056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09260005b8582821061219e5750505061218a92500383612c81565b610f08604051928284938452830190612d38565b85546001600160a01b0316845260019586019588955093019201612173565b3461016d57602036600319011261016d5760043560045481101561016d576121e6602091612be5565b905460405160039290921b1c6001600160a01b03168152f35b3461016d5760208060031936011261016d576001600160a01b039081612223612bb9565b1660005260019081815260406000209260ff8385015416916122486002860195612daf565b93604051928383885491828152019760005283600020916000905b8282106122a95761229589610f088a8a8a8f82612281910383612c81565b604051958695606087526060870190612cf8565b921515908501528382036040850152612d38565b835481168a52988501989284019290840190612263565b3461016d57600036600319011261016d5733600052600360205260ff60406000205416612335573360005260036020526040600020600160ff1982541617905561230933613010565b7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470586020604051338152a1005b60405162461bcd60e51b8152602060048201526024808201527f416e64612073756461682074657264616674617220736562616761692050617360448201526334b2b71760e11b6064820152608490fd5b3461016d57600036600319011261016d576020600854604051908152f35b3461016d57602036600319011261016d57610f086123c86123c3612bb9565b61314d565b604051918291602083526020830190612cf8565b3461016d57604036600319011261016d576123f5612bb9565b6123fd612bcf565b9060018060a01b03809161241682600054163314612f56565b1680600052816020936002855261243460ff60406000205416613074565b168060005260039384815260ff60406000205416156125425782600052600181526002604060002001946000948654955b8681106124c85750600160401b8610156107d1576124ac867fd9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a986001604099018155612c32565b81939154911b9185831b921b19161790558351928352820152a1005b84826124d4838b612c32565b905490861b1c16146124ee576124e9906130c0565b612465565b60405162461bcd60e51b815260048101859052602660248201527f50617369656e20737564616820646974756761736b616e206b6520646f6b7465604482015265391034b7349760d11b6064820152608490fd5b6064906040519062461bcd60e51b82526004820152601760248201527f50617369656e20746964616b207465726461667461722e0000000000000000006044820152fd5b3461016d57602036600319011261016d576001600160a01b036125a7612bb9565b166000526003602052602060ff604060002054166040519015158152f35b3461016d57604036600319011261016d576125de612bb9565b6024356001600160401b03811161016d576125fd903690600401612ca2565b61261260018060a01b03600054163314612f56565b6001600160a01b03821660009081526002602052604090205460ff16612929576001600160a01b03821660009081526003602052604090205460ff166128d55760018060a01b03821660005260026020526040600020600160ff1982541617905560405191602083018381106001600160401b038211176107d1576040526000835260405192606084018481106001600160401b038211176107d157604052828452602084019060018252604085015260018060a01b038216600052600160205260406000209084518051906001600160401b0382116107d157612700826126fa8654612d75565b86612fcb565b602090601f83116001146128625792826040959361275093600296600092612857575b50508160011b916000199060031b1c19161783555b511515600183019060ff801983541691151516179055565b01930151928351906001600160401b0382116107d157600160401b948583116107d157602090825484845580851061283a575b500190600052602060002060005b83811061281d5750505050600454928310156107d1576127d88360017fc38147498c0c3f6433ae14d0586b30fef7b292e301be82700c6478971c423dce9501600455612be5565b81549060031b9060018060a01b038416821b9160018060a01b03901b191617905561073360405192839260018060a01b03168352604060208401526040830190612cf8565b82516001600160a01b031681830155602090920191600101612791565b612851908460005285846000209182019101612fb4565b87612783565b015190508a80612723565b908460005260206000209160005b601f19851681106128bd575083612750936002969360019360409997601f198116106128a4575b505050811b018355612738565b015160001960f88460031b161c191690558a8080612897565b91926020600181928685015181550194019201612870565b60405162461bcd60e51b815260206004820152602660248201527f416c616d6174207375646168207465726461667461722073656261676169205060448201526530b9b4b2b71760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f446f6b746572207375646168207465726461667461722e0000000000000000006044820152606490fd5b3461016d57602036600319011261016d5761299460018060a01b03600054163314612f56565b6004356000908152600660205260409020600d01805460ff19169055005b3461016d57602036600319011261016d576004356004548110156129db576121e6602091612be5565b60405162461bcd60e51b815260206004820152601960248201527f496e64657820646f6b74657220746964616b2076616c69642e000000000000006044820152606490fd5b3461016d5760208060031936011261016d57612a3a612bb9565b9060018060a01b03612a5181600054163314612f56565b8216806000526002825260ff60406000205416612b0d57806000526003825260ff60406000205416612ac857612abf7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470589382600052600384526040600020600160ff19825416179055613010565b604051908152a1005b60405162461bcd60e51b815260048101839052601760248201527f50617369656e207375646168207465726461667461722e0000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101839052602660248201527f416c616d6174207375646168207465726461667461722073656261676169204460448201526537b5ba32b91760d11b6064820152608490fd5b3461016d57604036600319011261016d57612b7a612bb9565b6001600160a01b031660009081526007602052604090208054602435919082101561016d57602091612bab91612c32565b90546040519160031b1c8152f35b600435906001600160a01b038216820361016d57565b602435906001600160a01b038216820361016d57565b600454811015612c1c5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015612c1c5760005260206000200190600090565b6101c081019081106001600160401b038211176107d157604052565b604081019081106001600160401b038211176107d157604052565b90601f801991011681019081106001600160401b038211176107d157604052565b81601f8201121561016d578035906001600160401b0382116107d15760405192612cd6601f8401601f191660200185612c81565b8284526020838301011161016d57816000926020809301838601378301015290565b919082519283825260005b848110612d24575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612d03565b90815180825260208080930193019160005b828110612d58575050505090565b83516001600160a01b031685529381019392810192600101612d4a565b90600182811c92168015612da5575b6020831014612d8f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612d84565b9060405191826000825492612dc384612d75565b908184526001948581169081600014612e325750600114612def575b5050612ded92500383612c81565b565b9093915060005260209081600020936000915b818310612e1a575050612ded93508201013880612ddf565b85548884018501529485019487945091830191612e02565b915050612ded94506020925060ff191682840152151560051b8201013880612ddf565b9d9e9d6101a09c98612ed9829f9c9699612ecb612f329f9a612ebd612f239f989d612f059c612f149f612ef69c612eaa91612ee79c8c5260018060a01b031660208c01526101c08060408d01528b0190612cf8565b9160608a015288820360808a0152612cf8565b9086820360a0880152612cf8565b9084820360c0860152612cf8565b9160e0818403910152612cf8565b8c81036101008e015290612cf8565b908a82036101208c0152612cf8565b908882036101408a0152612cf8565b90868203610160880152612cf8565b90848203610180860152612cf8565b931515910152565b8054821015612c1c57600052600e602060002091020190600090565b15612f5d57565b60405162461bcd60e51b815260206004820152602960248201527f48616e79612061646d696e2079616e672062697361206d656c616b756b616e2060448201526830b5b9b49034b7349760b91b6064820152608490fd5b818110612fbf575050565b60008155600101612fb4565b9190601f8111612fda57505050565b612ded926000526020600020906020601f840160051c83019310613006575b601f0160051c0190612fb4565b9091508190612ff9565b600554600160401b8110156107d1576001810180600555811015612c1c5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03909216919091179055565b1561307b57565b60405162461bcd60e51b815260206004820152601760248201527f446f6b74657220746964616b207465726461667461722e0000000000000000006044820152606490fd5b60001981146130cf5760010190565b634e487b7160e01b600052601160045260246000fd5b60018060a01b038091166000526001908160205260026040600020016000938154945b85811061311a57505050505050600090565b836131258285612c32565b9190548185169260031b1c16146131445761313f906130c0565b613108565b50505050905090565b6000546001600160a01b03918216911681146131f65780600052600260205260ff604060002054166131d357600052600360205260ff604060002054166131b15760405161319a81612c66565b60078152662ab735b737bbb760c91b602082015290565b6040516131bd81612c66565b60068152652830b9b4b2b760d11b602082015290565b506040516131e081612c66565b60068152652237b5ba32b960d11b602082015290565b5060405161320381612c66565b600581526420b236b4b760d91b602082015290565b908082146132ec5761322a8154612d75565b906001600160401b0382116107d1578190613249826126fa8654612d75565b600090601f831160011461328057600092613275575b50508160011b916000199060031b1c1916179055565b01549050388061325f565b81526020808220858352818320935090601f1985169083905b8282106132d35750509084600195949392106132ba575b505050811b019055565b015460001960f88460031b161c191690553880806132b0565b8495819295850154815560018091019601940190613299565b505056fea26469706673582212207d71f77cfd477761635de894afd09c46d29a393a08c0d78206454563d37e89e464736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "69:9317:0:-:0;;;;;;;1647:50;69:9317;;-1:-1:-1;;;;;;69:9317:0;1655:42;69:9317;;;;;;;;;;;;;",
  "deployedSourceMap": "69:9317:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;;;8356:10;69:9317;;;;;;;;;;;8356:22;69:9317;;2202:10;69:9317;;2193:8;69:9317;;;;;;;;2193:52;;;69:9317;;;;2359:45;2202:10;;2359:45;:::i;:::-;69:9317;;;;;;;8356:10;69:9317;;;;;;8493:18;69:9317;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;8577:10;;69:9317;8577:10;69:9317;2193:8;8577:10;;69:9317;;:::i;:::-;2193:8;8577:10;;69:9317;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:8;8577:10;;69:9317;;;;;8606:10;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;8635:19;;69:9317;8635:19;69:9317;;8635:19;;69:9317;;:::i;:::-;;8635:19;;69:9317;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8635:19;;69:9317;;;;;-1:-1:-1;;;;;69:9317:0;;;;8682:18;;69:9317;8682:18;69:9317;8682:18;;;69:9317;;:::i;:::-;8682:18;;;69:9317;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8682:18;;;69:9317;;;;;-1:-1:-1;;;;;69:9317:0;;;;8727:12;;69:9317;8727:12;69:9317;8356:10;8727:12;;69:9317;;:::i;:::-;8356:10;8727:12;;69:9317;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8356:10;8727:12;;69:9317;;;;;-1:-1:-1;;;;;69:9317:0;;;;8760:12;;69:9317;8760:12;69:9317;8760:12;;;69:9317;;:::i;:::-;8760:12;;;69:9317;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8760:12;;;69:9317;;;;;-1:-1:-1;;;;;69:9317:0;;;;8793:15;;69:9317;8793:15;69:9317;8793:15;;;69:9317;;:::i;:::-;8793:15;;;69:9317;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8793:15;;;69:9317;;;;;-1:-1:-1;;;;;69:9317:0;;;;8832:11;;69:9317;8832:11;69:9317;8493:18;8832:11;;69:9317;;:::i;:::-;8493:18;8832:11;;69:9317;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8493:18;8832:11;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;8863:14;69:9317;8863:14;;;69:9317;;:::i;:::-;8863:14;;;69:9317;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8863:14;;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;8900:10;69:9317;8900:10;;;69:9317;;:::i;:::-;8900:10;;;69:9317;:::i;:::-;;;;;;;;;;;8929:13;69:9317;;;;;;;;;;;;;;;;;;;;;;;8900:10;;;69:9317;;8929:13;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;8969:46;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;8969:46;;;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8969:46;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;8900:10;;;69:9317;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;8929:13;69:9317;;;;;;;;;;;;;;;;;;;8900:10;;;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8863:14;;;;;69:9317;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;8863:14;;;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;8832:11;;8493:18;8832:11;;69:9317;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;8493:18;8832:11;;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;8793:15;;;;;69:9317;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;8793:15;;;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;8760:12;;;;;69:9317;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;8760:12;;;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;8727:12;;8356:10;8727:12;;69:9317;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;8356:10;8727:12;;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;8682:18;;;;;69:9317;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;8682:18;;;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;8635:19;;69:9317;8635:19;;69:9317;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;8635:19;;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;8577:10;;2193:8;8577:10;;69:9317;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;2193:8;8577:10;;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;2193:8;69:9317;;2193:8;69:9317;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;8356:10;69:9317;;8356:10;69:9317;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;8493:18;69:9317;;8493:18;69:9317;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;2193:52;69:9317;;;;;;;;;2217:28;69:9317;;2193:52;;69:9317;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;1075:59;69:9317;;;;;;;;1075:59;;;;;;;;:::i;:::-;-1:-1:-1;69:9317:0;;;1075:59;;69:9317;-1:-1:-1;;;;;69:9317:0;;;;1075:59;;;;;:::i;:::-;;69:9317;1075:59;;69:9317;1075:59;69:9317;1075:59;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;69:9317;1075:59;;;;;;:::i;:::-;;;69:9317;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9197:18;69:9317;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;:::i;:::-;;;;6471:18;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;-1:-1:-1;;;;;69:9317:0;;:::i;:::-;;;;;;;;;;;;;233:44;;;:::i;:::-;;;69:9317;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;890:49;69:9317;;;;;;;;890:49;;69:9317;-1:-1:-1;;;;;69:9317:0;;;;890:49;;;;;:::i;69:9317::-;;;;;;-1:-1:-1;;69:9317:0;;;;;;:::i;:::-;;;;;;;;;;;;;3917:35;69:9317;3867:34;69:9317;;;;;;;;1746:110;69:9317;;;;1768:10;:19;1746:110;:::i;:::-;69:9317;;;;;3811:8;69:9317;;3803:53;69:9317;;;;;;3803:53;:::i;:::-;69:9317;;;;;;;;;;3867:25;69:9317;;;;;;;;;;;;;;;3867:34;69:9317;;;;;;;;;3917:35;69:9317;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;6781:26;69:9317;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;1746:110;1768:10;69:9317;;;1768:19;1746:110;:::i;:::-;69:9317;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;6781:26;69:9317;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;69:9317:0;;2570:10;:20;69:9317;;7310:17;;69:9317;7310:17;:::i;:::-;69:9317;;7310:17;69:9317;;;;;;;:::i;:::-;;;;;;;;;;;;7368:350;;69:9317;;7368:350;;69:9317;;;;7368:350;;69:9317;;7368:350;;69:9317;;7368:350;;69:9317;;7368:350;;69:9317;;7368:350;;69:9317;;7368:350;;69:9317;;7368:350;;69:9317;7368:350;69:9317;7368:350;;69:9317;;7368:350;;69:9317;;7368:350;;69:9317;;7368:350;;;69:9317;;;7338:10;69:9317;;;;;;;;;;;;;;;;;;;7368:350;;69:9317;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;7368:350;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:350;;69:9317;;;;;;7368:350;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:350;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:350;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;7338:10;69:9317;;;;:::i;:::-;7338:10;69:9317;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7338:10;69:9317;;;;;7368:350;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:350;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;7310:17;69:9317;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7310:17;69:9317;;;;;7368:350;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:350;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:350;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:350;;69:9317;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;7368:350;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:350;69:9317;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;7310:17;69:9317;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;7794:64;69:9317;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7310:17;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;7794:64;;;69:9317;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:350;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;7310:17;69:9317;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;7310:17;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;7338:10;69:9317;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;7338:10;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;446:29;69:9317;446:29;;;;;;69:9317;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;-1:-1:-1;;;;;69:9317:0;;:::i;:::-;;;;284:40;69:9317;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;6631:12;69:9317;;;;;;;;;6631:12;69:9317;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;380:29;;;;;;69:9317;380:29;;:::i;:::-;69:9317;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;:::i;:::-;;;;;;;;;;;;5336:7;69:9317;5336:7;;;69:9317;;5345:16;69:9317;5345:16;;;69:9317;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;5840:10;69:9317;;;;;;;;;;;;;5840:10;69:9317;;;;;;;;5926:4;69:9317;;;;;;;;5941:29;5840:10;5941:29;:::i;:::-;5986:27;69:9317;;;5840:10;69:9317;;5986:27;69:9317;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;1007:27;69:9317;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:9317:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;1746:110;69:9317;;;;1768:10;:19;1746:110;:::i;:::-;69:9317;;;;;;;4135:8;69:9317;;4127:53;69:9317;;;;;;4127:53;:::i;:::-;69:9317;;;;;;;;;;;;;;;;;;;;;;;;4135:8;69:9317;;;4290:34;4340:10;69:9317;;;;4335:188;4352:23;;;;;;69:9317;-1:-1:-1;;;69:9317:0;;;;;;;4575:40;69:9317;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;4575:40;69:9317;4377:3;4401:15;;;;;;:::i;:::-;69:9317;;;;;;;4401:26;4397:115;;4377:3;;;:::i;:::-;4340:10;;4397:115;69:9317;;-1:-1:-1;;;4448:48:0;;69:9317;4448:48;;69:9317;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;4448:48;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;-1:-1:-1;;;;;69:9317:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;:::i;:::-;1746:110;69:9317;;;;;;;;1768:10;:19;1746:110;:::i;:::-;-1:-1:-1;;;;;69:9317:0;;;;;;2884:8;69:9317;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;2884:8;69:9317;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;3077:118;;69:9317;;;;;3077:118;;69:9317;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;2884:8;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3077:118;;69:9317;;;;;-1:-1:-1;;;;;69:9317:0;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3248:31;69:9317;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;;;2884:8;69:9317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;1746:110;69:9317;;;;;;;;1768:10;:19;1746:110;:::i;:::-;69:9317;;;;;;9346:10;69:9317;;;;;9346:21;;69:9317;;-1:-1:-1;;69:9317:0;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;;3568:27;;69:9317;;;3643:19;69:9317;3643:19;;:::i;69:9317::-;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1746:110;69:9317;;;;1768:10;:19;1746:110;:::i;:::-;69:9317;;;;;5492:8;69:9317;;;;;;;;;;;;;;;;;;;;;;;;5663:26;5705:24;69:9317;;;;;;;;;;;;;;;;;;;5663:26;:::i;:::-;69:9317;;;;;5705:24;69:9317;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;:::i;:::-;-1:-1:-1;;;;;69:9317:0;;;;;946:52;69:9317;;;;;;;;;;;946:52;;;;;69:9317;946:52;;;;:::i;:::-;69:9317;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;69:9317:0;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;69:9317:0;;;;-1:-1:-1;69:9317:0;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;-1:-1:-1;69:9317:0;;;-1:-1:-1;69:9317:0;:::o;:::-;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;69:9317:0;;;;-1:-1:-1;69:9317:0;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;69:9317:0;;;-1:-1:-1;69:9317:0;;;;;-1:-1:-1;69:9317:0;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;69:9317:0;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;69:9317:0;;;;;5663:12;69:9317;-1:-1:-1;;;69:9317:0;;;;;;;;;5663:12;69:9317;;;;;;5663:12;-1:-1:-1;69:9317:0;;;;;-1:-1:-1;;;;;;69:9317:0;-1:-1:-1;;;;;69:9317:0;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;69:9317:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9317:0;;;;;;;:::o;:::-;;;;;;;;;;;;4682:384;69:9317;;;;;;;;-1:-1:-1;69:9317:0;;;;;;4844:34;69:9317;-1:-1:-1;69:9317:0;4844:34;-1:-1:-1;69:9317:0;;;4889:147;4906:21;;;;;;5046:12;;;;;;-1:-1:-1;4682:384:0;:::o;4929:3::-;4953:13;;;;;:::i;:::-;69:9317;;;;;;;;;;;4953:24;4949:76;;4929:3;;;:::i;:::-;4894:10;;4949:76;4998:11;;;;;;;:::o;6051:246::-;6147:5;69:9317;-1:-1:-1;;;;;69:9317:0;;;;;6138:14;;6134:34;;69:9317;6147:5;69:9317;6183:8;69:9317;;;;6147:5;69:9317;;;6179:36;;6147:5;69:9317;6230:8;69:9317;;;;6147:5;69:9317;;;6226:36;;69:9317;;;;;:::i;:::-;;;;-1:-1:-1;;;69:9317:0;;;;6051:246;:::o;6226:36::-;69:9317;;;;;:::i;:::-;;;;-1:-1:-1;;;69:9317:0;;;;6247:15;:::o;6179:36::-;69:9317;;;;;;:::i;:::-;;;;-1:-1:-1;;;69:9317:0;;;;6200:15;:::o;6134:34::-;69:9317;;;;;;:::i;:::-;;;;-1:-1:-1;;;69:9317:0;;;;6154:14;:::o;69:9317::-;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;69:9317:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;69:9317:0;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9317:0;-1:-1:-1;;69:9317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract RekamMedis {\r\n    address public admin;\r\n\r\n    struct Dokter {\r\n        string nama;\r\n        bool aktif;\r\n        address[] assignedPasien;\r\n    }\r\n\r\n    mapping(address => Dokter) public dataDokter;\r\n    mapping(address => bool) public isDokter;\r\n    mapping(address => bool) public isPasien;\r\n\r\n    address[] public daftarDokter; // daftar semua alamat dokter\r\n    address[] public daftarPasien; // daftar semua alamat pasien\r\n\r\n    struct RekamMedisData {\r\n        uint id;\r\n        address pasien;\r\n        string nama;\r\n        uint umur;\r\n        string golonganDarah;\r\n        string tanggalLahir;\r\n        string gender;\r\n        string alamat;\r\n        string noTelepon;\r\n        string email;\r\n        string diagnosa;\r\n        string foto;\r\n        string catatan;\r\n        bool valid;\r\n    }\r\n\r\n    mapping(uint => RekamMedisData) public rekamMedis;\r\n    mapping(address => uint[]) public rekamMedisByPasien;\r\n\r\n    uint public rekamMedisCount;\r\n    // Versi history rekam medis\r\n    mapping(uint => RekamMedisData[]) public rekamMedisVersions;\r\n    event RekamMedisDitambahkan(\r\n        uint id,\r\n        address pasien,\r\n        string diagnosa,\r\n        bool valid\r\n    );\r\n    event RekamMedisDiperbarui(uint id, string diagnosa, string catatan);\r\n    event AdminDitetapkan(address newAdmin);\r\n    event DokterTerdaftar(address dokter, string nama);\r\n    event DokterStatusDiubah(address dokter, bool aktif);\r\n    event PasienDiassignKeDokter(address dokter, address pasien);\r\n    event PasienTerdaftar(address pasien);\r\n\r\n    constructor() {\r\n        admin = 0xB0dC0Bf642d339517438017Fc185Bb0f758A01D2;\r\n    }\r\n\r\n    modifier hanyaAdmin() {\r\n        require(\r\n            msg.sender == admin,\r\n            \"Hanya admin yang bisa melakukan aksi ini.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaDokterAktif() {\r\n        require(\r\n            isDokter[msg.sender] && dataDokter[msg.sender].aktif,\r\n            \"Hanya dokter aktif yang bisa memperbarui rekam medis.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaDokterAktifUntukPasien(address _pasien) {\r\n        require(\r\n            isDokter[msg.sender] && dataDokter[msg.sender].aktif,\r\n            \"Hanya dokter aktif yang bisa memperbarui rekam medis.\"\r\n        );\r\n        require(\r\n            isPasienAssignedToDokter(msg.sender, _pasien),\r\n            \"Dokter tidak di-assign untuk pasien ini.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaPasien(address pasien) {\r\n        require(\r\n            msg.sender == pasien,\r\n            \"Hanya pasien yang bisa membuat rekam medis mereka.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    // Register dokter baru dengan nama dan aktifkan langsung\r\n    function registerDokter(\r\n        address _dokter,\r\n        string memory _nama\r\n    ) public hanyaAdmin {\r\n        require(!isDokter[_dokter], \"Dokter sudah terdaftar.\");\r\n        require(!isPasien[_dokter], \"Alamat sudah terdaftar sebagai Pasien.\");\r\n        isDokter[_dokter] = true;\r\n        dataDokter[_dokter] = Dokter({\r\n            nama: _nama,\r\n            aktif: true,\r\n            assignedPasien: new address[](0)\r\n        });\r\n        daftarDokter.push(_dokter);\r\n        emit DokterTerdaftar(_dokter, _nama);\r\n    }\r\n\r\n    // Ambil total dokter terdaftar\r\n    function totalDokter() public view returns (uint) {\r\n        return daftarDokter.length;\r\n    }\r\n\r\n    // Ambil alamat dokter berdasarkan index\r\n    function getDokterByIndex(uint index) public view returns (address) {\r\n        require(index < daftarDokter.length, \"Index dokter tidak valid.\");\r\n        return daftarDokter[index];\r\n    }\r\n\r\n    // Set status dokter aktif/nonaktif\r\n    function setStatusDokter(address _dokter, bool _aktif) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        dataDokter[_dokter].aktif = _aktif;\r\n        emit DokterStatusDiubah(_dokter, _aktif);\r\n    }\r\n\r\n    // Assign pasien ke dokter tertentu\r\n    function assignPasienToDokter(\r\n        address _dokter,\r\n        address _pasien\r\n    ) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        require(isPasien[_pasien], \"Pasien tidak terdaftar.\");\r\n\r\n        address[] storage pasienDokter = dataDokter[_dokter].assignedPasien;\r\n        for (uint i = 0; i < pasienDokter.length; i++) {\r\n            if (pasienDokter[i] == _pasien) {\r\n                revert(\"Pasien sudah ditugaskan ke dokter ini.\");\r\n            }\r\n        }\r\n        pasienDokter.push(_pasien);\r\n        emit PasienDiassignKeDokter(_dokter, _pasien);\r\n    }\r\n\r\n    // Cek apakah pasien sudah diassign ke dokter\r\n    function isPasienAssignedToDokter(\r\n        address _dokter,\r\n        address _pasien\r\n    ) public view returns (bool) {\r\n        address[] storage pasienList = dataDokter[_dokter].assignedPasien;\r\n        for (uint i = 0; i < pasienList.length; i++) {\r\n            if (pasienList[i] == _pasien) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Get data dokter\r\n    function getDokter(\r\n        address _dokter\r\n    )\r\n        public\r\n        view\r\n        returns (string memory nama, bool aktif, address[] memory pasien)\r\n    {\r\n        Dokter storage d = dataDokter[_dokter];\r\n        return (d.nama, d.aktif, d.assignedPasien);\r\n    }\r\n\r\n    // Register pasien oleh admin\r\n    function registerPasien(address _pasien) public hanyaAdmin {\r\n        require(!isDokter[_pasien], \"Alamat sudah terdaftar sebagai Dokter.\");\r\n        require(!isPasien[_pasien], \"Pasien sudah terdaftar.\");\r\n        isPasien[_pasien] = true;\r\n        daftarPasien.push(_pasien);\r\n        emit PasienTerdaftar(_pasien);\r\n    }\r\n\r\n    // Self register pasien\r\n    function selfRegisterPasien() public {\r\n        require(!isPasien[msg.sender], \"Anda sudah terdaftar sebagai Pasien.\");\r\n        isPasien[msg.sender] = true;\r\n        daftarPasien.push(msg.sender);\r\n        emit PasienTerdaftar(msg.sender);\r\n    }\r\n\r\n    // Get role user\r\n    function getUserRole(address _user) public view returns (string memory) {\r\n        if (_user == admin) return \"Admin\";\r\n        if (isDokter[_user]) return \"Dokter\";\r\n        if (isPasien[_user]) return \"Pasien\";\r\n        return \"Unknown\";\r\n    }\r\n\r\n    // Ambil daftar rekam medis milik pasien\r\n    function getRekamMedisIdsByPasien(\r\n        address pasien\r\n    ) public view returns (uint[] memory) {\r\n        return rekamMedisByPasien[pasien];\r\n    }\r\n\r\n    // Ambil daftar semua pasien\r\n    function getDaftarPasien() public view returns (address[] memory) {\r\n        return daftarPasien;\r\n    }\r\n\r\n    // Set admin baru\r\n    function setAdmin(address _newAdmin) public hanyaAdmin {\r\n        admin = _newAdmin;\r\n        emit AdminDitetapkan(_newAdmin);\r\n    }\r\n\r\n    // Tambah rekam medis pasien\r\n    function tambahRekamMedis(\r\n        address _pasien,\r\n        string memory _nama,\r\n        uint _umur,\r\n        string memory _golonganDarah,\r\n        string memory _tanggalLahir,\r\n        string memory _gender,\r\n        string memory _alamat,\r\n        string memory _noTelepon,\r\n        string memory _email,\r\n        string memory _diagnosa,\r\n        string memory _foto,\r\n        string memory _catatan\r\n    ) public hanyaPasien(_pasien) {\r\n        rekamMedisCount++;\r\n        rekamMedis[rekamMedisCount] = RekamMedisData(\r\n            rekamMedisCount,\r\n            _pasien,\r\n            _nama,\r\n            _umur,\r\n            _golonganDarah,\r\n            _tanggalLahir,\r\n            _gender,\r\n            _alamat,\r\n            _noTelepon,\r\n            _email,\r\n            _diagnosa,\r\n            _foto,\r\n            _catatan,\r\n            true\r\n        );\r\n        rekamMedisByPasien[_pasien].push(rekamMedisCount);\r\n        emit RekamMedisDitambahkan(rekamMedisCount, _pasien, _diagnosa, true);\r\n    }\r\n\r\n    // Update rekam medis dokter aktif\r\n    function updateRekamMedis(\r\n        uint _id,\r\n        string memory _nama,\r\n        uint _umur,\r\n        string memory _golonganDarah,\r\n        string memory _tanggalLahir,\r\n        string memory _gender,\r\n        string memory _alamat,\r\n        string memory _noTelepon,\r\n        string memory _email,\r\n        string memory _diagnosa,\r\n        string memory _foto,\r\n        string memory _catatan\r\n    ) public hanyaDokterAktifUntukPasien(rekamMedis[_id].pasien) {\r\n        RekamMedisData storage rekam = rekamMedis[_id];\r\n        // Simpan versi lama ke array versi\r\n        rekamMedisVersions[_id].push(rekam);\r\n\r\n        // Update data rekam medis\r\n        rekam.nama = _nama;\r\n        rekam.umur = _umur;\r\n        rekam.golonganDarah = _golonganDarah;\r\n        rekam.tanggalLahir = _tanggalLahir;\r\n        rekam.gender = _gender;\r\n        rekam.alamat = _alamat;\r\n        rekam.noTelepon = _noTelepon;\r\n        rekam.email = _email;\r\n        rekam.diagnosa = _diagnosa;\r\n        rekam.foto = _foto;\r\n        rekam.catatan = _catatan;\r\n        emit RekamMedisDiperbarui(_id, _diagnosa, _catatan);\r\n    }\r\n\r\n    // Fungsi untuk ambil versi rekam medis\r\n    function getRekamMedisVersions(\r\n        uint _id\r\n    ) public view returns (RekamMedisData[] memory) {\r\n        return rekamMedisVersions[_id];\r\n    }\r\n\r\n    // Nonaktifkan rekam medis (admin)\r\n    function nonaktifkanRekamMedis(uint _id) public hanyaAdmin {\r\n        rekamMedis[_id].valid = false;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\RekamMedisBlockchain\\contracts\\RekamMedis.sol",
  "ast": {
    "absolutePath": "project:/contracts/RekamMedis.sol",
    "exportedSymbols": {
      "RekamMedis": [
        815
      ]
    },
    "id": 816,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "RekamMedis",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 815,
        "linearizedBaseContracts": [
          815
        ],
        "name": "RekamMedis",
        "nameLocation": "78:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 3,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "111:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "96:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "96:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RekamMedis.Dokter",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "nama",
                "nameLocation": "157:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "150:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "150:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "aktif",
                "nameLocation": "177:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "172:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "assignedPasien",
                "nameLocation": "203:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "193:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9,
                  "nodeType": "ArrayTypeName",
                  "src": "193:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Dokter",
            "nameLocation": "132:6:0",
            "nodeType": "StructDefinition",
            "scope": 815,
            "src": "125:100:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3c0fdea",
            "id": 16,
            "mutability": "mutable",
            "name": "dataDokter",
            "nameLocation": "267:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "233:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
              "typeString": "mapping(address => struct RekamMedis.Dokter)"
            },
            "typeName": {
              "id": 15,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "241:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "233:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                "typeString": "mapping(address => struct RekamMedis.Dokter)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 14,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 13,
                  "name": "Dokter",
                  "nameLocations": [
                    "252:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "252:6:0"
                },
                "referencedDeclaration": 11,
                "src": "252:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                  "typeString": "struct RekamMedis.Dokter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c4c9348",
            "id": 20,
            "mutability": "mutable",
            "name": "isDokter",
            "nameLocation": "316:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "284:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 19,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "292:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "284:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 18,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "303:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1132beb5",
            "id": 24,
            "mutability": "mutable",
            "name": "isPasien",
            "nameLocation": "363:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "331:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 23,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "339:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "331:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 22,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "350:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "42699651",
            "id": 27,
            "mutability": "mutable",
            "name": "daftarDokter",
            "nameLocation": "397:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "380:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "380:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 26,
              "nodeType": "ArrayTypeName",
              "src": "380:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68370087",
            "id": 30,
            "mutability": "mutable",
            "name": "daftarPasien",
            "nameLocation": "463:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "446:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "446:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "446:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RekamMedis.RekamMedisData",
            "id": 59,
            "members": [
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "552:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "547:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "547:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "pasien",
                "nameLocation": "573:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "565:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 33,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "565:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "nama",
                "nameLocation": "597:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "590:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "590:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "umur",
                "nameLocation": "617:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "612:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "612:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "golonganDarah",
                "nameLocation": "639:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "632:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 39,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "632:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "tanggalLahir",
                "nameLocation": "670:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "663:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 41,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "gender",
                "nameLocation": "700:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "693:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 43,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "alamat",
                "nameLocation": "724:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "717:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 45,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "noTelepon",
                "nameLocation": "748:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "741:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 47,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "741:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "email",
                "nameLocation": "775:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "768:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 49,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "768:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "diagnosa",
                "nameLocation": "798:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "791:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 51,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "791:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "foto",
                "nameLocation": "824:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "817:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 53,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "817:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "catatan",
                "nameLocation": "846:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "839:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 55,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "839:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "869:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "864:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 57,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "864:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RekamMedisData",
            "nameLocation": "521:14:0",
            "nodeType": "StructDefinition",
            "scope": 815,
            "src": "514:368:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "abf72abb",
            "id": 64,
            "mutability": "mutable",
            "name": "rekamMedis",
            "nameLocation": "929:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "890:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
              "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData)"
            },
            "typeName": {
              "id": 63,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 60,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "898:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "890:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 62,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 61,
                  "name": "RekamMedisData",
                  "nameLocations": [
                    "906:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59,
                  "src": "906:14:0"
                },
                "referencedDeclaration": 59,
                "src": "906:14:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                  "typeString": "struct RekamMedis.RekamMedisData"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "00410cb3",
            "id": 69,
            "mutability": "mutable",
            "name": "rekamMedisByPasien",
            "nameLocation": "980:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "946:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 68,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "954:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "946:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 66,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "965:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 67,
                "nodeType": "ArrayTypeName",
                "src": "965:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2e2dd102",
            "id": 71,
            "mutability": "mutable",
            "name": "rekamMedisCount",
            "nameLocation": "1019:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1007:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1007:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd09a968",
            "id": 77,
            "mutability": "mutable",
            "name": "rekamMedisVersions",
            "nameLocation": "1116:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1075:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData[])"
            },
            "typeName": {
              "id": 76,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 72,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1083:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1075:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 74,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 73,
                    "name": "RekamMedisData",
                    "nameLocations": [
                      "1091:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 59,
                    "src": "1091:14:0"
                  },
                  "referencedDeclaration": 59,
                  "src": "1091:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                    "typeString": "struct RekamMedis.RekamMedisData"
                  }
                },
                "id": 75,
                "nodeType": "ArrayTypeName",
                "src": "1091:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr",
                  "typeString": "struct RekamMedis.RekamMedisData[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c997",
            "id": 87,
            "name": "RekamMedisDitambahkan",
            "nameLocation": "1147:21:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1184:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1179:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1205:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1197:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "diagnosa",
                  "nameLocation": "1229:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1222:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "1253:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1248:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1168:97:0"
            },
            "src": "1141:125:0"
          },
          {
            "anonymous": false,
            "eventSelector": "2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e13",
            "id": 95,
            "name": "RekamMedisDiperbarui",
            "nameLocation": "1278:20:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1304:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1299:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "diagnosa",
                  "nameLocation": "1315:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1308:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "catatan",
                  "nameLocation": "1332:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1325:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:42:0"
            },
            "src": "1272:69:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d",
            "id": 99,
            "name": "AdminDitetapkan",
            "nameLocation": "1353:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "1377:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1369:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:18:0"
            },
            "src": "1347:40:0"
          },
          {
            "anonymous": false,
            "eventSelector": "c38147498c0c3f6433ae14d0586b30fef7b292e301be82700c6478971c423dce",
            "id": 105,
            "name": "DokterTerdaftar",
            "nameLocation": "1399:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1423:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1415:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nama",
                  "nameLocation": "1438:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1431:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1414:29:0"
            },
            "src": "1393:51:0"
          },
          {
            "anonymous": false,
            "eventSelector": "3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a",
            "id": 111,
            "name": "DokterStatusDiubah",
            "nameLocation": "1456:18:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1483:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1475:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "aktif",
                  "nameLocation": "1496:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1491:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1491:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1474:28:0"
            },
            "src": "1450:53:0"
          },
          {
            "anonymous": false,
            "eventSelector": "d9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a",
            "id": 117,
            "name": "PasienDiassignKeDokter",
            "nameLocation": "1515:22:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1546:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1538:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1562:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1554:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1537:32:0"
            },
            "src": "1509:61:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da47058",
            "id": 121,
            "name": "PasienTerdaftar",
            "nameLocation": "1582:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1606:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1598:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:16:0"
            },
            "src": "1576:38:0"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1636:69:0",
              "statements": [
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1647:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307842306443304266363432643333393531373433383031374663313835426230663735384130314432",
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1655:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xB0dC0Bf642d339517438017Fc185Bb0f758A01D2"
                    },
                    "src": "1647:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:50:0"
                }
              ]
            },
            "id": 129,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1633:2:0"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1636:0:0"
            },
            "scope": 815,
            "src": "1622:83:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1735:141:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 132,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1768:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1772:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1768:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 134,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1782:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1768:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612061646d696e2079616e672062697361206d656c616b756b616e20616b736920696e692e",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1802:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40743133d152203b81977e888be4a239119d67c3c029e27406bd4fbf4c6eff2f",
                          "typeString": "literal_string \"Hanya admin yang bisa melakukan aksi ini.\""
                        },
                        "value": "Hanya admin yang bisa melakukan aksi ini."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40743133d152203b81977e888be4a239119d67c3c029e27406bd4fbf4c6eff2f",
                          "typeString": "literal_string \"Hanya admin yang bisa melakukan aksi ini.\""
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1746:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1746:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:110:0"
                },
                {
                  "id": 139,
                  "nodeType": "PlaceholderStatement",
                  "src": "1867:1:0"
                }
              ]
            },
            "id": 141,
            "name": "hanyaAdmin",
            "nameLocation": "1722:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:2:0"
            },
            "src": "1713:163:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1912:186:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 144,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1945:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 147,
                          "indexExpression": {
                            "expression": {
                              "id": 145,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1954:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1958:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1954:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1945:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 148,
                              "name": "dataDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "1969:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                                "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                              }
                            },
                            "id": 151,
                            "indexExpression": {
                              "expression": {
                                "id": 149,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1980:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1984:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1980:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1969:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dokter_$11_storage",
                              "typeString": "struct RekamMedis.Dokter storage ref"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1992:5:0",
                          "memberName": "aktif",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "1969:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1945:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e796120646f6b74657220616b7469662079616e672062697361206d656d70657262617275692072656b616d206d656469732e",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2012:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        },
                        "value": "Hanya dokter aktif yang bisa memperbarui rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1923:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1923:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1923:155:0"
                },
                {
                  "id": 157,
                  "nodeType": "PlaceholderStatement",
                  "src": "2089:1:0"
                }
              ]
            },
            "id": 159,
            "name": "hanyaDokterAktif",
            "nameLocation": "1893:16:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1909:2:0"
            },
            "src": "1884:214:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "2160:332:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 164,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2193:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 167,
                          "indexExpression": {
                            "expression": {
                              "id": 165,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2202:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2206:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2202:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2193:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 168,
                              "name": "dataDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "2217:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                                "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                              }
                            },
                            "id": 171,
                            "indexExpression": {
                              "expression": {
                                "id": 169,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2228:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2232:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2228:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2217:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dokter_$11_storage",
                              "typeString": "struct RekamMedis.Dokter storage ref"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2240:5:0",
                          "memberName": "aktif",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "2217:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2193:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e796120646f6b74657220616b7469662079616e672062697361206d656d70657262617275692072656b616d206d656469732e",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2260:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        },
                        "value": "Hanya dokter aktif yang bisa memperbarui rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2171:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2171:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:155:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 179,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2384:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2388:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2384:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 181,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "2396:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 178,
                          "name": "isPasienAssignedToDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 430,
                          "src": "2359:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2359:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b2064692d61737369676e20756e74756b2070617369656e20696e692e",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2419:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e82baccf1116aea183061ae2d562c35c217635aaf6d8edae2e53db74fd1d63d",
                          "typeString": "literal_string \"Dokter tidak di-assign untuk pasien ini.\""
                        },
                        "value": "Dokter tidak di-assign untuk pasien ini."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e82baccf1116aea183061ae2d562c35c217635aaf6d8edae2e53db74fd1d63d",
                          "typeString": "literal_string \"Dokter tidak di-assign untuk pasien ini.\""
                        }
                      ],
                      "id": 177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2337:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2337:135:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "2337:135:0"
                },
                {
                  "id": 186,
                  "nodeType": "PlaceholderStatement",
                  "src": "2483:1:0"
                }
              ]
            },
            "id": 188,
            "name": "hanyaDokterAktifUntukPasien",
            "nameLocation": "2115:27:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "2151:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "2143:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2142:17:0"
            },
            "src": "2106:386:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "2537:151:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2570:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2574:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2570:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 195,
                          "name": "pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "2584:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2570:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612070617369656e2079616e672062697361206d656d627561742072656b616d206d65646973206d6572656b612e",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2605:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be9e5faf1ada86bba8df6c823638bf7d94a2e628e433585b67a75bd6684f5304",
                          "typeString": "literal_string \"Hanya pasien yang bisa membuat rekam medis mereka.\""
                        },
                        "value": "Hanya pasien yang bisa membuat rekam medis mereka."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be9e5faf1ada86bba8df6c823638bf7d94a2e628e433585b67a75bd6684f5304",
                          "typeString": "literal_string \"Hanya pasien yang bisa membuat rekam medis mereka.\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2548:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2548:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:120:0"
                },
                {
                  "id": 200,
                  "nodeType": "PlaceholderStatement",
                  "src": "2679:1:0"
                }
              ]
            },
            "id": 202,
            "name": "hanyaPasien",
            "nameLocation": "2509:11:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "2529:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2521:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2521:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2520:16:0"
            },
            "src": "2500:188:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "2864:423:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2883:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 212,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2884:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 214,
                          "indexExpression": {
                            "id": 213,
                            "name": "_dokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2893:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2884:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b746572207375646168207465726461667461722e",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2903:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_244ba53ff803a73914781092e4815e3084e42d1edb577a9193f81c0183023344",
                          "typeString": "literal_string \"Dokter sudah terdaftar.\""
                        },
                        "value": "Dokter sudah terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_244ba53ff803a73914781092e4815e3084e42d1edb577a9193f81c0183023344",
                          "typeString": "literal_string \"Dokter sudah terdaftar.\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2875:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2875:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "2875:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2948:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 220,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2949:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 222,
                          "indexExpression": {
                            "id": 221,
                            "name": "_dokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2958:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2949:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c616d61742073756461682074657264616674617220736562616761692050617369656e2e",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2968:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84c42e7ccb88d3ba71eb5ceba45ba7a042208342e460783b267a4a0a677d60f2",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Pasien.\""
                        },
                        "value": "Alamat sudah terdaftar sebagai Pasien."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84c42e7ccb88d3ba71eb5ceba45ba7a042208342e460783b267a4a0a677d60f2",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Pasien.\""
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2940:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:69:0"
                },
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 227,
                        "name": "isDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3020:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 229,
                      "indexExpression": {
                        "id": 228,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "3029:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3020:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3040:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3020:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3020:24:0"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 233,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3055:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "id": 234,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "3066:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3055:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 237,
                          "name": "_nama",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "3105:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3132:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3181:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3167:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 239,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3171:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 240,
                              "nodeType": "ArrayTypeName",
                              "src": "3171:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3167:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "id": 236,
                        "name": "Dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "3077:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Dokter_$11_storage_ptr_$",
                          "typeString": "type(struct RekamMedis.Dokter storage pointer)"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3099:4:0",
                        "3125:5:0",
                        "3151:14:0"
                      ],
                      "names": [
                        "nama",
                        "aktif",
                        "assignedPasien"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3077:118:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_memory_ptr",
                        "typeString": "struct RekamMedis.Dokter memory"
                      }
                    },
                    "src": "3055:140:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dokter_$11_storage",
                      "typeString": "struct RekamMedis.Dokter storage ref"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "3055:140:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 250,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "3224:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 247,
                        "name": "daftarDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "3206:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3219:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3206:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3206:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "3206:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "3264:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 255,
                        "name": "_nama",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "3273:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 253,
                      "name": "DokterTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "3248:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3248:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "EmitStatement",
                  "src": "3243:36:0"
                }
              ]
            },
            "functionSelector": "107e202f",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 209,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 208,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "2853:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "2853:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2853:10:0"
              }
            ],
            "name": "registerDokter",
            "nameLocation": "2768:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "2801:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "2793:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2793:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "2833:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "2819:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2782:63:0"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2864:0:0"
            },
            "scope": 815,
            "src": "2759:528:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "3382:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 264,
                      "name": "daftarDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3400:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3413:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3400:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 263,
                  "id": 266,
                  "nodeType": "Return",
                  "src": "3393:26:0"
                }
              ]
            },
            "functionSelector": "7d3e9db8",
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDokter",
            "nameLocation": "3341:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3352:2:0"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "3376:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3375:6:0"
            },
            "scope": 815,
            "src": "3332:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "3549:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 276,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "3568:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 277,
                            "name": "daftarDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "3576:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3589:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3576:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3568:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e64657820646f6b74657220746964616b2076616c69642e",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3597:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3e7eef6eca0aa2543ab5b1b1fefb44d677dd8a64bfa1603b451f59a63157404",
                          "typeString": "literal_string \"Index dokter tidak valid.\""
                        },
                        "value": "Index dokter tidak valid."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3e7eef6eca0aa2543ab5b1b1fefb44d677dd8a64bfa1603b451f59a63157404",
                          "typeString": "literal_string \"Index dokter tidak valid.\""
                        }
                      ],
                      "id": 275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3560:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:65:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 283,
                      "name": "daftarDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3643:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 285,
                    "indexExpression": {
                      "id": 284,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "3656:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3643:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 274,
                  "id": 286,
                  "nodeType": "Return",
                  "src": "3636:26:0"
                }
              ]
            },
            "functionSelector": "046bdbcc",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDokterByIndex",
            "nameLocation": "3490:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3512:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "3507:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3507:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3506:12:0"
            },
            "returnParameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "3540:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3539:9:0"
            },
            "scope": 815,
            "src": "3481:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "3792:168:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 298,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3811:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 300,
                        "indexExpression": {
                          "id": 299,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "3820:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3811:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3830:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3803:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3803:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "3803:53:0"
                },
                {
                  "expression": {
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 304,
                          "name": "dataDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "3867:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                            "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                          }
                        },
                        "id": 306,
                        "indexExpression": {
                          "id": 305,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "3878:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3867:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$11_storage",
                          "typeString": "struct RekamMedis.Dokter storage ref"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3887:5:0",
                      "memberName": "aktif",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "3867:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 308,
                      "name": "_aktif",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "3895:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3867:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "3867:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 312,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3936:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 313,
                        "name": "_aktif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "3945:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 311,
                      "name": "DokterStatusDiubah",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3917:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3917:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "EmitStatement",
                  "src": "3912:40:0"
                }
              ]
            },
            "functionSelector": "932e0f6d",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 295,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 294,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "3781:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "3781:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3781:10:0"
              }
            ],
            "name": "setStatusDokter",
            "nameLocation": "3728:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "3752:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3744:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_aktif",
                  "nameLocation": "3766:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3761:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3761:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3743:30:0"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3792:0:0"
            },
            "scope": 815,
            "src": "3719:241:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "4116:507:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 327,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4135:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 329,
                        "indexExpression": {
                          "id": 328,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "4144:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4135:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4154:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4127:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4127:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "4127:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 334,
                          "name": "isPasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "4199:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 336,
                        "indexExpression": {
                          "id": 335,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "4208:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4199:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617369656e20746964616b207465726461667461722e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4218:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4782a23f877cf9a2cb61015c9d3479d89c3bb6c338a0540e7268bf1efb9819c",
                          "typeString": "literal_string \"Pasien tidak terdaftar.\""
                        },
                        "value": "Pasien tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4782a23f877cf9a2cb61015c9d3479d89c3bb6c338a0540e7268bf1efb9819c",
                          "typeString": "literal_string \"Pasien tidak terdaftar.\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4191:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4191:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "4191:53:0"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "pasienDokter",
                      "nameLocation": "4275:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "4257:30:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4257:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 343,
                        "nodeType": "ArrayTypeName",
                        "src": "4257:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 345,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4290:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 347,
                      "indexExpression": {
                        "id": 346,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "4301:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4290:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4310:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "4290:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4257:67:0"
                },
                {
                  "body": {
                    "id": 372,
                    "nodeType": "Block",
                    "src": "4382:141:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 361,
                              "name": "pasienDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 344,
                              "src": "4401:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 363,
                            "indexExpression": {
                              "id": 362,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "4414:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4401:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 364,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "4420:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4401:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 371,
                        "nodeType": "IfStatement",
                        "src": "4397:115:0",
                        "trueBody": {
                          "id": 370,
                          "nodeType": "Block",
                          "src": "4429:83:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "50617369656e20737564616820646974756761736b616e206b6520646f6b74657220696e692e",
                                    "id": 367,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4455:40:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c614628bd02fed10ab7037aa9ef96182341b00560e3c47f216b8b35ae12ce6a9",
                                      "typeString": "literal_string \"Pasien sudah ditugaskan ke dokter ini.\""
                                    },
                                    "value": "Pasien sudah ditugaskan ke dokter ini."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c614628bd02fed10ab7037aa9ef96182341b00560e3c47f216b8b35ae12ce6a9",
                                      "typeString": "literal_string \"Pasien sudah ditugaskan ke dokter ini.\""
                                    }
                                  ],
                                  "id": 366,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967277,
                                    4294967277
                                  ],
                                  "referencedDeclaration": 4294967277,
                                  "src": "4448:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4448:48:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 369,
                              "nodeType": "ExpressionStatement",
                              "src": "4448:48:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 354,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "4352:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 355,
                        "name": "pasienDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4356:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4369:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4356:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4352:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 373,
                  "initializationExpression": {
                    "assignments": [
                      351
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4345:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "4340:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4340:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 353,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4349:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4340:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4377:3:0",
                      "subExpression": {
                        "id": 358,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "4377:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 360,
                    "nodeType": "ExpressionStatement",
                    "src": "4377:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4335:188:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 377,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "4551:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 374,
                        "name": "pasienDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4533:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4546:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4533:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4533:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "4533:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 381,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "4598:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 382,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "4607:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 380,
                      "name": "PasienDiassignKeDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "4575:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4575:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "EmitStatement",
                  "src": "4570:45:0"
                }
              ]
            },
            "functionSelector": "19e8f405",
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 324,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 323,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "4105:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "4105:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4105:10:0"
              }
            ],
            "name": "assignPasienToDokter",
            "nameLocation": "4018:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "4057:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4049:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4049:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "4083:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4075:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4075:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4038:59:0"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4116:0:0"
            },
            "scope": 815,
            "src": "4009:614:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "4802:264:0",
              "statements": [
                {
                  "assignments": [
                    399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 399,
                      "mutability": "mutable",
                      "name": "pasienList",
                      "nameLocation": "4831:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 429,
                      "src": "4813:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4813:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 398,
                        "nodeType": "ArrayTypeName",
                        "src": "4813:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 404,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 400,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4844:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 402,
                      "indexExpression": {
                        "id": 401,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 388,
                        "src": "4855:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4844:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4864:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "4844:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4813:65:0"
                },
                {
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "4934:102:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 416,
                              "name": "pasienList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 399,
                              "src": "4953:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 418,
                            "indexExpression": {
                              "id": 417,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "4964:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4953:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 419,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "4970:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4953:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 424,
                        "nodeType": "IfStatement",
                        "src": "4949:76:0",
                        "trueBody": {
                          "id": 423,
                          "nodeType": "Block",
                          "src": "4979:46:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5005:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 394,
                              "id": 422,
                              "nodeType": "Return",
                              "src": "4998:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 409,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "4906:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 410,
                        "name": "pasienList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "4910:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4921:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4910:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4906:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 426,
                  "initializationExpression": {
                    "assignments": [
                      406
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4899:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "4894:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4894:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 408,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4903:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4894:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4929:3:0",
                      "subExpression": {
                        "id": 413,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "4929:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 415,
                    "nodeType": "ExpressionStatement",
                    "src": "4929:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4889:147:0"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5053:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 394,
                  "id": 428,
                  "nodeType": "Return",
                  "src": "5046:12:0"
                }
              ]
            },
            "functionSelector": "70419a81",
            "id": 430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPasienAssignedToDokter",
            "nameLocation": "4691:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "4734:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "4726:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4726:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "4760:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "4752:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4752:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4715:59:0"
            },
            "returnParameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "4796:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4796:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4795:6:0"
            },
            "scope": 815,
            "src": "4682:384:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 457,
              "nodeType": "Block",
              "src": "5260:110:0",
              "statements": [
                {
                  "assignments": [
                    444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 444,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "5286:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "5271:16:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                        "typeString": "struct RekamMedis.Dokter"
                      },
                      "typeName": {
                        "id": 443,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 442,
                          "name": "Dokter",
                          "nameLocations": [
                            "5271:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "5271:6:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "5271:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                          "typeString": "struct RekamMedis.Dokter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 448,
                  "initialValue": {
                    "baseExpression": {
                      "id": 445,
                      "name": "dataDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "5290:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                        "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                      }
                    },
                    "id": 447,
                    "indexExpression": {
                      "id": 446,
                      "name": "_dokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "5301:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5290:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dokter_$11_storage",
                      "typeString": "struct RekamMedis.Dokter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5271:38:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 449,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "5328:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5330:4:0",
                        "memberName": "nama",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "5328:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 451,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "5336:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5338:5:0",
                        "memberName": "aktif",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "5336:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 453,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "5345:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5347:14:0",
                        "memberName": "assignedPasien",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "5345:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "id": 455,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5327:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_bool_$_t_array$_t_address_$dyn_storage_$",
                      "typeString": "tuple(string storage ref,bool,address[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 441,
                  "id": 456,
                  "nodeType": "Return",
                  "src": "5320:42:0"
                }
              ]
            },
            "functionSelector": "3da05518",
            "id": 458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDokter",
            "nameLocation": "5107:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "5135:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "5127:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5127:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5116:33:0"
            },
            "returnParameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "nama",
                  "nameLocation": "5212:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "5198:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5198:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "aktif",
                  "nameLocation": "5223:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "5218:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5218:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "5247:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "5230:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 438,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5230:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 439,
                    "nodeType": "ArrayTypeName",
                    "src": "5230:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5197:57:0"
            },
            "scope": 815,
            "src": "5098:272:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "5472:265:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5491:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 466,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "5492:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 468,
                          "indexExpression": {
                            "id": 467,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "5501:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5492:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c616d617420737564616820746572646166746172207365626167616920446f6b7465722e",
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5511:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be029ad283bd7570d827e2efd69af31e6d9aa723e23fc4389e6b595e7e86d11b",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Dokter.\""
                        },
                        "value": "Alamat sudah terdaftar sebagai Dokter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be029ad283bd7570d827e2efd69af31e6d9aa723e23fc4389e6b595e7e86d11b",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Dokter.\""
                        }
                      ],
                      "id": 465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5483:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5483:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "5483:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5571:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 474,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "5572:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 476,
                          "indexExpression": {
                            "id": 475,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "5581:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5572:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617369656e207375646168207465726461667461722e",
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5591:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64341dd50e2f06c0cac41d11d350ddc2b418e49e56f752b197f71f27c89db58a",
                          "typeString": "literal_string \"Pasien sudah terdaftar.\""
                        },
                        "value": "Pasien sudah terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64341dd50e2f06c0cac41d11d350ddc2b418e49e56f752b197f71f27c89db58a",
                          "typeString": "literal_string \"Pasien sudah terdaftar.\""
                        }
                      ],
                      "id": 473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5563:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5563:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "5563:54:0"
                },
                {
                  "expression": {
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 481,
                        "name": "isPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5628:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 483,
                      "indexExpression": {
                        "id": 482,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "5637:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5628:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5648:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5628:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "5628:24:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 490,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "5681:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 487,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "5663:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5676:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5663:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5663:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "5663:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 494,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "5721:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 493,
                      "name": "PasienTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "5705:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5705:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "EmitStatement",
                  "src": "5700:29:0"
                }
              ]
            },
            "functionSelector": "010ef3b3",
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 462,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "5461:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "5461:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5461:10:0"
              }
            ],
            "name": "registerPasien",
            "nameLocation": "5422:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "5445:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "5437:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5437:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5436:17:0"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5472:0:0"
            },
            "scope": 815,
            "src": "5413:324:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "5811:210:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5830:21:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 502,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "5831:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 505,
                          "indexExpression": {
                            "expression": {
                              "id": 503,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5840:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5844:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5840:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5831:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e64612073756461682074657264616674617220736562616761692050617369656e2e",
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5853:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0841d6660aee72f790cc47020ada23ff80bb1ecf0407dbd179fa7f96a310aa51",
                          "typeString": "literal_string \"Anda sudah terdaftar sebagai Pasien.\""
                        },
                        "value": "Anda sudah terdaftar sebagai Pasien."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0841d6660aee72f790cc47020ada23ff80bb1ecf0407dbd179fa7f96a310aa51",
                          "typeString": "literal_string \"Anda sudah terdaftar sebagai Pasien.\""
                        }
                      ],
                      "id": 501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5822:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5822:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "5822:70:0"
                },
                {
                  "expression": {
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 510,
                        "name": "isPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5903:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 513,
                      "indexExpression": {
                        "expression": {
                          "id": 511,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5912:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5916:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5912:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5903:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5926:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5903:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "5903:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 520,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5959:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5963:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5959:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 517,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "5941:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5954:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5941:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5941:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "5941:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 525,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6002:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6006:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6002:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 524,
                      "name": "PasienTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "5986:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5986:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "EmitStatement",
                  "src": "5981:32:0"
                }
              ]
            },
            "functionSelector": "334181f2",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selfRegisterPasien",
            "nameLocation": "5783:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5801:2:0"
            },
            "returnParameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5811:0:0"
            },
            "scope": 815,
            "src": "5774:247:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "6123:174:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 537,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "6138:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 538,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "6147:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6138:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 542,
                  "nodeType": "IfStatement",
                  "src": "6134:34:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "41646d696e",
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6161:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a729ef4e25027bc652fc8b5c4d1d902947361fa7c8e7b4905e877823f27331b3",
                        "typeString": "literal_string \"Admin\""
                      },
                      "value": "Admin"
                    },
                    "functionReturnParameters": 536,
                    "id": 541,
                    "nodeType": "Return",
                    "src": "6154:14:0"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 543,
                      "name": "isDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "6183:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 545,
                    "indexExpression": {
                      "id": 544,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "6192:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6183:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 548,
                  "nodeType": "IfStatement",
                  "src": "6179:36:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "446f6b746572",
                      "id": 546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6207:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ed409fc39e86bba01e2f3ce892f3153d258f5daf56a4904da0fb72c6ff04a7d8",
                        "typeString": "literal_string \"Dokter\""
                      },
                      "value": "Dokter"
                    },
                    "functionReturnParameters": 536,
                    "id": 547,
                    "nodeType": "Return",
                    "src": "6200:15:0"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 549,
                      "name": "isPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "6230:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 551,
                    "indexExpression": {
                      "id": 550,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "6239:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6230:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 554,
                  "nodeType": "IfStatement",
                  "src": "6226:36:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "50617369656e",
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6254:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6383b0bd00903b5c3a202742c52694704f8578001e3c3fd193167fcaac2674db",
                        "typeString": "literal_string \"Pasien\""
                      },
                      "value": "Pasien"
                    },
                    "functionReturnParameters": 536,
                    "id": 553,
                    "nodeType": "Return",
                    "src": "6247:15:0"
                  }
                },
                {
                  "expression": {
                    "hexValue": "556e6b6e6f776e",
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6280:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ff165d3fe0272c13129fc9e1aecd998364a5fdcad04c6ae84a7d1dfc3d06a17",
                      "typeString": "literal_string \"Unknown\""
                    },
                    "value": "Unknown"
                  },
                  "functionReturnParameters": 536,
                  "id": 556,
                  "nodeType": "Return",
                  "src": "6273:16:0"
                }
              ]
            },
            "functionSelector": "27820851",
            "id": 558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRole",
            "nameLocation": "6060:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6080:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "6072:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6072:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6071:15:0"
            },
            "returnParameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 535,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "6108:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6108:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6107:15:0"
            },
            "scope": 815,
            "src": "6051:246:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 570,
              "nodeType": "Block",
              "src": "6453:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 566,
                      "name": "rekamMedisByPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "6471:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 568,
                    "indexExpression": {
                      "id": 567,
                      "name": "pasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "6490:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6471:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 565,
                  "id": 569,
                  "nodeType": "Return",
                  "src": "6464:33:0"
                }
              ]
            },
            "functionSelector": "c967ede8",
            "id": 571,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRekamMedisIdsByPasien",
            "nameLocation": "6360:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "6403:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "6395:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6395:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6384:32:0"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "6438:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 562,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "6438:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 563,
                    "nodeType": "ArrayTypeName",
                    "src": "6438:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6437:15:0"
            },
            "scope": 815,
            "src": "6351:154:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "6613:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 577,
                    "name": "daftarPasien",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "6631:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 576,
                  "id": 578,
                  "nodeType": "Return",
                  "src": "6624:19:0"
                }
              ]
            },
            "functionSelector": "51887b67",
            "id": 580,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDaftarPasien",
            "nameLocation": "6556:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6571:2:0"
            },
            "returnParameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "6595:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 573,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6595:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 574,
                    "nodeType": "ArrayTypeName",
                    "src": "6595:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6594:18:0"
            },
            "scope": 815,
            "src": "6547:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "6737:78:0",
              "statements": [
                {
                  "expression": {
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 587,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "6748:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 588,
                      "name": "_newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "6756:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6748:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 590,
                  "nodeType": "ExpressionStatement",
                  "src": "6748:17:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 592,
                        "name": "_newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "6797:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 591,
                      "name": "AdminDitetapkan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "6781:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6781:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 594,
                  "nodeType": "EmitStatement",
                  "src": "6776:31:0"
                }
              ]
            },
            "functionSelector": "704b6c02",
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 585,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 584,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "6726:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "6726:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6726:10:0"
              }
            ],
            "name": "setAdmin",
            "nameLocation": "6691:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "_newAdmin",
                  "nameLocation": "6708:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "6700:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6700:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6699:19:0"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6737:0:0"
            },
            "scope": 815,
            "src": "6682:133:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 664,
              "nodeType": "Block",
              "src": "7299:567:0",
              "statements": [
                {
                  "expression": {
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7310:17:0",
                    "subExpression": {
                      "id": 626,
                      "name": "rekamMedisCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "7310:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "7310:17:0"
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 629,
                        "name": "rekamMedis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "7338:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                          "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                        }
                      },
                      "id": 631,
                      "indexExpression": {
                        "id": 630,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "7349:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7338:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                        "typeString": "struct RekamMedis.RekamMedisData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 633,
                          "name": "rekamMedisCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "7397:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 634,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 598,
                          "src": "7427:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 635,
                          "name": "_nama",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 600,
                          "src": "7449:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 636,
                          "name": "_umur",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "7469:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 637,
                          "name": "_golonganDarah",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "7489:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 638,
                          "name": "_tanggalLahir",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "7518:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 639,
                          "name": "_gender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "7546:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 640,
                          "name": "_alamat",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "7568:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 641,
                          "name": "_noTelepon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "7590:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 642,
                          "name": "_email",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 614,
                          "src": "7615:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 643,
                          "name": "_diagnosa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 616,
                          "src": "7636:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 644,
                          "name": "_foto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 618,
                          "src": "7660:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 645,
                          "name": "_catatan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 620,
                          "src": "7680:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7703:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 632,
                        "name": "RekamMedisData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "7368:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RekamMedisData_$59_storage_ptr_$",
                          "typeString": "type(struct RekamMedis.RekamMedisData storage pointer)"
                        }
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7368:350:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_memory_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData memory"
                      }
                    },
                    "src": "7338:380:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "7338:380:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 654,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "7762:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 650,
                          "name": "rekamMedisByPasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "7729:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 652,
                        "indexExpression": {
                          "id": 651,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 598,
                          "src": "7748:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7729:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7757:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7729:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7729:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "7729:49:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 658,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "7816:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 659,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "7833:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 660,
                        "name": "_diagnosa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "7842:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7853:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 657,
                      "name": "RekamMedisDitambahkan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "7794:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,string memory,bool)"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7794:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 663,
                  "nodeType": "EmitStatement",
                  "src": "7789:69:0"
                }
              ]
            },
            "functionSelector": "68f5dc99",
            "id": 665,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 623,
                    "name": "_pasien",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 598,
                    "src": "7290:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 624,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 622,
                  "name": "hanyaPasien",
                  "nameLocations": [
                    "7278:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 202,
                  "src": "7278:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7278:20:0"
              }
            ],
            "name": "tambahRekamMedis",
            "nameLocation": "6866:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 598,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "6901:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "6893:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6893:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "6933:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "6919:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6919:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "_umur",
                  "nameLocation": "6954:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "6949:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6949:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 604,
                  "mutability": "mutable",
                  "name": "_golonganDarah",
                  "nameLocation": "6984:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "6970:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6970:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "_tanggalLahir",
                  "nameLocation": "7023:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "7009:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7009:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "_gender",
                  "nameLocation": "7061:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "7047:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7047:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "_alamat",
                  "nameLocation": "7093:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "7079:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7079:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "_noTelepon",
                  "nameLocation": "7125:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "7111:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7111:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "_email",
                  "nameLocation": "7160:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "7146:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7146:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "_diagnosa",
                  "nameLocation": "7191:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "7177:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7177:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "_foto",
                  "nameLocation": "7225:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "7211:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7211:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "_catatan",
                  "nameLocation": "7255:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "7241:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7241:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6882:388:0"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7299:0:0"
            },
            "scope": 815,
            "src": "6857:1009:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 784,
              "nodeType": "Block",
              "src": "8380:643:0",
              "statements": [
                {
                  "assignments": [
                    700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 700,
                      "mutability": "mutable",
                      "name": "rekam",
                      "nameLocation": "8414:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 784,
                      "src": "8391:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData"
                      },
                      "typeName": {
                        "id": 699,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 698,
                          "name": "RekamMedisData",
                          "nameLocations": [
                            "8391:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59,
                          "src": "8391:14:0"
                        },
                        "referencedDeclaration": 59,
                        "src": "8391:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "baseExpression": {
                      "id": 701,
                      "name": "rekamMedis",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "8422:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                        "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                      }
                    },
                    "id": 703,
                    "indexExpression": {
                      "id": 702,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "8433:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8422:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8391:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 709,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8522:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 705,
                          "name": "rekamMedisVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "8493:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
                            "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref[] storage ref)"
                          }
                        },
                        "id": 707,
                        "indexExpression": {
                          "id": 706,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "8512:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8493:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage",
                          "typeString": "struct RekamMedis.RekamMedisData storage ref[] storage ref"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8517:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "8493:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr_$_t_struct$_RekamMedisData_$59_storage_$returns$__$attached_to$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct RekamMedis.RekamMedisData storage ref[] storage pointer,struct RekamMedis.RekamMedisData storage ref)"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8493:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "8493:35:0"
                },
                {
                  "expression": {
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 712,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8577:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 714,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8583:4:0",
                      "memberName": "nama",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "8577:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 715,
                      "name": "_nama",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "8590:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8577:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "8577:18:0"
                },
                {
                  "expression": {
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 718,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8606:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 720,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8612:4:0",
                      "memberName": "umur",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "8606:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 721,
                      "name": "_umur",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "8619:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8606:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "8606:18:0"
                },
                {
                  "expression": {
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 724,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8635:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8641:13:0",
                      "memberName": "golonganDarah",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "8635:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 727,
                      "name": "_golonganDarah",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "8657:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8635:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "8635:36:0"
                },
                {
                  "expression": {
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 730,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8682:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8688:12:0",
                      "memberName": "tanggalLahir",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "8682:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 733,
                      "name": "_tanggalLahir",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "8703:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8682:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "8682:34:0"
                },
                {
                  "expression": {
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 736,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8727:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 738,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8733:6:0",
                      "memberName": "gender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "8727:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 739,
                      "name": "_gender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "8742:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8727:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "8727:22:0"
                },
                {
                  "expression": {
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 742,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8760:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 744,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8766:6:0",
                      "memberName": "alamat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "8760:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 745,
                      "name": "_alamat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "8775:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8760:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "8760:22:0"
                },
                {
                  "expression": {
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 748,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8793:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8799:9:0",
                      "memberName": "noTelepon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "8793:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 751,
                      "name": "_noTelepon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "8811:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8793:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "8793:28:0"
                },
                {
                  "expression": {
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 754,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8832:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 756,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8838:5:0",
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "8832:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 757,
                      "name": "_email",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "8846:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8832:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "8832:20:0"
                },
                {
                  "expression": {
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 760,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8863:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8869:8:0",
                      "memberName": "diagnosa",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "8863:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 763,
                      "name": "_diagnosa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 685,
                      "src": "8880:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8863:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "8863:26:0"
                },
                {
                  "expression": {
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 766,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8900:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8906:4:0",
                      "memberName": "foto",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "8900:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 769,
                      "name": "_foto",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "8913:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8900:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "8900:18:0"
                },
                {
                  "expression": {
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 772,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8929:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 774,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8935:7:0",
                      "memberName": "catatan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "8929:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 775,
                      "name": "_catatan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "8945:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8929:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "8929:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 779,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "8990:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 780,
                        "name": "_diagnosa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "8995:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 781,
                        "name": "_catatan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "9006:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 778,
                      "name": "RekamMedisDiperbarui",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "8969:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory)"
                      }
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8969:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 783,
                  "nodeType": "EmitStatement",
                  "src": "8964:51:0"
                }
              ]
            },
            "functionSelector": "f7dc5714",
            "id": 785,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 692,
                        "name": "rekamMedis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "8356:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                          "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                        }
                      },
                      "id": 694,
                      "indexExpression": {
                        "id": 693,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "8367:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8356:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                        "typeString": "struct RekamMedis.RekamMedisData storage ref"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8372:6:0",
                    "memberName": "pasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34,
                    "src": "8356:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 696,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 691,
                  "name": "hanyaDokterAktifUntukPasien",
                  "nameLocations": [
                    "8328:27:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 188,
                  "src": "8328:27:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8328:51:0"
              }
            ],
            "name": "updateRekamMedis",
            "nameLocation": "7923:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "7955:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "7950:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7950:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "7983:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "7969:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7969:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "_umur",
                  "nameLocation": "8004:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "7999:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7999:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "_golonganDarah",
                  "nameLocation": "8034:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8020:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8020:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "_tanggalLahir",
                  "nameLocation": "8073:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8059:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8059:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "_gender",
                  "nameLocation": "8111:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8097:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8097:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "_alamat",
                  "nameLocation": "8143:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8129:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8129:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "_noTelepon",
                  "nameLocation": "8175:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8161:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8161:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_email",
                  "nameLocation": "8210:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8196:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8196:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "_diagnosa",
                  "nameLocation": "8241:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8227:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8227:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "_foto",
                  "nameLocation": "8275:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8261:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8261:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "_catatan",
                  "nameLocation": "8305:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8291:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8291:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7939:381:0"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8380:0:0"
            },
            "scope": 815,
            "src": "7914:1109:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 798,
              "nodeType": "Block",
              "src": "9179:49:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 794,
                      "name": "rekamMedisVersions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "9197:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref[] storage ref)"
                      }
                    },
                    "id": 796,
                    "indexExpression": {
                      "id": 795,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "9216:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9197:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 793,
                  "id": 797,
                  "nodeType": "Return",
                  "src": "9190:30:0"
                }
              ]
            },
            "functionSelector": "d6887802",
            "id": 799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRekamMedisVersions",
            "nameLocation": "9085:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "9122:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "9117:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9117:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9106:26:0"
            },
            "returnParameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "9154:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct RekamMedis.RekamMedisData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 790,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 789,
                        "name": "RekamMedisData",
                        "nameLocations": [
                          "9154:14:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 59,
                        "src": "9154:14:0"
                      },
                      "referencedDeclaration": 59,
                      "src": "9154:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData"
                      }
                    },
                    "id": 791,
                    "nodeType": "ArrayTypeName",
                    "src": "9154:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr",
                      "typeString": "struct RekamMedis.RekamMedisData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9153:25:0"
            },
            "scope": 815,
            "src": "9076:152:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 813,
              "nodeType": "Block",
              "src": "9335:48:0",
              "statements": [
                {
                  "expression": {
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 806,
                          "name": "rekamMedis",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "9346:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                            "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                          }
                        },
                        "id": 808,
                        "indexExpression": {
                          "id": 807,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 801,
                          "src": "9357:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9346:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                          "typeString": "struct RekamMedis.RekamMedisData storage ref"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9362:5:0",
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "9346:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9370:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9346:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "9346:29:0"
                }
              ]
            },
            "functionSelector": "083d8824",
            "id": 814,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 804,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 803,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "9324:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "9324:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9324:10:0"
              }
            ],
            "name": "nonaktifkanRekamMedis",
            "nameLocation": "9285:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "9312:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "9307:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9307:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9306:10:0"
            },
            "returnParameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9335:0:0"
            },
            "scope": 815,
            "src": "9276:107:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 816,
        "src": "69:9317:0",
        "usedErrors": []
      }
    ],
    "src": "33:9355:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xbD3f24D614d48B2ae54f8c370cC90fcbEDC2303D",
      "transactionHash": "0xbf4c09f37ecabbb241272b6b1d3756d3dc73eb155ef96ec7cc085274bd406bfa"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-05-16T02:11:28.340Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}