{
  "contractName": "RekamMedis",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminDitetapkan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        }
      ],
      "name": "DokterStatusDiubah",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "nama",
          "type": "string"
        }
      ],
      "name": "DokterTerdaftar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "PasienDiassignKeDokter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "PasienTerdaftar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        }
      ],
      "name": "RekamMedisDiperbarui",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "RekamMedisDitambahkan",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "daftarDokter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "daftarPasien",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dataDokter",
      "outputs": [
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDokter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPasien",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedis",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedisByPasien",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rekamMedisCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        }
      ],
      "name": "registerDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDokter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getDokterByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_aktif",
          "type": "bool"
        }
      ],
      "name": "setStatusDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "assignPasienToDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        }
      ],
      "name": "getDokter",
      "outputs": [
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        },
        {
          "internalType": "address[]",
          "name": "pasien",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "registerPasien",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "selfRegisterPasien",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserRole",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "getRekamMedisIdsByPasien",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDaftarPasien",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_catatan",
          "type": "string"
        }
      ],
      "name": "tambahRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_catatan",
          "type": "string"
        }
      ],
      "name": "updateRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "nonaktifkanRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminDitetapkan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"}],\"name\":\"DokterStatusDiubah\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"}],\"name\":\"DokterTerdaftar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"PasienDiassignKeDokter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"PasienTerdaftar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"}],\"name\":\"RekamMedisDiperbarui\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"RekamMedisDitambahkan\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"assignPasienToDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daftarDokter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daftarPasien\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dataDokter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDaftarPasien\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"}],\"name\":\"getDokter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"pasien\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDokterByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"getRekamMedisIdsByPasien\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserRole\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDokter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPasien\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"nonaktifkanRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"}],\"name\":\"registerDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"registerPasien\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedisByPasien\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rekamMedisCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selfRegisterPasien\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_aktif\",\"type\":\"bool\"}],\"name\":\"setStatusDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_catatan\",\"type\":\"string\"}],\"name\":\"tambahRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDokter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_catatan\",\"type\":\"string\"}],\"name\":\"updateRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RekamMedis.sol\":\"RekamMedis\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/RekamMedis.sol\":{\"keccak256\":\"0x224627e6facebbabe198c19ccda262976ce804f94f4090d45b5a0a976a9474a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e5a708f791ce7bbb470865567cdb0d073f69788224a713eeb6d076ae01837ee\",\"dweb:/ipfs/QmQXsxoncCGTFCLjTmUqVq3PYHvvYz7uWr6zPPdrH32EA2\"]}},\"version\":1}",
  "bytecode": "0x6080806040523461003c57600080546001600160a01b03191673b0dc0bf642d339517438017fc185bb0f758a01d21790556126f190816100428239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062410cb3146121e4578063010ef3b3146120a3578063046bdbcc14612035578063083d882414611ff1578063107e202f14611c165780631132beb514611bd757806319e8f40514611a0f57806327820851146119d75780632e2dd102146119b9578063334181f2146118f35780633da055181461183257806342699651146117f057806351887b67146117575780635c4c93481461171857806368370087146116bd57806368f5dc99146108ad578063704b6c02146108365780637d3e9db814610818578063932e0f6d14610768578063abf72abb146105d6578063bb2be1cc14610268578063c3c0fdea14610205578063c967ede8146101515763f851a4401461012357600080fd5b3461014c57600036600319011261014c576000546040516001600160a01b039091168152602090f35b600080fd5b3461014c5760208060031936011261014c576001600160a01b0361017361223c565b1660005260078152604060002060405190818382549182815201908192600052846000209060005b868282106101f15786866101b1828803836122d2565b604051928392818401908285525180915260408401929160005b8281106101da57505050500390f35b8351855286955093810193928101926001016101cb565b83548552909301926001928301920161019b565b3461014c57602036600319011261014c576001600160a01b0361022661223c565b16600052600160205261025c604060002060ff600161024483612400565b92015416604051928392604084526040840190612349565b90151560208301520390f35b3461014c57606036600319011261014c576001600160401b0360043560243582811161014c5761029c9036906004016122f3565b60443583811161014c576102b49036906004016122f3565b90336000526020936002855260ff60406000205416806105c0575b1561055d578360005260068552604060002090600a8201918351928284116104a6576102fb81546123c6565b93601f9485811161052f575b50888582116001146104c7579080600c9493926000916104bc575b508160011b916000199060031b1c19161790555b019184519182116104a65761034b83546123c6565b81811161046e575b50869082116001146103df57927f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1396959492826103c1936103cf966000916103d4575b508160011b916000199060031b1c19161790555b606060405196879687528601526060850190612349565b908382036040850152612349565b0390a1005b90508501518a610396565b601f1982169083600052876000209160005b8181106104575750836103cf96937f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e139a999896936103c1966001941061043e575b5050811b0190556103aa565b87015160001960f88460031b161c191690558a80610432565b91928960018192868b0151815501940192016103f1565b6104979084600052886000208380860160051c8201928b871061049d575b0160051c0190612504565b87610353565b9250819261048c565b634e487b7160e01b600052604160045260246000fd5b90508701518b610322565b601f19821690836000528a6000209160005b8c828210610519575050918391600c96959460019410610500575b5050811b019055610336565b89015160001960f88460031b161c191690558b806104f4565b600184958293958d0151815501940192016104d9565b61055790836000528a6000208780850160051c8201928d861061049d570160051c0190612504565b89610307565b60405162461bcd60e51b815260048101869052603560248201527f48616e796120646f6b74657220616b7469662079616e672062697361206d656d6044820152743832b93130b93ab4903932b5b0b69036b2b234b99760591b6064820152608490fd5b506001855260ff600160406000200154166102cf565b3461014c57602036600319011261014c576004356000908152600660205260409020805460018201546001600160a01b03169161061560028201612400565b9060038101546004820161062890612400565b61063460058401612400565b61064060068501612400565b61064c60078601612400565b61065860088701612400565b9161066560098801612400565b93610672600a8901612400565b9561067f600b8a01612400565b9761068c600c8b01612400565b99600d015460ff169a6040519d8e809e8152602001528c6101c06040819201528d016106b791612349565b9060608d01528b810360808d01526106ce91612349565b8a810360a08c01526106df91612349565b89810360c08b01526106f091612349565b88810360e08a015261070191612349565b87810361010089015261071391612349565b86810361012088015261072591612349565b85810361014087015261073791612349565b84810361016086015261074991612349565b83810361018085015261075b91612349565b9015156101a08301520390f35b3461014c57604036600319011261014c5761078161223c565b602435908115159182810361014c577f3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a9261080b60409360018060a01b03906107cf826000541633146124a6565b16928360005260026020526107ea60ff86600020541661257f565b836000526001602052600185600020019060ff801983541691151516179055565b82519182526020820152a1005b3461014c57600036600319011261014c576020600454604051908152f35b3461014c57602036600319011261014c577f4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d602061087261223c565b600054906001600160a01b039061088c33838516146124a6565b1680916bffffffffffffffffffffffff60a01b1617600055604051908152a1005b3461014c5761018036600319011261014c576108c761223c565b6024356001600160401b03811161014c576108e69036906004016122f3565b906064356001600160401b03811161014c576109069036906004016122f3565b916084356001600160401b03811161014c576109269036906004016122f3565b9260a4356001600160401b03811161014c576109469036906004016122f3565b9360c4356001600160401b03811161014c576109669036906004016122f3565b9460e4356001600160401b03811161014c576109869036906004016122f3565b610104356001600160401b03811161014c576109a69036906004016122f3565b90610124356001600160401b03811161014c576109c79036906004016122f3565b97610144356001600160401b03811161014c576109e89036906004016122f3565b93610164356001600160401b03811161014c57610a099036906004016122f3565b956001600160a01b038a16330361165d57610a256008546125cb565b9788600855604051998a6101c08101106001600160401b036101c08d0111176104a6576101c08b01604052898b5260018060a01b038c1660208c015260408b015260443560608b015260808a015260a089015260c088015260e08701526101008601526101208501528561014085015261016084015261018083015260016101a08301526000526006602052604060002090805182556001820160018060a01b036020830151166bffffffffffffffffffffffff60a01b82541617905560408101518051906001600160401b0382116104a6578190610b0760028601546123c6565b601f8111611628575b50602090601f83116001146115b6576000926115ab575b50508160011b916000199060031b1c19161760028301555b6060810151600383015560808101518051906001600160401b0382116104a6578190610b6e60048601546123c6565b601f8111611576575b50602090601f8311600114611504576000926114f9575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116104a6578190610bcb60058601546123c6565b601f81116114c4575b50602090601f831160011461145257600092611447575b50508160011b916000199060031b1c19161760058301555b60c08101518051906001600160401b0382116104a6578190610c2860068601546123c6565b601f8111611412575b50602090601f83116001146113a057600092611395575b50508160011b916000199060031b1c19161760068301555b60e08101518051906001600160401b0382116104a6578190610c8560078601546123c6565b601f8111611360575b50602090601f83116001146112ee576000926112e3575b50508160011b916000199060031b1c19161760078301555b6101008101518051906001600160401b0382116104a6578190610ce360088601546123c6565b601f81116112ae575b50602090601f831160011461123c57600092611231575b50508160011b916000199060031b1c19161760088301555b6101208101518051906001600160401b0382116104a6578190610d4160098601546123c6565b601f81116111fc575b50602090601f831160011461118a5760009261117f575b50508160011b916000199060031b1c19161760098301555b6101408101518051906001600160401b0382116104a6578190610d9f600a8601546123c6565b601f811161114a575b50602090601f83116001146110d8576000926110cd575b50508160011b916000199060031b1c191617600a8301555b6101608101518051906001600160401b0382116104a6578190610dfd600b8601546123c6565b601f8111611098575b50602090601f83116001146110265760009261101b575b50508160011b916000199060031b1c191617600b8301555b600c82016101808201518051906001600160401b0382116104a657610e5a83546123c6565b601f8111610fde575b50602090601f8311600114610f6b5792826101a093610eb5979693600d96600092610f60575b50508160011b916000199060031b1c19161790555b0151151591019060ff801983541691151516179055565b6001600160a01b038116600090815260076020526040902060085481549391600160401b8510156104a65784610f119160017f8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c9979701815561229f565b819291549060031b91821b91600019901b1916179055610f5460085491604051938493845260018060a01b03166020840152608060408401526080830190612349565b600160608301520390a1005b015190508a80610e89565b90601f198316918460005260206000209260005b818110610fc6575093610eb5979693600d9693600193836101a09810610fad575b505050811b019055610e9e565b015160001960f88460031b161c191690558a8080610fa0565b92936020600181928786015181550195019301610f7f565b61100b90846000526020600020601f850160051c81019160208610611011575b601f0160051c0190612504565b87610e63565b9091508190610ffe565b015190508680610e1d565b9250600b85016000526020600020906000935b601f198416851061107d576001945083601f19811610611064575b505050811b01600b830155610e35565b015160001960f88460031b161c19169055868080611054565b81810151835560209485019460019093019290910190611039565b6110c790600b87016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610e06565b015190508680610dbf565b9250600a85016000526020600020906000935b601f198416851061112f576001945083601f19811610611116575b505050811b01600a830155610dd7565b015160001960f88460031b161c19169055868080611106565b818101518355602094850194600190930192909101906110eb565b61117990600a87016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610da8565b015190508680610d61565b9250600985016000526020600020906000935b601f19841685106111e1576001945083601f198116106111c8575b505050811b016009830155610d79565b015160001960f88460031b161c191690558680806111b8565b8181015183556020948501946001909301929091019061119d565b61122b90600987016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610d4a565b015190508680610d03565b9250600885016000526020600020906000935b601f1984168510611293576001945083601f1981161061127a575b505050811b016008830155610d1b565b015160001960f88460031b161c1916905586808061126a565b8181015183556020948501946001909301929091019061124f565b6112dd90600887016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610cec565b015190508680610ca5565b9250600785016000526020600020906000935b601f1984168510611345576001945083601f1981161061132c575b505050811b016007830155610cbd565b015160001960f88460031b161c1916905586808061131c565b81810151835560209485019460019093019290910190611301565b61138f90600787016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610c8e565b015190508680610c48565b9250600685016000526020600020906000935b601f19841685106113f7576001945083601f198116106113de575b505050811b016006830155610c60565b015160001960f88460031b161c191690558680806113ce565b818101518355602094850194600190930192909101906113b3565b61144190600687016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610c31565b015190508680610beb565b9250600585016000526020600020906000935b601f19841685106114a9576001945083601f19811610611490575b505050811b016005830155610c03565b015160001960f88460031b161c19169055868080611480565b81810151835560209485019460019093019290910190611465565b6114f390600587016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610bd4565b015190508680610b8e565b9250600485016000526020600020906000935b601f198416851061155b576001945083601f19811610611542575b505050811b016004830155610ba6565b015160001960f88460031b161c19169055868080611532565b81810151835560209485019460019093019290910190611517565b6115a590600487016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610b77565b015190508680610b27565b9250600285016000526020600020906000935b601f198416851061160d576001945083601f198116106115f4575b505050811b016002830155610b3f565b015160001960f88460031b161c191690558680806115e4565b818101518355602094850194600190930192909101906115c9565b61165790600287016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610b10565b60405162461bcd60e51b815260206004820152603260248201527f48616e79612070617369656e2079616e672062697361206d656d62756174207260448201527132b5b0b69036b2b234b99036b2b932b5b09760711b6064820152608490fd5b3461014c57602036600319011261014c5760043560055481101561014c5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001546040516001600160a01b039091168152602090f35b3461014c57602036600319011261014c576001600160a01b0361173961223c565b166000526002602052602060ff604060002054166040519015158152f35b3461014c57600036600319011261014c576040518060055480825282602080930160056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09260005b858282106117d1575050506117b9925003836122d2565b6117cd604051928284938452830190612389565b0390f35b85546001600160a01b03168452600195860195889550930192016117a2565b3461014c57602036600319011261014c5760043560045481101561014c57611819602091612252565b905460405160039290921b1c6001600160a01b03168152f35b3461014c5760208060031936011261014c576001600160a01b03908161185661223c565b1660005260019081815260406000209260ff83850154169161187b6002860195612400565b93604051928383885491828152019760005283600020916000905b8282106118dc576118c8896117cd8a8a8a8f826118b49103836122d2565b604051958695606087526060870190612349565b921515908501528382036040850152612389565b835481168a52988501989284019290840190611896565b3461014c57600036600319011261014c5733600052600360205260ff60406000205416611968573360005260036020526040600020600160ff1982541617905561193c3361251b565b7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470586020604051338152a1005b60405162461bcd60e51b8152602060048201526024808201527f416e64612073756461682074657264616674617220736562616761692050617360448201526334b2b71760e11b6064820152608490fd5b3461014c57600036600319011261014c576020600854604051908152f35b3461014c57602036600319011261014c576117cd6119fb6119f661223c565b6125f0565b604051918291602083526020830190612349565b3461014c57604036600319011261014c57611a2861223c565b6024906001600160a01b038235818116929083900361014c578190611a52826000541633146124a6565b16928360005260209160028352611a7060ff6040600020541661257f565b8360005260039182845260ff6040600020541615611b9457856000526001845260026040600020016000918154925b838110611b1b5750600160401b831015611b07577fd9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a60408989898989611aeb8a8a60018201815561229f565b81939154911b9185831b921b19161790558351928352820152a1005b634e487b7160e01b60009081526041600452fd5b8785611b27838661229f565b905490891b1c1614611b4157611b3c906125cb565b611a9f565b60405162461bcd60e51b8152600481018890526026818401527f50617369656e20737564616820646974756761736b616e206b6520646f6b7465604482015265391034b7349760d11b6064820152608490fd5b8360176064926040519262461bcd60e51b845260048401528201527f50617369656e20746964616b207465726461667461722e0000000000000000006044820152fd5b3461014c57602036600319011261014c576001600160a01b03611bf861223c565b166000526003602052602060ff604060002054166040519015158152f35b3461014c57604036600319011261014c57611c2f61223c565b6024356001600160401b03811161014c57611c4e9036906004016122f3565b611c6360018060a01b036000541633146124a6565b6001600160a01b03821660009081526002602052604090205460ff16611fac576001600160a01b03821660009081526003602052604090205460ff16611f585760018060a01b03821660005260026020526040600020600160ff1982541617905560405191602083018381106001600160401b038211176104a6576040526000835260405192606084018481106001600160401b038211176104a657604052828452602084019060018252604085015260018060a01b038216600052600160205260406000209084518051906001600160401b0382116104a657611d4784546123c6565b601f8111611f26575b50602090601f8311600114611eb357928260409593611da193600296600092611ea8575b50508160011b916000199060031b1c19161783555b511515600183019060ff801983541691151516179055565b01930151928351906001600160401b0382116104a657600160401b948583116104a6576020908254848455808510611e8b575b500190600052602060002060005b838110611e6e5750505050600454928310156104a657611e298360017fc38147498c0c3f6433ae14d0586b30fef7b292e301be82700c6478971c423dce9501600455612252565b81549060031b9060018060a01b038416821b9160018060a01b03901b19161790556103cf60405192839260018060a01b03168352604060208401526040830190612349565b82516001600160a01b031681830155602090920191600101611de2565b611ea2908460005285846000209182019101612504565b87611dd4565b015190508a80611d74565b908460005260206000209160005b601f1985168110611f0e575083611da1936002969360019360409997601f19811610611ef5575b505050811b018355611d89565b015160001960f88460031b161c191690558a8080611ee8565b91926020600181928685015181550194019201611ec1565b611f5290856000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87611d50565b60405162461bcd60e51b815260206004820152602660248201527f416c616d6174207375646168207465726461667461722073656261676169205060448201526530b9b4b2b71760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f446f6b746572207375646168207465726461667461722e0000000000000000006044820152606490fd5b3461014c57602036600319011261014c5761201760018060a01b036000541633146124a6565b6004356000908152600660205260409020600d01805460ff19169055005b3461014c57602036600319011261014c5760043560045481101561205e57611819602091612252565b60405162461bcd60e51b815260206004820152601960248201527f496e64657820646f6b74657220746964616b2076616c69642e000000000000006044820152606490fd5b3461014c5760208060031936011261014c576120bd61223c565b9060018060a01b036120d4816000541633146124a6565b8216806000526002825260ff6040600020541661219057806000526003825260ff6040600020541661214b576121427f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470589382600052600384526040600020600160ff1982541617905561251b565b604051908152a1005b60405162461bcd60e51b815260048101839052601760248201527f50617369656e207375646168207465726461667461722e0000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101839052602660248201527f416c616d6174207375646168207465726461667461722073656261676169204460448201526537b5ba32b91760d11b6064820152608490fd5b3461014c57604036600319011261014c576121fd61223c565b6001600160a01b031660009081526007602052604090208054602435919082101561014c5760209161222e9161229f565b90546040519160031b1c8152f35b600435906001600160a01b038216820361014c57565b6004548110156122895760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156122895760005260206000200190600090565b604081019081106001600160401b038211176104a657604052565b90601f801991011681019081106001600160401b038211176104a657604052565b81601f8201121561014c578035906001600160401b0382116104a65760405192612327601f8401601f1916602001856122d2565b8284526020838301011161014c57816000926020809301838601378301015290565b919082519283825260005b848110612375575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612354565b90815180825260208080930193019160005b8281106123a9575050505090565b83516001600160a01b03168552938101939281019260010161239b565b90600182811c921680156123f6575b60208310146123e057565b634e487b7160e01b600052602260045260246000fd5b91607f16916123d5565b9060405191826000825492612414846123c6565b9081845260019485811690816000146124835750600114612440575b505061243e925003836122d2565b565b9093915060005260209081600020936000915b81831061246b57505061243e93508201013880612430565b85548884018501529485019487945091830191612453565b91505061243e94506020925060ff191682840152151560051b8201013880612430565b156124ad57565b60405162461bcd60e51b815260206004820152602960248201527f48616e79612061646d696e2079616e672062697361206d656c616b756b616e2060448201526830b5b9b49034b7349760b91b6064820152608490fd5b81811061250f575050565b60008155600101612504565b600554600160401b8110156104a65760018101806005558110156122895760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03909216919091179055565b1561258657565b60405162461bcd60e51b815260206004820152601760248201527f446f6b74657220746964616b207465726461667461722e0000000000000000006044820152606490fd5b60001981146125da5760010190565b634e487b7160e01b600052601160045260246000fd5b6000546001600160a01b03918216911681146126995780600052600260205260ff6040600020541661267657600052600360205260ff604060002054166126545760405161263d816122b7565b60078152662ab735b737bbb760c91b602082015290565b604051612660816122b7565b60068152652830b9b4b2b760d11b602082015290565b50604051612683816122b7565b60068152652237b5ba32b960d11b602082015290565b506040516126a6816122b7565b600581526420b236b4b760d91b60208201529056fea2646970667358221220cf097a200964ab234e7add2cb6593b01f196ef6871edf2390ab63f5de736832464736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c8062410cb3146121e4578063010ef3b3146120a3578063046bdbcc14612035578063083d882414611ff1578063107e202f14611c165780631132beb514611bd757806319e8f40514611a0f57806327820851146119d75780632e2dd102146119b9578063334181f2146118f35780633da055181461183257806342699651146117f057806351887b67146117575780635c4c93481461171857806368370087146116bd57806368f5dc99146108ad578063704b6c02146108365780637d3e9db814610818578063932e0f6d14610768578063abf72abb146105d6578063bb2be1cc14610268578063c3c0fdea14610205578063c967ede8146101515763f851a4401461012357600080fd5b3461014c57600036600319011261014c576000546040516001600160a01b039091168152602090f35b600080fd5b3461014c5760208060031936011261014c576001600160a01b0361017361223c565b1660005260078152604060002060405190818382549182815201908192600052846000209060005b868282106101f15786866101b1828803836122d2565b604051928392818401908285525180915260408401929160005b8281106101da57505050500390f35b8351855286955093810193928101926001016101cb565b83548552909301926001928301920161019b565b3461014c57602036600319011261014c576001600160a01b0361022661223c565b16600052600160205261025c604060002060ff600161024483612400565b92015416604051928392604084526040840190612349565b90151560208301520390f35b3461014c57606036600319011261014c576001600160401b0360043560243582811161014c5761029c9036906004016122f3565b60443583811161014c576102b49036906004016122f3565b90336000526020936002855260ff60406000205416806105c0575b1561055d578360005260068552604060002090600a8201918351928284116104a6576102fb81546123c6565b93601f9485811161052f575b50888582116001146104c7579080600c9493926000916104bc575b508160011b916000199060031b1c19161790555b019184519182116104a65761034b83546123c6565b81811161046e575b50869082116001146103df57927f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1396959492826103c1936103cf966000916103d4575b508160011b916000199060031b1c19161790555b606060405196879687528601526060850190612349565b908382036040850152612349565b0390a1005b90508501518a610396565b601f1982169083600052876000209160005b8181106104575750836103cf96937f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e139a999896936103c1966001941061043e575b5050811b0190556103aa565b87015160001960f88460031b161c191690558a80610432565b91928960018192868b0151815501940192016103f1565b6104979084600052886000208380860160051c8201928b871061049d575b0160051c0190612504565b87610353565b9250819261048c565b634e487b7160e01b600052604160045260246000fd5b90508701518b610322565b601f19821690836000528a6000209160005b8c828210610519575050918391600c96959460019410610500575b5050811b019055610336565b89015160001960f88460031b161c191690558b806104f4565b600184958293958d0151815501940192016104d9565b61055790836000528a6000208780850160051c8201928d861061049d570160051c0190612504565b89610307565b60405162461bcd60e51b815260048101869052603560248201527f48616e796120646f6b74657220616b7469662079616e672062697361206d656d6044820152743832b93130b93ab4903932b5b0b69036b2b234b99760591b6064820152608490fd5b506001855260ff600160406000200154166102cf565b3461014c57602036600319011261014c576004356000908152600660205260409020805460018201546001600160a01b03169161061560028201612400565b9060038101546004820161062890612400565b61063460058401612400565b61064060068501612400565b61064c60078601612400565b61065860088701612400565b9161066560098801612400565b93610672600a8901612400565b9561067f600b8a01612400565b9761068c600c8b01612400565b99600d015460ff169a6040519d8e809e8152602001528c6101c06040819201528d016106b791612349565b9060608d01528b810360808d01526106ce91612349565b8a810360a08c01526106df91612349565b89810360c08b01526106f091612349565b88810360e08a015261070191612349565b87810361010089015261071391612349565b86810361012088015261072591612349565b85810361014087015261073791612349565b84810361016086015261074991612349565b83810361018085015261075b91612349565b9015156101a08301520390f35b3461014c57604036600319011261014c5761078161223c565b602435908115159182810361014c577f3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a9261080b60409360018060a01b03906107cf826000541633146124a6565b16928360005260026020526107ea60ff86600020541661257f565b836000526001602052600185600020019060ff801983541691151516179055565b82519182526020820152a1005b3461014c57600036600319011261014c576020600454604051908152f35b3461014c57602036600319011261014c577f4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d602061087261223c565b600054906001600160a01b039061088c33838516146124a6565b1680916bffffffffffffffffffffffff60a01b1617600055604051908152a1005b3461014c5761018036600319011261014c576108c761223c565b6024356001600160401b03811161014c576108e69036906004016122f3565b906064356001600160401b03811161014c576109069036906004016122f3565b916084356001600160401b03811161014c576109269036906004016122f3565b9260a4356001600160401b03811161014c576109469036906004016122f3565b9360c4356001600160401b03811161014c576109669036906004016122f3565b9460e4356001600160401b03811161014c576109869036906004016122f3565b610104356001600160401b03811161014c576109a69036906004016122f3565b90610124356001600160401b03811161014c576109c79036906004016122f3565b97610144356001600160401b03811161014c576109e89036906004016122f3565b93610164356001600160401b03811161014c57610a099036906004016122f3565b956001600160a01b038a16330361165d57610a256008546125cb565b9788600855604051998a6101c08101106001600160401b036101c08d0111176104a6576101c08b01604052898b5260018060a01b038c1660208c015260408b015260443560608b015260808a015260a089015260c088015260e08701526101008601526101208501528561014085015261016084015261018083015260016101a08301526000526006602052604060002090805182556001820160018060a01b036020830151166bffffffffffffffffffffffff60a01b82541617905560408101518051906001600160401b0382116104a6578190610b0760028601546123c6565b601f8111611628575b50602090601f83116001146115b6576000926115ab575b50508160011b916000199060031b1c19161760028301555b6060810151600383015560808101518051906001600160401b0382116104a6578190610b6e60048601546123c6565b601f8111611576575b50602090601f8311600114611504576000926114f9575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116104a6578190610bcb60058601546123c6565b601f81116114c4575b50602090601f831160011461145257600092611447575b50508160011b916000199060031b1c19161760058301555b60c08101518051906001600160401b0382116104a6578190610c2860068601546123c6565b601f8111611412575b50602090601f83116001146113a057600092611395575b50508160011b916000199060031b1c19161760068301555b60e08101518051906001600160401b0382116104a6578190610c8560078601546123c6565b601f8111611360575b50602090601f83116001146112ee576000926112e3575b50508160011b916000199060031b1c19161760078301555b6101008101518051906001600160401b0382116104a6578190610ce360088601546123c6565b601f81116112ae575b50602090601f831160011461123c57600092611231575b50508160011b916000199060031b1c19161760088301555b6101208101518051906001600160401b0382116104a6578190610d4160098601546123c6565b601f81116111fc575b50602090601f831160011461118a5760009261117f575b50508160011b916000199060031b1c19161760098301555b6101408101518051906001600160401b0382116104a6578190610d9f600a8601546123c6565b601f811161114a575b50602090601f83116001146110d8576000926110cd575b50508160011b916000199060031b1c191617600a8301555b6101608101518051906001600160401b0382116104a6578190610dfd600b8601546123c6565b601f8111611098575b50602090601f83116001146110265760009261101b575b50508160011b916000199060031b1c191617600b8301555b600c82016101808201518051906001600160401b0382116104a657610e5a83546123c6565b601f8111610fde575b50602090601f8311600114610f6b5792826101a093610eb5979693600d96600092610f60575b50508160011b916000199060031b1c19161790555b0151151591019060ff801983541691151516179055565b6001600160a01b038116600090815260076020526040902060085481549391600160401b8510156104a65784610f119160017f8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c9979701815561229f565b819291549060031b91821b91600019901b1916179055610f5460085491604051938493845260018060a01b03166020840152608060408401526080830190612349565b600160608301520390a1005b015190508a80610e89565b90601f198316918460005260206000209260005b818110610fc6575093610eb5979693600d9693600193836101a09810610fad575b505050811b019055610e9e565b015160001960f88460031b161c191690558a8080610fa0565b92936020600181928786015181550195019301610f7f565b61100b90846000526020600020601f850160051c81019160208610611011575b601f0160051c0190612504565b87610e63565b9091508190610ffe565b015190508680610e1d565b9250600b85016000526020600020906000935b601f198416851061107d576001945083601f19811610611064575b505050811b01600b830155610e35565b015160001960f88460031b161c19169055868080611054565b81810151835560209485019460019093019290910190611039565b6110c790600b87016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610e06565b015190508680610dbf565b9250600a85016000526020600020906000935b601f198416851061112f576001945083601f19811610611116575b505050811b01600a830155610dd7565b015160001960f88460031b161c19169055868080611106565b818101518355602094850194600190930192909101906110eb565b61117990600a87016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610da8565b015190508680610d61565b9250600985016000526020600020906000935b601f19841685106111e1576001945083601f198116106111c8575b505050811b016009830155610d79565b015160001960f88460031b161c191690558680806111b8565b8181015183556020948501946001909301929091019061119d565b61122b90600987016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610d4a565b015190508680610d03565b9250600885016000526020600020906000935b601f1984168510611293576001945083601f1981161061127a575b505050811b016008830155610d1b565b015160001960f88460031b161c1916905586808061126a565b8181015183556020948501946001909301929091019061124f565b6112dd90600887016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610cec565b015190508680610ca5565b9250600785016000526020600020906000935b601f1984168510611345576001945083601f1981161061132c575b505050811b016007830155610cbd565b015160001960f88460031b161c1916905586808061131c565b81810151835560209485019460019093019290910190611301565b61138f90600787016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610c8e565b015190508680610c48565b9250600685016000526020600020906000935b601f19841685106113f7576001945083601f198116106113de575b505050811b016006830155610c60565b015160001960f88460031b161c191690558680806113ce565b818101518355602094850194600190930192909101906113b3565b61144190600687016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610c31565b015190508680610beb565b9250600585016000526020600020906000935b601f19841685106114a9576001945083601f19811610611490575b505050811b016005830155610c03565b015160001960f88460031b161c19169055868080611480565b81810151835560209485019460019093019290910190611465565b6114f390600587016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610bd4565b015190508680610b8e565b9250600485016000526020600020906000935b601f198416851061155b576001945083601f19811610611542575b505050811b016004830155610ba6565b015160001960f88460031b161c19169055868080611532565b81810151835560209485019460019093019290910190611517565b6115a590600487016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610b77565b015190508680610b27565b9250600285016000526020600020906000935b601f198416851061160d576001945083601f198116106115f4575b505050811b016002830155610b3f565b015160001960f88460031b161c191690558680806115e4565b818101518355602094850194600190930192909101906115c9565b61165790600287016000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87610b10565b60405162461bcd60e51b815260206004820152603260248201527f48616e79612070617369656e2079616e672062697361206d656d62756174207260448201527132b5b0b69036b2b234b99036b2b932b5b09760711b6064820152608490fd5b3461014c57602036600319011261014c5760043560055481101561014c5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001546040516001600160a01b039091168152602090f35b3461014c57602036600319011261014c576001600160a01b0361173961223c565b166000526002602052602060ff604060002054166040519015158152f35b3461014c57600036600319011261014c576040518060055480825282602080930160056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09260005b858282106117d1575050506117b9925003836122d2565b6117cd604051928284938452830190612389565b0390f35b85546001600160a01b03168452600195860195889550930192016117a2565b3461014c57602036600319011261014c5760043560045481101561014c57611819602091612252565b905460405160039290921b1c6001600160a01b03168152f35b3461014c5760208060031936011261014c576001600160a01b03908161185661223c565b1660005260019081815260406000209260ff83850154169161187b6002860195612400565b93604051928383885491828152019760005283600020916000905b8282106118dc576118c8896117cd8a8a8a8f826118b49103836122d2565b604051958695606087526060870190612349565b921515908501528382036040850152612389565b835481168a52988501989284019290840190611896565b3461014c57600036600319011261014c5733600052600360205260ff60406000205416611968573360005260036020526040600020600160ff1982541617905561193c3361251b565b7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470586020604051338152a1005b60405162461bcd60e51b8152602060048201526024808201527f416e64612073756461682074657264616674617220736562616761692050617360448201526334b2b71760e11b6064820152608490fd5b3461014c57600036600319011261014c576020600854604051908152f35b3461014c57602036600319011261014c576117cd6119fb6119f661223c565b6125f0565b604051918291602083526020830190612349565b3461014c57604036600319011261014c57611a2861223c565b6024906001600160a01b038235818116929083900361014c578190611a52826000541633146124a6565b16928360005260209160028352611a7060ff6040600020541661257f565b8360005260039182845260ff6040600020541615611b9457856000526001845260026040600020016000918154925b838110611b1b5750600160401b831015611b07577fd9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a60408989898989611aeb8a8a60018201815561229f565b81939154911b9185831b921b19161790558351928352820152a1005b634e487b7160e01b60009081526041600452fd5b8785611b27838661229f565b905490891b1c1614611b4157611b3c906125cb565b611a9f565b60405162461bcd60e51b8152600481018890526026818401527f50617369656e20737564616820646974756761736b616e206b6520646f6b7465604482015265391034b7349760d11b6064820152608490fd5b8360176064926040519262461bcd60e51b845260048401528201527f50617369656e20746964616b207465726461667461722e0000000000000000006044820152fd5b3461014c57602036600319011261014c576001600160a01b03611bf861223c565b166000526003602052602060ff604060002054166040519015158152f35b3461014c57604036600319011261014c57611c2f61223c565b6024356001600160401b03811161014c57611c4e9036906004016122f3565b611c6360018060a01b036000541633146124a6565b6001600160a01b03821660009081526002602052604090205460ff16611fac576001600160a01b03821660009081526003602052604090205460ff16611f585760018060a01b03821660005260026020526040600020600160ff1982541617905560405191602083018381106001600160401b038211176104a6576040526000835260405192606084018481106001600160401b038211176104a657604052828452602084019060018252604085015260018060a01b038216600052600160205260406000209084518051906001600160401b0382116104a657611d4784546123c6565b601f8111611f26575b50602090601f8311600114611eb357928260409593611da193600296600092611ea8575b50508160011b916000199060031b1c19161783555b511515600183019060ff801983541691151516179055565b01930151928351906001600160401b0382116104a657600160401b948583116104a6576020908254848455808510611e8b575b500190600052602060002060005b838110611e6e5750505050600454928310156104a657611e298360017fc38147498c0c3f6433ae14d0586b30fef7b292e301be82700c6478971c423dce9501600455612252565b81549060031b9060018060a01b038416821b9160018060a01b03901b19161790556103cf60405192839260018060a01b03168352604060208401526040830190612349565b82516001600160a01b031681830155602090920191600101611de2565b611ea2908460005285846000209182019101612504565b87611dd4565b015190508a80611d74565b908460005260206000209160005b601f1985168110611f0e575083611da1936002969360019360409997601f19811610611ef5575b505050811b018355611d89565b015160001960f88460031b161c191690558a8080611ee8565b91926020600181928685015181550194019201611ec1565b611f5290856000526020600020601f850160051c8101916020861061101157601f0160051c0190612504565b87611d50565b60405162461bcd60e51b815260206004820152602660248201527f416c616d6174207375646168207465726461667461722073656261676169205060448201526530b9b4b2b71760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f446f6b746572207375646168207465726461667461722e0000000000000000006044820152606490fd5b3461014c57602036600319011261014c5761201760018060a01b036000541633146124a6565b6004356000908152600660205260409020600d01805460ff19169055005b3461014c57602036600319011261014c5760043560045481101561205e57611819602091612252565b60405162461bcd60e51b815260206004820152601960248201527f496e64657820646f6b74657220746964616b2076616c69642e000000000000006044820152606490fd5b3461014c5760208060031936011261014c576120bd61223c565b9060018060a01b036120d4816000541633146124a6565b8216806000526002825260ff6040600020541661219057806000526003825260ff6040600020541661214b576121427f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470589382600052600384526040600020600160ff1982541617905561251b565b604051908152a1005b60405162461bcd60e51b815260048101839052601760248201527f50617369656e207375646168207465726461667461722e0000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101839052602660248201527f416c616d6174207375646168207465726461667461722073656261676169204460448201526537b5ba32b91760d11b6064820152608490fd5b3461014c57604036600319011261014c576121fd61223c565b6001600160a01b031660009081526007602052604090208054602435919082101561014c5760209161222e9161229f565b90546040519160031b1c8152f35b600435906001600160a01b038216820361014c57565b6004548110156122895760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156122895760005260206000200190600090565b604081019081106001600160401b038211176104a657604052565b90601f801991011681019081106001600160401b038211176104a657604052565b81601f8201121561014c578035906001600160401b0382116104a65760405192612327601f8401601f1916602001856122d2565b8284526020838301011161014c57816000926020809301838601378301015290565b919082519283825260005b848110612375575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612354565b90815180825260208080930193019160005b8281106123a9575050505090565b83516001600160a01b03168552938101939281019260010161239b565b90600182811c921680156123f6575b60208310146123e057565b634e487b7160e01b600052602260045260246000fd5b91607f16916123d5565b9060405191826000825492612414846123c6565b9081845260019485811690816000146124835750600114612440575b505061243e925003836122d2565b565b9093915060005260209081600020936000915b81831061246b57505061243e93508201013880612430565b85548884018501529485019487945091830191612453565b91505061243e94506020925060ff191682840152151560051b8201013880612430565b156124ad57565b60405162461bcd60e51b815260206004820152602960248201527f48616e79612061646d696e2079616e672062697361206d656c616b756b616e2060448201526830b5b9b49034b7349760b91b6064820152608490fd5b81811061250f575050565b60008155600101612504565b600554600160401b8110156104a65760018101806005558110156122895760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03909216919091179055565b1561258657565b60405162461bcd60e51b815260206004820152601760248201527f446f6b74657220746964616b207465726461667461722e0000000000000000006044820152606490fd5b60001981146125da5760010190565b634e487b7160e01b600052601160045260246000fd5b6000546001600160a01b03918216911681146126995780600052600260205260ff6040600020541661267657600052600360205260ff604060002054166126545760405161263d816122b7565b60078152662ab735b737bbb760c91b602082015290565b604051612660816122b7565b60068152652830b9b4b2b760d11b602082015290565b50604051612683816122b7565b60068152652237b5ba32b960d11b602082015290565b506040516126a6816122b7565b600581526420b236b4b760d91b60208201529056fea2646970667358221220cf097a200964ab234e7add2cb6593b01f196ef6871edf2390ab63f5de736832464736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "69:7408:0:-:0;;;;;;;1547:50;69:7408;;-1:-1:-1;;;;;;69:7408:0;1555:42;69:7408;;;;;;;;;;;;;",
  "deployedSourceMap": "69:7408:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;:::i;:::-;;;;5534:18;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;-1:-1:-1;;;;;69:7408:0;;:::i;:::-;;;;;;;;;;;;;233:44;;;:::i;:::-;;;69:7408;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1854:10;;69:7408;;;;1845:8;69:7408;;;;;;;;1845:52;;;69:7408;;;;;;;7162:10;69:7408;;;;;7188:14;;;;69:7408;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7225:13;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;7225:13;69:7408;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7265:46;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;7265:46;;;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7265:46;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7225:13;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;1845:52;69:7408;;;;;;;;;1869:28;69:7408;;1845:52;;69:7408;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;890:49;69:7408;;;;;;;;890:49;;69:7408;-1:-1:-1;;;;;69:7408:0;;890:49;;;;;:::i;:::-;;69:7408;890:49;;69:7408;;890:49;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;:::i;:::-;;;;;;;;;;;;;3423:35;69:7408;3373:34;69:7408;;;;;;;;1646:110;69:7408;;;;1668:10;:19;1646:110;:::i;:::-;69:7408;;;;;3317:8;69:7408;;3309:53;69:7408;;;;;;3309:53;:::i;:::-;69:7408;;;;;;;;;;3373:25;69:7408;;;;;;;;;;;;;;;3373:34;69:7408;;;;;;;;;3423:35;69:7408;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;5844:26;69:7408;;;:::i;:::-;;;;-1:-1:-1;;;;;69:7408:0;1646:110;1668:10;69:7408;;;1668:19;1646:110;:::i;:::-;69:7408;;;;;;;;;;;;;;;5844:26;69:7408;;;;;;;-1:-1:-1;;69:7408:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;69:7408:0;;2076:10;:20;69:7408;;6373:17;;69:7408;6373:17;:::i;:::-;69:7408;;6373:17;69:7408;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;6431:350;;69:7408;;6431:350;;69:7408;;;;6431:350;;69:7408;;6431:350;;69:7408;;6431:350;;69:7408;;6431:350;;69:7408;;6431:350;;69:7408;;6431:350;;69:7408;;6431:350;;69:7408;6431:350;69:7408;6431:350;;69:7408;;6431:350;;69:7408;;6431:350;;69:7408;;6431:350;;;69:7408;;;6401:10;69:7408;;;;;;;;;;;;;;;;;;;6431:350;;69:7408;;;;;;;;;;;;6431:350;;69:7408;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:350;;69:7408;;;;;;6431:350;;69:7408;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:350;;69:7408;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:350;;69:7408;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;6401:10;69:7408;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6401:10;69:7408;;;;;6431:350;;69:7408;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:350;;69:7408;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;6373:17;69:7408;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6373:17;69:7408;;;;;6431:350;;69:7408;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:350;;69:7408;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:350;;69:7408;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:350;;69:7408;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6431:350;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:350;69:7408;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;6373:17;69:7408;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;6857:64;69:7408;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6373:17;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;6857:64;;;69:7408;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:350;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;6373:17;69:7408;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;6373:17;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6373:17;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;6401:10;69:7408;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;6401:10;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6401:10;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;446:29;69:7408;446:29;;;;;;69:7408;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;-1:-1:-1;;;;;69:7408:0;;:::i;:::-;;;;284:40;69:7408;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;5694:12;69:7408;;;;;;;;;5694:12;69:7408;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;380:29;;;;;;69:7408;380:29;;:::i;:::-;69:7408;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;:::i;:::-;;;;;;;;;;;;4399:7;69:7408;4399:7;;;69:7408;;4408:16;69:7408;4408:16;;;69:7408;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;4903:10;69:7408;;;;;;;;;;;;;4903:10;69:7408;;;;;;;;4989:4;69:7408;;;;;;;;5004:29;4903:10;5004:29;:::i;:::-;5049:27;69:7408;;;4903:10;69:7408;;5049:27;69:7408;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;1005:27;69:7408;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:7408:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;;;1646:110;69:7408;;;;1668:10;:19;1646:110;:::i;:::-;69:7408;;;;;;;3641:8;69:7408;;3633:53;69:7408;;;;;;3633:53;:::i;:::-;69:7408;;;;;;;;;;;;;;;;;;;;;;;3641:8;69:7408;;;3796:34;69:7408;;;;3841:188;3858:23;;;;;;69:7408;-1:-1:-1;;;69:7408:0;;;;;4081:40;69:7408;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;4081:40;69:7408;;-1:-1:-1;;;69:7408:0;;;;;;;;3883:3;3907:15;;;;;;:::i;:::-;69:7408;;;;;;;3907:26;3903:115;;3883:3;;;:::i;:::-;3846:10;;3903:115;69:7408;;-1:-1:-1;;;3954:48:0;;69:7408;3954:48;;69:7408;;;;;;;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;3954:48;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;-1:-1:-1;;;;;69:7408:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;:::i;:::-;1646:110;69:7408;;;;;;;;1668:10;:19;1646:110;:::i;:::-;-1:-1:-1;;;;;69:7408:0;;;;;;2390:8;69:7408;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;2390:8;69:7408;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;2583:118;;69:7408;;;;;2583:118;;69:7408;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2390:8;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2583:118;;69:7408;;;;;-1:-1:-1;;;;;69:7408:0;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:31;69:7408;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;;;2390:8;69:7408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;1646:110;69:7408;;;;;;;;1668:10;:19;1646:110;:::i;:::-;69:7408;;;;;;7437:10;69:7408;;;;;7437:21;;69:7408;;-1:-1:-1;;69:7408:0;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;;3074:27;;69:7408;;;3149:19;69:7408;3149:19;;:::i;69:7408::-;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1646:110;69:7408;;;;1668:10;:19;1646:110;:::i;:::-;69:7408;;;;;4555:8;69:7408;;;;;;;;;;;;;;;;;;;;;;;;4726:26;4768:24;69:7408;;;;;;;;;;;;;;;;;;;4726:26;:::i;:::-;69:7408;;;;;4768:24;69:7408;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;:::i;:::-;-1:-1:-1;;;;;69:7408:0;;;;;946:52;69:7408;;;;;;;;;;;946:52;;;;;69:7408;946:52;;;;:::i;:::-;69:7408;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;69:7408:0;;;;-1:-1:-1;69:7408:0;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:7408:0;;-1:-1:-1;69:7408:0;;;-1:-1:-1;69:7408:0;:::o;:::-;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:7408:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;69:7408:0;;;;-1:-1:-1;69:7408:0;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:7408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;4726:12;69:7408;-1:-1:-1;;;69:7408:0;;;;;;;;;4726:12;69:7408;;;;;;4726:12;-1:-1:-1;69:7408:0;;;;;-1:-1:-1;;;;;;69:7408:0;-1:-1:-1;;;;;69:7408:0;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;69:7408:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:7408:0;;;;;;;:::o;:::-;;;;;;;;;;;;5114:246;5210:5;69:7408;-1:-1:-1;;;;;69:7408:0;;;;;5201:14;;5197:34;;69:7408;5210:5;69:7408;5246:8;69:7408;;;;5210:5;69:7408;;;5242:36;;5210:5;69:7408;5293:8;69:7408;;;;5210:5;69:7408;;;5289:36;;69:7408;;;;;:::i;:::-;;;;-1:-1:-1;;;69:7408:0;;;;5114:246;:::o;5289:36::-;69:7408;;;;;:::i;:::-;;;;-1:-1:-1;;;69:7408:0;;;;5310:15;:::o;5242:36::-;69:7408;;;;;;:::i;:::-;;;;-1:-1:-1;;;69:7408:0;;;;5263:15;:::o;5197:34::-;69:7408;;;;;;:::i;:::-;;;;-1:-1:-1;;;69:7408:0;;;;5217:14;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract RekamMedis {\r\n    address public admin;\r\n\r\n    struct Dokter {\r\n        string nama;\r\n        bool aktif;\r\n        address[] assignedPasien;\r\n    }\r\n\r\n    mapping(address => Dokter) public dataDokter;\r\n    mapping(address => bool) public isDokter;\r\n    mapping(address => bool) public isPasien;\r\n\r\n    address[] public daftarDokter; // daftar semua alamat dokter\r\n    address[] public daftarPasien; // daftar semua alamat pasien\r\n\r\n    struct RekamMedisData {\r\n        uint id;\r\n        address pasien;\r\n        string nama;\r\n        uint umur;\r\n        string golonganDarah;\r\n        string tanggalLahir;\r\n        string gender;\r\n        string alamat;\r\n        string noTelepon;\r\n        string email;\r\n        string diagnosa;\r\n        string foto;\r\n        string catatan;\r\n        bool valid;\r\n    }\r\n\r\n    mapping(uint => RekamMedisData) public rekamMedis;\r\n    mapping(address => uint[]) public rekamMedisByPasien;\r\n    uint public rekamMedisCount;\r\n\r\n    event RekamMedisDitambahkan(\r\n        uint id,\r\n        address pasien,\r\n        string diagnosa,\r\n        bool valid\r\n    );\r\n    event RekamMedisDiperbarui(uint id, string diagnosa, string catatan);\r\n    event AdminDitetapkan(address newAdmin);\r\n    event DokterTerdaftar(address dokter, string nama);\r\n    event DokterStatusDiubah(address dokter, bool aktif);\r\n    event PasienDiassignKeDokter(address dokter, address pasien);\r\n    event PasienTerdaftar(address pasien);\r\n\r\n    constructor() {\r\n        admin = 0xB0dC0Bf642d339517438017Fc185Bb0f758A01D2;\r\n    }\r\n\r\n    modifier hanyaAdmin() {\r\n        require(\r\n            msg.sender == admin,\r\n            \"Hanya admin yang bisa melakukan aksi ini.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaDokterAktif() {\r\n        require(\r\n            isDokter[msg.sender] && dataDokter[msg.sender].aktif,\r\n            \"Hanya dokter aktif yang bisa memperbarui rekam medis.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaPasien(address pasien) {\r\n        require(\r\n            msg.sender == pasien,\r\n            \"Hanya pasien yang bisa membuat rekam medis mereka.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    // Register dokter baru dengan nama dan aktifkan langsung\r\n    function registerDokter(\r\n        address _dokter,\r\n        string memory _nama\r\n    ) public hanyaAdmin {\r\n        require(!isDokter[_dokter], \"Dokter sudah terdaftar.\");\r\n        require(!isPasien[_dokter], \"Alamat sudah terdaftar sebagai Pasien.\");\r\n        isDokter[_dokter] = true;\r\n        dataDokter[_dokter] = Dokter({\r\n            nama: _nama,\r\n            aktif: true,\r\n            assignedPasien: new address[](0)\r\n        });\r\n        daftarDokter.push(_dokter);\r\n        emit DokterTerdaftar(_dokter, _nama);\r\n    }\r\n\r\n    // Ambil total dokter terdaftar\r\n    function totalDokter() public view returns (uint) {\r\n        return daftarDokter.length;\r\n    }\r\n\r\n    // Ambil alamat dokter berdasarkan index\r\n    function getDokterByIndex(uint index) public view returns (address) {\r\n        require(index < daftarDokter.length, \"Index dokter tidak valid.\");\r\n        return daftarDokter[index];\r\n    }\r\n\r\n    // Set status dokter aktif/nonaktif\r\n    function setStatusDokter(address _dokter, bool _aktif) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        dataDokter[_dokter].aktif = _aktif;\r\n        emit DokterStatusDiubah(_dokter, _aktif);\r\n    }\r\n\r\n    // Assign pasien ke dokter tertentu\r\n    function assignPasienToDokter(\r\n        address _dokter,\r\n        address _pasien\r\n    ) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        require(isPasien[_pasien], \"Pasien tidak terdaftar.\");\r\n\r\n        address[] storage daftarPasien = dataDokter[_dokter].assignedPasien;\r\n        for (uint i = 0; i < daftarPasien.length; i++) {\r\n            if (daftarPasien[i] == _pasien) {\r\n                revert(\"Pasien sudah ditugaskan ke dokter ini.\");\r\n            }\r\n        }\r\n        daftarPasien.push(_pasien);\r\n        emit PasienDiassignKeDokter(_dokter, _pasien);\r\n    }\r\n\r\n    // Get data dokter\r\n    function getDokter(\r\n        address _dokter\r\n    )\r\n        public\r\n        view\r\n        returns (string memory nama, bool aktif, address[] memory pasien)\r\n    {\r\n        Dokter storage d = dataDokter[_dokter];\r\n        return (d.nama, d.aktif, d.assignedPasien);\r\n    }\r\n\r\n    // Register pasien oleh admin\r\n    function registerPasien(address _pasien) public hanyaAdmin {\r\n        require(!isDokter[_pasien], \"Alamat sudah terdaftar sebagai Dokter.\");\r\n        require(!isPasien[_pasien], \"Pasien sudah terdaftar.\");\r\n        isPasien[_pasien] = true;\r\n        daftarPasien.push(_pasien);\r\n        emit PasienTerdaftar(_pasien);\r\n    }\r\n\r\n    // Self register pasien\r\n    function selfRegisterPasien() public {\r\n        require(!isPasien[msg.sender], \"Anda sudah terdaftar sebagai Pasien.\");\r\n        isPasien[msg.sender] = true;\r\n        daftarPasien.push(msg.sender);\r\n        emit PasienTerdaftar(msg.sender);\r\n    }\r\n\r\n    // Get role user\r\n    function getUserRole(address _user) public view returns (string memory) {\r\n        if (_user == admin) return \"Admin\";\r\n        if (isDokter[_user]) return \"Dokter\";\r\n        if (isPasien[_user]) return \"Pasien\";\r\n        return \"Unknown\";\r\n    }\r\n\r\n    // Ambil daftar rekam medis milik pasien\r\n    function getRekamMedisIdsByPasien(\r\n        address pasien\r\n    ) public view returns (uint[] memory) {\r\n        return rekamMedisByPasien[pasien];\r\n    }\r\n\r\n    // Ambil daftar semua pasien\r\n    function getDaftarPasien() public view returns (address[] memory) {\r\n        return daftarPasien;\r\n    }\r\n\r\n    // Set admin baru\r\n    function setAdmin(address _newAdmin) public hanyaAdmin {\r\n        admin = _newAdmin;\r\n        emit AdminDitetapkan(_newAdmin);\r\n    }\r\n\r\n    // Tambah rekam medis pasien\r\n    function tambahRekamMedis(\r\n        address _pasien,\r\n        string memory _nama,\r\n        uint _umur,\r\n        string memory _golonganDarah,\r\n        string memory _tanggalLahir,\r\n        string memory _gender,\r\n        string memory _alamat,\r\n        string memory _noTelepon,\r\n        string memory _email,\r\n        string memory _diagnosa,\r\n        string memory _foto,\r\n        string memory _catatan\r\n    ) public hanyaPasien(_pasien) {\r\n        rekamMedisCount++;\r\n        rekamMedis[rekamMedisCount] = RekamMedisData(\r\n            rekamMedisCount,\r\n            _pasien,\r\n            _nama,\r\n            _umur,\r\n            _golonganDarah,\r\n            _tanggalLahir,\r\n            _gender,\r\n            _alamat,\r\n            _noTelepon,\r\n            _email,\r\n            _diagnosa,\r\n            _foto,\r\n            _catatan,\r\n            true\r\n        );\r\n        rekamMedisByPasien[_pasien].push(rekamMedisCount);\r\n        emit RekamMedisDitambahkan(rekamMedisCount, _pasien, _diagnosa, true);\r\n    }\r\n\r\n    // Update rekam medis dokter aktif\r\n    function updateRekamMedis(\r\n        uint _id,\r\n        string memory _diagnosa,\r\n        string memory _catatan\r\n    ) public hanyaDokterAktif {\r\n        RekamMedisData storage rekam = rekamMedis[_id];\r\n        rekam.diagnosa = _diagnosa;\r\n        rekam.catatan = _catatan;\r\n        emit RekamMedisDiperbarui(_id, _diagnosa, _catatan);\r\n    }\r\n\r\n    // Nonaktifkan rekam medis (admin)\r\n    function nonaktifkanRekamMedis(uint _id) public hanyaAdmin {\r\n        rekamMedis[_id].valid = false;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\RekamMedisBlockchain\\contracts\\RekamMedis.sol",
  "ast": {
    "absolutePath": "project:/contracts/RekamMedis.sol",
    "exportedSymbols": {
      "RekamMedis": [
        639
      ]
    },
    "id": 640,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "RekamMedis",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 639,
        "linearizedBaseContracts": [
          639
        ],
        "name": "RekamMedis",
        "nameLocation": "78:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 3,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "111:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "96:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "96:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RekamMedis.Dokter",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "nama",
                "nameLocation": "157:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "150:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "150:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "aktif",
                "nameLocation": "177:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "172:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "assignedPasien",
                "nameLocation": "203:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "193:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9,
                  "nodeType": "ArrayTypeName",
                  "src": "193:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Dokter",
            "nameLocation": "132:6:0",
            "nodeType": "StructDefinition",
            "scope": 639,
            "src": "125:100:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3c0fdea",
            "id": 16,
            "mutability": "mutable",
            "name": "dataDokter",
            "nameLocation": "267:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "233:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
              "typeString": "mapping(address => struct RekamMedis.Dokter)"
            },
            "typeName": {
              "id": 15,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "241:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "233:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                "typeString": "mapping(address => struct RekamMedis.Dokter)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 14,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 13,
                  "name": "Dokter",
                  "nameLocations": [
                    "252:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "252:6:0"
                },
                "referencedDeclaration": 11,
                "src": "252:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                  "typeString": "struct RekamMedis.Dokter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c4c9348",
            "id": 20,
            "mutability": "mutable",
            "name": "isDokter",
            "nameLocation": "316:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "284:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 19,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "292:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "284:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 18,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "303:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1132beb5",
            "id": 24,
            "mutability": "mutable",
            "name": "isPasien",
            "nameLocation": "363:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "331:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 23,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "339:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "331:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 22,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "350:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "42699651",
            "id": 27,
            "mutability": "mutable",
            "name": "daftarDokter",
            "nameLocation": "397:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "380:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "380:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 26,
              "nodeType": "ArrayTypeName",
              "src": "380:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68370087",
            "id": 30,
            "mutability": "mutable",
            "name": "daftarPasien",
            "nameLocation": "463:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "446:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "446:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "446:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RekamMedis.RekamMedisData",
            "id": 59,
            "members": [
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "552:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "547:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "547:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "pasien",
                "nameLocation": "573:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "565:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 33,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "565:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "nama",
                "nameLocation": "597:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "590:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "590:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "umur",
                "nameLocation": "617:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "612:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "612:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "golonganDarah",
                "nameLocation": "639:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "632:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 39,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "632:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "tanggalLahir",
                "nameLocation": "670:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "663:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 41,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "gender",
                "nameLocation": "700:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "693:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 43,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "alamat",
                "nameLocation": "724:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "717:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 45,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "noTelepon",
                "nameLocation": "748:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "741:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 47,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "741:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "email",
                "nameLocation": "775:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "768:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 49,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "768:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "diagnosa",
                "nameLocation": "798:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "791:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 51,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "791:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "foto",
                "nameLocation": "824:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "817:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 53,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "817:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "catatan",
                "nameLocation": "846:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "839:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 55,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "839:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "869:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "864:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 57,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "864:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RekamMedisData",
            "nameLocation": "521:14:0",
            "nodeType": "StructDefinition",
            "scope": 639,
            "src": "514:368:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "abf72abb",
            "id": 64,
            "mutability": "mutable",
            "name": "rekamMedis",
            "nameLocation": "929:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "890:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
              "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData)"
            },
            "typeName": {
              "id": 63,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 60,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "898:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "890:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 62,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 61,
                  "name": "RekamMedisData",
                  "nameLocations": [
                    "906:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59,
                  "src": "906:14:0"
                },
                "referencedDeclaration": 59,
                "src": "906:14:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                  "typeString": "struct RekamMedis.RekamMedisData"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "00410cb3",
            "id": 69,
            "mutability": "mutable",
            "name": "rekamMedisByPasien",
            "nameLocation": "980:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "946:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 68,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "954:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "946:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 66,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "965:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 67,
                "nodeType": "ArrayTypeName",
                "src": "965:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2e2dd102",
            "id": 71,
            "mutability": "mutable",
            "name": "rekamMedisCount",
            "nameLocation": "1017:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1005:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1005:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c997",
            "id": 81,
            "name": "RekamMedisDitambahkan",
            "nameLocation": "1047:21:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1084:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1079:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1105:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1097:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "diagnosa",
                  "nameLocation": "1129:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1122:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "1153:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1148:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1068:97:0"
            },
            "src": "1041:125:0"
          },
          {
            "anonymous": false,
            "eventSelector": "2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e13",
            "id": 89,
            "name": "RekamMedisDiperbarui",
            "nameLocation": "1178:20:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1204:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1199:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "diagnosa",
                  "nameLocation": "1215:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1208:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "catatan",
                  "nameLocation": "1232:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1225:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1198:42:0"
            },
            "src": "1172:69:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d",
            "id": 93,
            "name": "AdminDitetapkan",
            "nameLocation": "1253:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "1277:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1269:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1268:18:0"
            },
            "src": "1247:40:0"
          },
          {
            "anonymous": false,
            "eventSelector": "c38147498c0c3f6433ae14d0586b30fef7b292e301be82700c6478971c423dce",
            "id": 99,
            "name": "DokterTerdaftar",
            "nameLocation": "1299:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1323:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1315:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nama",
                  "nameLocation": "1338:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1331:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1314:29:0"
            },
            "src": "1293:51:0"
          },
          {
            "anonymous": false,
            "eventSelector": "3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a",
            "id": 105,
            "name": "DokterStatusDiubah",
            "nameLocation": "1356:18:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1383:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1375:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "aktif",
                  "nameLocation": "1396:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1391:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1374:28:0"
            },
            "src": "1350:53:0"
          },
          {
            "anonymous": false,
            "eventSelector": "d9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a",
            "id": 111,
            "name": "PasienDiassignKeDokter",
            "nameLocation": "1415:22:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1446:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1438:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1462:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1454:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1437:32:0"
            },
            "src": "1409:61:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da47058",
            "id": 115,
            "name": "PasienTerdaftar",
            "nameLocation": "1482:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1506:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1498:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1498:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1497:16:0"
            },
            "src": "1476:38:0"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1536:69:0",
              "statements": [
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1547:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307842306443304266363432643333393531373433383031374663313835426230663735384130314432",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1555:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xB0dC0Bf642d339517438017Fc185Bb0f758A01D2"
                    },
                    "src": "1547:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1547:50:0"
                }
              ]
            },
            "id": 123,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1533:2:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1536:0:0"
            },
            "scope": 639,
            "src": "1522:83:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "1635:141:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1668:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1672:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1668:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 128,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1682:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1668:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612061646d696e2079616e672062697361206d656c616b756b616e20616b736920696e692e",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1702:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40743133d152203b81977e888be4a239119d67c3c029e27406bd4fbf4c6eff2f",
                          "typeString": "literal_string \"Hanya admin yang bisa melakukan aksi ini.\""
                        },
                        "value": "Hanya admin yang bisa melakukan aksi ini."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40743133d152203b81977e888be4a239119d67c3c029e27406bd4fbf4c6eff2f",
                          "typeString": "literal_string \"Hanya admin yang bisa melakukan aksi ini.\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1646:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1646:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:110:0"
                },
                {
                  "id": 133,
                  "nodeType": "PlaceholderStatement",
                  "src": "1767:1:0"
                }
              ]
            },
            "id": 135,
            "name": "hanyaAdmin",
            "nameLocation": "1622:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1632:2:0"
            },
            "src": "1613:163:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "1812:186:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 138,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1845:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 141,
                          "indexExpression": {
                            "expression": {
                              "id": 139,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1854:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1858:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1854:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1845:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 142,
                              "name": "dataDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "1869:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                                "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                              }
                            },
                            "id": 145,
                            "indexExpression": {
                              "expression": {
                                "id": 143,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1880:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1884:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1880:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1869:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dokter_$11_storage",
                              "typeString": "struct RekamMedis.Dokter storage ref"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1892:5:0",
                          "memberName": "aktif",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "1869:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1845:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e796120646f6b74657220616b7469662079616e672062697361206d656d70657262617275692072656b616d206d656469732e",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1912:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        },
                        "value": "Hanya dokter aktif yang bisa memperbarui rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        }
                      ],
                      "id": 137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1823:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:155:0"
                },
                {
                  "id": 151,
                  "nodeType": "PlaceholderStatement",
                  "src": "1989:1:0"
                }
              ]
            },
            "id": 153,
            "name": "hanyaDokterAktif",
            "nameLocation": "1793:16:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1809:2:0"
            },
            "src": "1784:214:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "2043:151:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 158,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2076:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2080:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2076:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 160,
                          "name": "pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "2090:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2076:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612070617369656e2079616e672062697361206d656d627561742072656b616d206d65646973206d6572656b612e",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2111:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be9e5faf1ada86bba8df6c823638bf7d94a2e628e433585b67a75bd6684f5304",
                          "typeString": "literal_string \"Hanya pasien yang bisa membuat rekam medis mereka.\""
                        },
                        "value": "Hanya pasien yang bisa membuat rekam medis mereka."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be9e5faf1ada86bba8df6c823638bf7d94a2e628e433585b67a75bd6684f5304",
                          "typeString": "literal_string \"Hanya pasien yang bisa membuat rekam medis mereka.\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2054:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:120:0"
                },
                {
                  "id": 165,
                  "nodeType": "PlaceholderStatement",
                  "src": "2185:1:0"
                }
              ]
            },
            "id": 167,
            "name": "hanyaPasien",
            "nameLocation": "2015:11:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "2035:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "2027:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2027:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2026:16:0"
            },
            "src": "2006:188:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "2370:423:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2389:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 177,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2390:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 179,
                          "indexExpression": {
                            "id": 178,
                            "name": "_dokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "2399:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2390:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b746572207375646168207465726461667461722e",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2409:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_244ba53ff803a73914781092e4815e3084e42d1edb577a9193f81c0183023344",
                          "typeString": "literal_string \"Dokter sudah terdaftar.\""
                        },
                        "value": "Dokter sudah terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_244ba53ff803a73914781092e4815e3084e42d1edb577a9193f81c0183023344",
                          "typeString": "literal_string \"Dokter sudah terdaftar.\""
                        }
                      ],
                      "id": 176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2381:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2381:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2454:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 185,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2455:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 187,
                          "indexExpression": {
                            "id": 186,
                            "name": "_dokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "2464:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2455:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c616d61742073756461682074657264616674617220736562616761692050617369656e2e",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84c42e7ccb88d3ba71eb5ceba45ba7a042208342e460783b267a4a0a677d60f2",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Pasien.\""
                        },
                        "value": "Alamat sudah terdaftar sebagai Pasien."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84c42e7ccb88d3ba71eb5ceba45ba7a042208342e460783b267a4a0a677d60f2",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Pasien.\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2446:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "2446:69:0"
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 192,
                        "name": "isDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2526:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 194,
                      "indexExpression": {
                        "id": 193,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2535:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2526:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2546:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2526:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "2526:24:0"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 198,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2561:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "id": 199,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2572:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2561:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 202,
                          "name": "_nama",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2611:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2638:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2687:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2673:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 204,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2677:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 205,
                              "nodeType": "ArrayTypeName",
                              "src": "2677:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2673:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "id": 201,
                        "name": "Dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2583:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Dokter_$11_storage_ptr_$",
                          "typeString": "type(struct RekamMedis.Dokter storage pointer)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2605:4:0",
                        "2631:5:0",
                        "2657:14:0"
                      ],
                      "names": [
                        "nama",
                        "aktif",
                        "assignedPasien"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2583:118:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_memory_ptr",
                        "typeString": "struct RekamMedis.Dokter memory"
                      }
                    },
                    "src": "2561:140:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dokter_$11_storage",
                      "typeString": "struct RekamMedis.Dokter storage ref"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:140:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 215,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2730:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 212,
                        "name": "daftarDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2712:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2725:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2712:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 219,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2770:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 220,
                        "name": "_nama",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2779:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 218,
                      "name": "DokterTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2754:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2754:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "EmitStatement",
                  "src": "2749:36:0"
                }
              ]
            },
            "functionSelector": "107e202f",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 173,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "2359:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 135,
                  "src": "2359:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2359:10:0"
              }
            ],
            "name": "registerDokter",
            "nameLocation": "2274:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "2307:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2299:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "2339:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2325:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2325:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2288:63:0"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2370:0:0"
            },
            "scope": 639,
            "src": "2265:528:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "2888:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 229,
                      "name": "daftarDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2906:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2919:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2906:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 228,
                  "id": 231,
                  "nodeType": "Return",
                  "src": "2899:26:0"
                }
              ]
            },
            "functionSelector": "7d3e9db8",
            "id": 233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDokter",
            "nameLocation": "2847:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2858:2:0"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2882:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2882:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2881:6:0"
            },
            "scope": 639,
            "src": "2838:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "3055:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 241,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "3074:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 242,
                            "name": "daftarDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "3082:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3095:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3082:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3074:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e64657820646f6b74657220746964616b2076616c69642e",
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3103:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3e7eef6eca0aa2543ab5b1b1fefb44d677dd8a64bfa1603b451f59a63157404",
                          "typeString": "literal_string \"Index dokter tidak valid.\""
                        },
                        "value": "Index dokter tidak valid."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3e7eef6eca0aa2543ab5b1b1fefb44d677dd8a64bfa1603b451f59a63157404",
                          "typeString": "literal_string \"Index dokter tidak valid.\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3066:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3066:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:65:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 248,
                      "name": "daftarDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3149:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 250,
                    "indexExpression": {
                      "id": 249,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 235,
                      "src": "3162:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3149:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 239,
                  "id": 251,
                  "nodeType": "Return",
                  "src": "3142:26:0"
                }
              ]
            },
            "functionSelector": "046bdbcc",
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDokterByIndex",
            "nameLocation": "2996:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3018:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "3013:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3012:12:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "3046:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3046:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3045:9:0"
            },
            "scope": 639,
            "src": "2987:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "3298:168:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 263,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3317:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 265,
                        "indexExpression": {
                          "id": 264,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 255,
                          "src": "3326:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3317:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3336:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3309:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3309:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "3309:53:0"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 269,
                          "name": "dataDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "3373:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                            "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                          }
                        },
                        "id": 271,
                        "indexExpression": {
                          "id": 270,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 255,
                          "src": "3384:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3373:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$11_storage",
                          "typeString": "struct RekamMedis.Dokter storage ref"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3393:5:0",
                      "memberName": "aktif",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "3373:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 273,
                      "name": "_aktif",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "3401:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3373:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3373:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 277,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "3442:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 278,
                        "name": "_aktif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3451:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 276,
                      "name": "DokterStatusDiubah",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "3423:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "EmitStatement",
                  "src": "3418:40:0"
                }
              ]
            },
            "functionSelector": "932e0f6d",
            "id": 282,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 260,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 259,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "3287:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 135,
                  "src": "3287:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3287:10:0"
              }
            ],
            "name": "setStatusDokter",
            "nameLocation": "3234:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "3258:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3250:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3250:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_aktif",
                  "nameLocation": "3272:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3267:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3267:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3249:30:0"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3298:0:0"
            },
            "scope": 639,
            "src": "3225:241:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 350,
              "nodeType": "Block",
              "src": "3622:507:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 292,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3641:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 294,
                        "indexExpression": {
                          "id": 293,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "3650:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3641:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3660:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3633:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3633:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "3633:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 299,
                          "name": "isPasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "3705:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 301,
                        "indexExpression": {
                          "id": 300,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "3714:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3705:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617369656e20746964616b207465726461667461722e",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3724:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4782a23f877cf9a2cb61015c9d3479d89c3bb6c338a0540e7268bf1efb9819c",
                          "typeString": "literal_string \"Pasien tidak terdaftar.\""
                        },
                        "value": "Pasien tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4782a23f877cf9a2cb61015c9d3479d89c3bb6c338a0540e7268bf1efb9819c",
                          "typeString": "literal_string \"Pasien tidak terdaftar.\""
                        }
                      ],
                      "id": 298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3697:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3697:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3697:53:0"
                },
                {
                  "assignments": [
                    309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 309,
                      "mutability": "mutable",
                      "name": "daftarPasien",
                      "nameLocation": "3781:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 350,
                      "src": "3763:30:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 307,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3763:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 308,
                        "nodeType": "ArrayTypeName",
                        "src": "3763:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 314,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 310,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3796:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 312,
                      "indexExpression": {
                        "id": 311,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "3807:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3796:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3816:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "3796:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3763:67:0"
                },
                {
                  "body": {
                    "id": 337,
                    "nodeType": "Block",
                    "src": "3888:141:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 326,
                              "name": "daftarPasien",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "3907:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 328,
                            "indexExpression": {
                              "id": 327,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 316,
                              "src": "3920:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3907:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 329,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "3926:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3907:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 336,
                        "nodeType": "IfStatement",
                        "src": "3903:115:0",
                        "trueBody": {
                          "id": 335,
                          "nodeType": "Block",
                          "src": "3935:83:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "50617369656e20737564616820646974756761736b616e206b6520646f6b74657220696e692e",
                                    "id": 332,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3961:40:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c614628bd02fed10ab7037aa9ef96182341b00560e3c47f216b8b35ae12ce6a9",
                                      "typeString": "literal_string \"Pasien sudah ditugaskan ke dokter ini.\""
                                    },
                                    "value": "Pasien sudah ditugaskan ke dokter ini."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c614628bd02fed10ab7037aa9ef96182341b00560e3c47f216b8b35ae12ce6a9",
                                      "typeString": "literal_string \"Pasien sudah ditugaskan ke dokter ini.\""
                                    }
                                  ],
                                  "id": 331,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967277,
                                    4294967277
                                  ],
                                  "referencedDeclaration": 4294967277,
                                  "src": "3954:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3954:48:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 334,
                              "nodeType": "ExpressionStatement",
                              "src": "3954:48:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 319,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "3858:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 320,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "3862:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3875:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3862:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3858:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 338,
                  "initializationExpression": {
                    "assignments": [
                      316
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3851:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "3846:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3846:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 318,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3855:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3846:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3883:3:0",
                      "subExpression": {
                        "id": 323,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "3883:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 325,
                    "nodeType": "ExpressionStatement",
                    "src": "3883:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3841:188:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 342,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "4057:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 339,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "4039:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4052:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4039:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4039:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "4039:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 346,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "4104:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 347,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "4113:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 345,
                      "name": "PasienDiassignKeDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "4081:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4081:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "EmitStatement",
                  "src": "4076:45:0"
                }
              ]
            },
            "functionSelector": "19e8f405",
            "id": 351,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 289,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 288,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "3611:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 135,
                  "src": "3611:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3611:10:0"
              }
            ],
            "name": "assignPasienToDokter",
            "nameLocation": "3524:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "3563:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "3555:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3555:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "3589:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "3581:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3544:59:0"
            },
            "returnParameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3622:0:0"
            },
            "scope": 639,
            "src": "3515:614:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "4323:110:0",
              "statements": [
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "4349:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "4334:16:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                        "typeString": "struct RekamMedis.Dokter"
                      },
                      "typeName": {
                        "id": 364,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 363,
                          "name": "Dokter",
                          "nameLocations": [
                            "4334:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "4334:6:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "4334:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                          "typeString": "struct RekamMedis.Dokter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "baseExpression": {
                      "id": 366,
                      "name": "dataDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "4353:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                        "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                      }
                    },
                    "id": 368,
                    "indexExpression": {
                      "id": 367,
                      "name": "_dokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "4364:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4353:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dokter_$11_storage",
                      "typeString": "struct RekamMedis.Dokter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4334:38:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 370,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "4391:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4393:4:0",
                        "memberName": "nama",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "4391:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 372,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "4399:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4401:5:0",
                        "memberName": "aktif",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "4399:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 374,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "4408:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4410:14:0",
                        "memberName": "assignedPasien",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "4408:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "id": 376,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4390:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_bool_$_t_array$_t_address_$dyn_storage_$",
                      "typeString": "tuple(string storage ref,bool,address[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 362,
                  "id": 377,
                  "nodeType": "Return",
                  "src": "4383:42:0"
                }
              ]
            },
            "functionSelector": "3da05518",
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDokter",
            "nameLocation": "4170:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "4198:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "4190:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4190:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4179:33:0"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "nama",
                  "nameLocation": "4275:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "4261:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4261:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "aktif",
                  "nameLocation": "4286:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "4281:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "4310:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "4293:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 359,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4293:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 360,
                    "nodeType": "ArrayTypeName",
                    "src": "4293:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4260:57:0"
            },
            "scope": 639,
            "src": "4161:272:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "4535:265:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4554:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 387,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "4555:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 389,
                          "indexExpression": {
                            "id": 388,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "4564:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4555:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c616d617420737564616820746572646166746172207365626167616920446f6b7465722e",
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4574:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be029ad283bd7570d827e2efd69af31e6d9aa723e23fc4389e6b595e7e86d11b",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Dokter.\""
                        },
                        "value": "Alamat sudah terdaftar sebagai Dokter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be029ad283bd7570d827e2efd69af31e6d9aa723e23fc4389e6b595e7e86d11b",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Dokter.\""
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4546:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4546:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "4546:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4634:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 395,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "4635:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 397,
                          "indexExpression": {
                            "id": 396,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "4644:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4635:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617369656e207375646168207465726461667461722e",
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4654:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64341dd50e2f06c0cac41d11d350ddc2b418e49e56f752b197f71f27c89db58a",
                          "typeString": "literal_string \"Pasien sudah terdaftar.\""
                        },
                        "value": "Pasien sudah terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64341dd50e2f06c0cac41d11d350ddc2b418e49e56f752b197f71f27c89db58a",
                          "typeString": "literal_string \"Pasien sudah terdaftar.\""
                        }
                      ],
                      "id": 394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4626:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4626:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "4626:54:0"
                },
                {
                  "expression": {
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 402,
                        "name": "isPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "4691:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 404,
                      "indexExpression": {
                        "id": 403,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "4700:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4691:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4711:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4691:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "4691:24:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 411,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "4744:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 408,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "4726:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4739:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4726:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4726:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "4726:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 415,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "4784:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 414,
                      "name": "PasienTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "4768:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4768:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "EmitStatement",
                  "src": "4763:29:0"
                }
              ]
            },
            "functionSelector": "010ef3b3",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 384,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 383,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "4524:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 135,
                  "src": "4524:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4524:10:0"
              }
            ],
            "name": "registerPasien",
            "nameLocation": "4485:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "4508:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "4500:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4500:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4499:17:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4535:0:0"
            },
            "scope": 639,
            "src": "4476:324:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "4874:210:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4893:21:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 423,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "4894:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 426,
                          "indexExpression": {
                            "expression": {
                              "id": 424,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4903:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4907:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4903:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4894:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e64612073756461682074657264616674617220736562616761692050617369656e2e",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4916:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0841d6660aee72f790cc47020ada23ff80bb1ecf0407dbd179fa7f96a310aa51",
                          "typeString": "literal_string \"Anda sudah terdaftar sebagai Pasien.\""
                        },
                        "value": "Anda sudah terdaftar sebagai Pasien."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0841d6660aee72f790cc47020ada23ff80bb1ecf0407dbd179fa7f96a310aa51",
                          "typeString": "literal_string \"Anda sudah terdaftar sebagai Pasien.\""
                        }
                      ],
                      "id": 422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4885:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:70:0"
                },
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 431,
                        "name": "isPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "4966:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 434,
                      "indexExpression": {
                        "expression": {
                          "id": 432,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4975:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4979:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4975:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4966:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4989:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4966:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 441,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5022:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5026:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5022:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 438,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "5004:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5017:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5004:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5004:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "5004:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 446,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5065:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5069:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5065:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 445,
                      "name": "PasienTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "5049:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5049:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "EmitStatement",
                  "src": "5044:32:0"
                }
              ]
            },
            "functionSelector": "334181f2",
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selfRegisterPasien",
            "nameLocation": "4846:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4864:2:0"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4874:0:0"
            },
            "scope": 639,
            "src": "4837:247:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "5186:174:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 458,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "5201:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 459,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "5210:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5201:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 463,
                  "nodeType": "IfStatement",
                  "src": "5197:34:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "41646d696e",
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5224:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a729ef4e25027bc652fc8b5c4d1d902947361fa7c8e7b4905e877823f27331b3",
                        "typeString": "literal_string \"Admin\""
                      },
                      "value": "Admin"
                    },
                    "functionReturnParameters": 457,
                    "id": 462,
                    "nodeType": "Return",
                    "src": "5217:14:0"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 464,
                      "name": "isDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "5246:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 466,
                    "indexExpression": {
                      "id": 465,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "5255:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5246:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 469,
                  "nodeType": "IfStatement",
                  "src": "5242:36:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "446f6b746572",
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5270:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ed409fc39e86bba01e2f3ce892f3153d258f5daf56a4904da0fb72c6ff04a7d8",
                        "typeString": "literal_string \"Dokter\""
                      },
                      "value": "Dokter"
                    },
                    "functionReturnParameters": 457,
                    "id": 468,
                    "nodeType": "Return",
                    "src": "5263:15:0"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 470,
                      "name": "isPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "5293:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 472,
                    "indexExpression": {
                      "id": 471,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "5302:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5293:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 475,
                  "nodeType": "IfStatement",
                  "src": "5289:36:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "50617369656e",
                      "id": 473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5317:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6383b0bd00903b5c3a202742c52694704f8578001e3c3fd193167fcaac2674db",
                        "typeString": "literal_string \"Pasien\""
                      },
                      "value": "Pasien"
                    },
                    "functionReturnParameters": 457,
                    "id": 474,
                    "nodeType": "Return",
                    "src": "5310:15:0"
                  }
                },
                {
                  "expression": {
                    "hexValue": "556e6b6e6f776e",
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5343:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ff165d3fe0272c13129fc9e1aecd998364a5fdcad04c6ae84a7d1dfc3d06a17",
                      "typeString": "literal_string \"Unknown\""
                    },
                    "value": "Unknown"
                  },
                  "functionReturnParameters": 457,
                  "id": 477,
                  "nodeType": "Return",
                  "src": "5336:16:0"
                }
              ]
            },
            "functionSelector": "27820851",
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRole",
            "nameLocation": "5123:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5143:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "5135:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5135:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5134:15:0"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "5171:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5170:15:0"
            },
            "scope": 639,
            "src": "5114:246:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "5516:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 487,
                      "name": "rekamMedisByPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "5534:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 489,
                    "indexExpression": {
                      "id": 488,
                      "name": "pasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "5553:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5534:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 486,
                  "id": 490,
                  "nodeType": "Return",
                  "src": "5527:33:0"
                }
              ]
            },
            "functionSelector": "c967ede8",
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRekamMedisIdsByPasien",
            "nameLocation": "5423:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "5466:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "5458:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5458:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5447:32:0"
            },
            "returnParameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "5501:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 483,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "5501:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 484,
                    "nodeType": "ArrayTypeName",
                    "src": "5501:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5500:15:0"
            },
            "scope": 639,
            "src": "5414:154:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 500,
              "nodeType": "Block",
              "src": "5676:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 498,
                    "name": "daftarPasien",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "5694:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 497,
                  "id": 499,
                  "nodeType": "Return",
                  "src": "5687:19:0"
                }
              ]
            },
            "functionSelector": "51887b67",
            "id": 501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDaftarPasien",
            "nameLocation": "5619:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5634:2:0"
            },
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 496,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "5658:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 494,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5658:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 495,
                    "nodeType": "ArrayTypeName",
                    "src": "5658:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5657:18:0"
            },
            "scope": 639,
            "src": "5610:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "5800:78:0",
              "statements": [
                {
                  "expression": {
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 508,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "5811:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 509,
                      "name": "_newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "5819:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5811:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "5811:17:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 513,
                        "name": "_newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "5860:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 512,
                      "name": "AdminDitetapkan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "5844:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5844:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "EmitStatement",
                  "src": "5839:31:0"
                }
              ]
            },
            "functionSelector": "704b6c02",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 506,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 505,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "5789:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 135,
                  "src": "5789:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5789:10:0"
              }
            ],
            "name": "setAdmin",
            "nameLocation": "5754:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "_newAdmin",
                  "nameLocation": "5771:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "5763:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5763:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5762:19:0"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5800:0:0"
            },
            "scope": 639,
            "src": "5745:133:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 585,
              "nodeType": "Block",
              "src": "6362:567:0",
              "statements": [
                {
                  "expression": {
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6373:17:0",
                    "subExpression": {
                      "id": 547,
                      "name": "rekamMedisCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "6373:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "6373:17:0"
                },
                {
                  "expression": {
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 550,
                        "name": "rekamMedis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "6401:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                          "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                        }
                      },
                      "id": 552,
                      "indexExpression": {
                        "id": 551,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "6412:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6401:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                        "typeString": "struct RekamMedis.RekamMedisData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 554,
                          "name": "rekamMedisCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "6460:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 555,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 519,
                          "src": "6490:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 556,
                          "name": "_nama",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "6512:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 557,
                          "name": "_umur",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 523,
                          "src": "6532:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 558,
                          "name": "_golonganDarah",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 525,
                          "src": "6552:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 559,
                          "name": "_tanggalLahir",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 527,
                          "src": "6581:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 560,
                          "name": "_gender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "6609:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 561,
                          "name": "_alamat",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 531,
                          "src": "6631:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 562,
                          "name": "_noTelepon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 533,
                          "src": "6653:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 563,
                          "name": "_email",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "6678:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 564,
                          "name": "_diagnosa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 537,
                          "src": "6699:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 565,
                          "name": "_foto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 539,
                          "src": "6723:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 566,
                          "name": "_catatan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "6743:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6766:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 553,
                        "name": "RekamMedisData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "6431:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RekamMedisData_$59_storage_ptr_$",
                          "typeString": "type(struct RekamMedis.RekamMedisData storage pointer)"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6431:350:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_memory_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData memory"
                      }
                    },
                    "src": "6401:380:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "6401:380:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 575,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "6825:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 571,
                          "name": "rekamMedisByPasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "6792:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 573,
                        "indexExpression": {
                          "id": 572,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 519,
                          "src": "6811:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6792:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6820:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6792:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6792:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "6792:49:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 579,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "6879:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 580,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "6896:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 581,
                        "name": "_diagnosa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "6905:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6916:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 578,
                      "name": "RekamMedisDitambahkan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "6857:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,string memory,bool)"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6857:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "EmitStatement",
                  "src": "6852:69:0"
                }
              ]
            },
            "functionSelector": "68f5dc99",
            "id": 586,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 544,
                    "name": "_pasien",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 519,
                    "src": "6353:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 545,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 543,
                  "name": "hanyaPasien",
                  "nameLocations": [
                    "6341:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 167,
                  "src": "6341:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6341:20:0"
              }
            ],
            "name": "tambahRekamMedis",
            "nameLocation": "5929:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "5964:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "5956:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5956:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "5996:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "5982:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5982:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "mutability": "mutable",
                  "name": "_umur",
                  "nameLocation": "6017:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6012:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6012:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "_golonganDarah",
                  "nameLocation": "6047:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6033:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6033:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "mutability": "mutable",
                  "name": "_tanggalLahir",
                  "nameLocation": "6086:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6072:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6072:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "_gender",
                  "nameLocation": "6124:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6110:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6110:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "_alamat",
                  "nameLocation": "6156:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6142:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6142:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "_noTelepon",
                  "nameLocation": "6188:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6174:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6174:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 535,
                  "mutability": "mutable",
                  "name": "_email",
                  "nameLocation": "6223:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6209:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6209:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "_diagnosa",
                  "nameLocation": "6254:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6240:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6240:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "_foto",
                  "nameLocation": "6288:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6274:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6274:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "_catatan",
                  "nameLocation": "6318:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6304:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6304:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5945:388:0"
            },
            "returnParameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6362:0:0"
            },
            "scope": 639,
            "src": "5920:1009:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "7120:199:0",
              "statements": [
                {
                  "assignments": [
                    599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 599,
                      "mutability": "mutable",
                      "name": "rekam",
                      "nameLocation": "7154:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 622,
                      "src": "7131:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData"
                      },
                      "typeName": {
                        "id": 598,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 597,
                          "name": "RekamMedisData",
                          "nameLocations": [
                            "7131:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59,
                          "src": "7131:14:0"
                        },
                        "referencedDeclaration": 59,
                        "src": "7131:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 603,
                  "initialValue": {
                    "baseExpression": {
                      "id": 600,
                      "name": "rekamMedis",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "7162:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                        "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                      }
                    },
                    "id": 602,
                    "indexExpression": {
                      "id": 601,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "7173:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7162:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7131:46:0"
                },
                {
                  "expression": {
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 604,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "7188:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7194:8:0",
                      "memberName": "diagnosa",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "7188:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 607,
                      "name": "_diagnosa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 590,
                      "src": "7205:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7188:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "7188:26:0"
                },
                {
                  "expression": {
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 610,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "7225:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7231:7:0",
                      "memberName": "catatan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "7225:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 613,
                      "name": "_catatan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 592,
                      "src": "7241:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7225:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "7225:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 617,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "7286:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 618,
                        "name": "_diagnosa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "7291:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 619,
                        "name": "_catatan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "7302:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 616,
                      "name": "RekamMedisDiperbarui",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "7265:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7265:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "EmitStatement",
                  "src": "7260:51:0"
                }
              ]
            },
            "functionSelector": "bb2be1cc",
            "id": 623,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 595,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 594,
                  "name": "hanyaDokterAktif",
                  "nameLocations": [
                    "7103:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153,
                  "src": "7103:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7103:16:0"
              }
            ],
            "name": "updateRekamMedis",
            "nameLocation": "6986:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 588,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "7018:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "7013:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 587,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7013:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "_diagnosa",
                  "nameLocation": "7046:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "7032:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7032:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "_catatan",
                  "nameLocation": "7080:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "7066:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7066:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7002:93:0"
            },
            "returnParameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7120:0:0"
            },
            "scope": 639,
            "src": "6977:342:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "7426:48:0",
              "statements": [
                {
                  "expression": {
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 630,
                          "name": "rekamMedis",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "7437:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                            "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                          }
                        },
                        "id": 632,
                        "indexExpression": {
                          "id": 631,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 625,
                          "src": "7448:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7437:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                          "typeString": "struct RekamMedis.RekamMedisData storage ref"
                        }
                      },
                      "id": 633,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7453:5:0",
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "7437:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7461:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7437:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "7437:29:0"
                }
              ]
            },
            "functionSelector": "083d8824",
            "id": 638,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 628,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 627,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "7415:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 135,
                  "src": "7415:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7415:10:0"
              }
            ],
            "name": "nonaktifkanRekamMedis",
            "nameLocation": "7376:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "7403:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "7398:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7398:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7397:10:0"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7426:0:0"
            },
            "scope": 639,
            "src": "7367:107:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 640,
        "src": "69:7408:0",
        "usedErrors": []
      }
    ],
    "src": "33:7446:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4Fe13A99DffEc4FF9905E75450Ba3c3d4bdD2468",
      "transactionHash": "0x4b342af94b54bac59d34bb1818f2371f696c6b680e1619326b205939ba65b629"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-05-15T23:58:54.151Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}