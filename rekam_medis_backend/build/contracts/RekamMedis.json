{
  "contractName": "RekamMedis",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminDitetapkan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        }
      ],
      "name": "DokterStatusDiubah",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "spesialisasi",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "nomorLisensi",
          "type": "string"
        }
      ],
      "name": "DokterTerdaftar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "PasienDiassignKeDokter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "PasienTerdaftar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        }
      ],
      "name": "RekamMedisDiperbarui",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "RekamMedisDitambahkan",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "daftarDokter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "daftarPasien",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dataDokter",
      "outputs": [
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "spesialisasi",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "nomorLisensi",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDokter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPasien",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedis",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedisByPasien",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rekamMedisCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedisVersions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_spesialisasi",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_nomorLisensi",
          "type": "string"
        }
      ],
      "name": "registerDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDokter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getDokterByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_aktif",
          "type": "bool"
        }
      ],
      "name": "setStatusDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_spesialisasi",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_nomorLisensi",
          "type": "string"
        }
      ],
      "name": "updateDataDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "assignPasienToDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "isPasienAssignedToDokter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        }
      ],
      "name": "getAssignedPasienByDokter",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        }
      ],
      "name": "getDokter",
      "outputs": [
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "spesialisasi",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "nomorLisensi",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        },
        {
          "internalType": "address[]",
          "name": "pasien",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "registerPasien",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "selfRegisterPasien",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserRole",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "getRekamMedisIdsByPasien",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDaftarPasien",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "getNamaPasien",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_catatan",
          "type": "string"
        }
      ],
      "name": "tambahRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_catatan",
          "type": "string"
        }
      ],
      "name": "updateRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRekamMedisVersions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pasien",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "nama",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "umur",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "golonganDarah",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tanggalLahir",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "gender",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "alamat",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "noTelepon",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "diagnosa",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "foto",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "catatan",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ],
          "internalType": "struct RekamMedis.RekamMedisData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "nonaktifkanRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminDitetapkan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"}],\"name\":\"DokterStatusDiubah\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"spesialisasi\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nomorLisensi\",\"type\":\"string\"}],\"name\":\"DokterTerdaftar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"PasienDiassignKeDokter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"PasienTerdaftar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"}],\"name\":\"RekamMedisDiperbarui\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"RekamMedisDitambahkan\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"assignPasienToDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daftarDokter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daftarPasien\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dataDokter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spesialisasi\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nomorLisensi\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"}],\"name\":\"getAssignedPasienByDokter\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDaftarPasien\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"}],\"name\":\"getDokter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spesialisasi\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nomorLisensi\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"pasien\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDokterByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"getNamaPasien\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"getRekamMedisIdsByPasien\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRekamMedisVersions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"internalType\":\"struct RekamMedis.RekamMedisData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserRole\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDokter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPasien\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"isPasienAssignedToDokter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"nonaktifkanRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_spesialisasi\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_nomorLisensi\",\"type\":\"string\"}],\"name\":\"registerDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"registerPasien\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedisByPasien\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rekamMedisCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedisVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selfRegisterPasien\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_aktif\",\"type\":\"bool\"}],\"name\":\"setStatusDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_catatan\",\"type\":\"string\"}],\"name\":\"tambahRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDokter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_spesialisasi\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_nomorLisensi\",\"type\":\"string\"}],\"name\":\"updateDataDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_catatan\",\"type\":\"string\"}],\"name\":\"updateRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RekamMedis.sol\":\"RekamMedis\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/RekamMedis.sol\":{\"keccak256\":\"0x8286c3ff4bc25981c7cd7fcb6b3b1fb49bf6723982c4d0fe3039b035d9fa0d1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbc13ba9477667679ce8aea463f9ddca01ffd516432f5ce9c86ebd0698a09cd8\",\"dweb:/ipfs/QmUfHkEXTHfiZnES6F4iK5ZdTpb1czsizKNtBN4tkazjyJ\"]}},\"version\":1}",
  "bytecode": "0x6080806040523461002857600080546001600160a01b031916331790556142d0908161002e8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062410cb31461397a578063010ef3b314613839578063046bdbcc146137cb578063083d8824146137875780631132beb51461374857806319e8f4051461359e578063278208511461357a5780632e2dd1021461355c578063334181f214613496578063350ee3fc1461342b5780633da0551814613373578063426996511461333157806351887b671461329c5780635c4c93481461325d578063683700871461320257806368f5dc9914611d2e57806370419a8114611cf8578063704b6c0214611c865780637d3e9db814611c68578063932e0f6d14611bb8578063abf72abb14611b75578063ae28c7a914611b3d578063c3c0fdea14611a9d578063c967ede8146119e9578063d688780214611721578063dd09a96814611639578063ddbd24d3146110e7578063e05c8a0e14610e45578063f7dc5714146101935763f851a4401461016557600080fd5b3461018e57600036600319011261018e576000546040516001600160a01b039091168152602090f35b600080fd5b3461018e5761018036600319011261018e576024356001600160401b03811161018e576101c4903690600401613b53565b6064356001600160401b03811161018e576101e3903690600401613b53565b6084356001600160401b03811161018e57610202903690600401613b53565b9160a4356001600160401b03811161018e57610222903690600401613b53565b9060c4356001600160401b03811161018e57610242903690600401613b53565b60e4356001600160401b03811161018e57610261903690600401613b53565b610104356001600160401b03811161018e57610281903690600401613b53565b91610124356001600160401b03811161018e576102a2903690600401613b53565b94610144356001600160401b03811161018e576102c3903690600401613b53565b97610164356001600160401b03811161018e576102e4903690600401613b53565b97600435600052600660205260018060a01b036001604060002001541633600052600260205260ff6040600020541680610e2e575b15610dcb576103289033613f8c565b15610d75576004356000526006602052604060002096600960205260406000208054600160401b8110156107f25761036591600182018155613d6e565b610d5f57888103610c69575b508051906001600160401b0382116107f257819061039f8261039660028d0154613ba9565b60028d01613e72565b602090601f8311600114610bf757600092610bec575b50508160011b916000199060031b1c19161760028801555b60443560038801558051906001600160401b0382116107f2578190610402826103f960048c0154613ba9565b60048c01613e72565b602090601f8311600114610b7a57600092610b6f575b50508160011b916000199060031b1c19161760048701555b8051906001600160401b0382116107f257819061045d8261045460058b0154613ba9565b60058b01613e72565b602090601f8311600114610afd57600092610af2575b50508160011b916000199060031b1c19161760058601555b8051906001600160401b0382116107f25781906104b8826104af60068a0154613ba9565b60068a01613e72565b602090601f8311600114610a8057600092610a75575b50508160011b916000199060031b1c19161760068501555b8051906001600160401b0382116107f25781906105138261050a6007890154613ba9565b60078901613e72565b602090601f8311600114610a03576000926109f8575b50508160011b916000199060031b1c19161760078401555b8051906001600160401b0382116107f257819061056e826105656008880154613ba9565b60088801613e72565b602090601f83116001146109865760009261097b575b50508160011b916000199060031b1c19161760088301555b8051906001600160401b0382116107f25781906105c9826105c06009870154613ba9565b60098701613e72565b602090601f8311600114610909576000926108fe575b50508160011b916000199060031b1c19161760098201555b81516001600160401b0381116107f25761062181610618600a850154613ba9565b600a8501613e72565b806020601f821160011461089157600091610886575b508160011b916000199060031b1c191617600a8201555b83516001600160401b0381116107f2576106788161066f600b850154613ba9565b600b8501613e72565b6020601f8211600114610813578190600c949596600092610808575b50508160011b916000199060031b1c191617600b8201555b01918051926001600160401b0384116107f2576106d3846106cd8354613ba9565b83613e72565b602093601f81116001146107645791610754918361074695947f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1397600091610759575b508160011b916000199060031b1c19161790555b6040519384936004358552606060208601526060850190613a63565b908382036040850152613a63565b0390a1005b905083015188610716565b601f1981168260005260206000209060005b8181106107da57508261075494927f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1398610746989795600194106107c1575b5050811b01905561072a565b85015160001960f88460031b161c1916905588806107b5565b85880151835560209788019760019093019201610776565b634e487b7160e01b600052604160045260246000fd5b015190508680610694565b600b830160005260206000209560005b601f198416811061086e5750958291600c959697600194601f19811610610855575b505050811b01600b8201556106ac565b015160001960f88460031b161c19169055868080610845565b82820151885560019097019660209283019201610823565b905083015186610637565b9150600a830160005260206000206000925b601f19831684106108e6576001935082601f198116106108cd575b5050811b01600a82015561064e565b85015160001960f88460031b161c1916905586806108be565b858101518255602093840193600190920191016108a3565b0151905086806105df565b9250600984016000526020600020906000935b601f1984168510610960576001945083601f19811610610947575b505050811b0160098201556105f7565b015160001960f88460031b161c19169055868080610937565b8181015183556020948501946001909301929091019061091c565b015190508780610584565b9250600885016000526020600020906000935b601f19841685106109dd576001945083601f198116106109c4575b505050811b01600883015561059c565b015160001960f88460031b161c191690558780806109b4565b81810151835560209485019460019093019290910190610999565b015190508880610529565b9250600786016000526020600020906000935b601f1984168510610a5a576001945083601f19811610610a41575b505050811b016007840155610541565b015160001960f88460031b161c19169055888080610a31565b81810151835560209485019460019093019290910190610a16565b0151905089806104ce565b9250600687016000526020600020906000935b601f1984168510610ad7576001945083601f19811610610abe575b505050811b0160068501556104e6565b015160001960f88460031b161c19169055898080610aae565b81810151835560209485019460019093019290910190610a93565b015190508a80610473565b9250600588016000526020600020906000935b601f1984168510610b54576001945083601f19811610610b3b575b505050811b01600586015561048b565b015160001960f88460031b161c191690558a8080610b2b565b81810151835560209485019460019093019290910190610b10565b015190508b80610418565b9250600489016000526020600020906000935b601f1984168510610bd1576001945083601f19811610610bb8575b505050811b016004870155610430565b015160001960f88460031b161c191690558b8080610ba8565b81810151835560209485019460019093019290910190610b8d565b015190508c806103b5565b925060028a016000526020600020906000935b601f1984168510610c4e576001945083601f19811610610c35575b505050811b0160028801556103cd565b015160001960f88460031b161c191690558c8080610c25565b81810151835560209485019460019093019290910190610c0a565b610d5990895481556001810160018060a01b0360018c0154166001600160601b0360a01b825416179055610ca360028b01600283016141c2565b60038a01546003820155610cbd60048b01600483016141c2565b610ccd60058b01600583016141c2565b610cdd60068b01600683016141c2565b610ced60078b01600783016141c2565b610cfd60088b01600883016141c2565b610d0d60098b01600983016141c2565b610d1d600a8b01600a83016141c2565b610d2d600b8b01600b83016141c2565b610d3d600c8b01600c83016141c2565b600d60ff818c01541691019060ff801983541691151516179055565b8b610371565b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152602860248201527f446f6b74657220746964616b2064692d61737369676e20756e74756b2070617360448201526734b2b71034b7349760c11b6064820152608490fd5b60405162461bcd60e51b815260206004820152603560248201527f48616e796120646f6b74657220616b7469662079616e672062697361206d656d6044820152743832b93130b93ab4903932b5b0b69036b2b234b99760591b6064820152608490fd5b50600160205260ff60036040600020015416610319565b3461018e57610e5336613d8a565b60005490939192916001600160a01b0391610e719083163314613dfd565b168060005260209060028252610e8e60ff60406000205416613f1b565b80600052600193848352604060002084516001600160401b03958682116107f2578190610ec582610ebf8654613ba9565b86613e72565b8690601f831160011461108457600092611079575b5050600019600383901b1c191690871b1790555b8160005284835284604060002001908051908582116107f2578190610f1782610ebf8654613ba9565b8590601f83116001146110165760009261100b575b5050600019600383901b1c191690861b1790555b60005282815260026040600020019380519283116107f257610f6c83610f668754613ba9565b87613e72565b81601f8411600114610fa85750928293918392600094610f9d575b50501b916000199060031b1c1916179055600080f35b015192508580610f87565b919083601f1981168760005284600020946000905b88838310610ff15750505010610fd8575b505050811b019055005b015160001960f88460031b161c19169055838080610fce565b858701518855909601959485019487935090810190610fbd565b015190508880610f2c565b90889350601f1983169185600052876000209260005b89828210611063575050841161104a575b505050811b019055610f40565b015160001960f88460031b161c1916905588808061103d565b8385015186558c9790950194938401930161102c565b015190508980610eda565b90899350601f1983169185600052886000209260005b8a8282106110d157505084116110b8575b505050811b019055610eee565b015160001960f88460031b161c191690558980806110ab565b8385015186558d9790950194938401930161109a565b3461018e576110f536613d8a565b929061110c60018060a01b03600054163314613dfd565b6001600160a01b03821660009081526002602052604090205460ff166115f4576001600160a01b03821660009081526003602052604090205460ff166115a0576001600160a01b03821660009081526002602052604090819020805460ff19166001179055519361117c85613afc565b600085526040519460a086018681106001600160401b038211176107f25760405284865282602087015281604087015260016060870152608086015260018060a01b0383166000526001602052604060002085518051906001600160401b0382116107f25781906111f182610ebf8654613ba9565b602090601f831160011461153457600092611529575b50508160011b916000199060031b1c19161781555b60208601518051906001600160401b0382116107f257819061124e826112456001870154613ba9565b60018701613e72565b602090601f83116001146114b7576000926114ac575b50508160011b916000199060031b1c19161760018201555b60408601518051906001600160401b0382116107f2576112ac826112a36002860154613ba9565b60028601613e72565b602090601f83116001146114375791806080949260049460009261142c575b50508160011b916000199060031b1c19161760028201555b61130260608901511515600383019060ff801983541691151516179055565b01950151948551906001600160401b0382116107f257600160401b968783116107f257602090825484845580851061140f575b500190600052602060002060005b8381106113f25750505050600454948510156107f2576113e4610754926113918760017f5e399ee004ff4fef571265f7bdd2e8ec7d18b86f1aeab0d8009f0df31b27259299016004556139fe565b81549060031b9060018060a01b038816821b9160018060a01b03901b19161790556113d660405196879660018060a01b03168752608060208801526080870190613a63565b908582036040870152613a63565b908382036060850152613a63565b82516001600160a01b031681830155602090920191600101611343565b611426908460005285846000209182019101613e5b565b89611335565b015190508a806112cb565b906002840160005260206000209160005b601f19851681106114945750926080949260019260049583601f1981161061147b575b505050811b0160028201556112e3565b015160001960f88460031b161c191690558a808061146b565b91926020600181928685015181550194019201611448565b015190508880611264565b9250600184016000526020600020906000935b601f198416851061150e576001945083601f198116106114f5575b505050811b01600182015561127c565b015160001960f88460031b161c191690558880806114e5565b818101518355602094850194600190930192909101906114ca565b015190508880611207565b9250836000526020600020906000935b601f1984168510611585576001945083601f1981161061156c575b505050811b01815561121c565b015160001960f88460031b161c1916905588808061155f565b81810151835560209485019460019093019290910190611544565b60405162461bcd60e51b815260206004820152602660248201527f416c616d6174207375646168207465726461667461722073656261676169205060448201526530b9b4b2b71760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f446f6b746572207375646168207465726461667461722e0000000000000000006044820152606490fd5b3461018e57604036600319011261018e576024356004356000526009602052604060002090815481101561018e5761167091613d6e565b50805460018201546001600160a01b03169161171d9061169260028201613be3565b9060038101546116a460048301613be3565b6116b060058401613be3565b6116bc60068501613be3565b6116c860078601613be3565b6116d460088701613be3565b916116e160098801613be3565b936116ee600a8901613be3565b956116fb600b8a01613be3565b9760ff600d61170c600c8d01613be3565b9b0154169a6040519e8f9e8f613c89565b0390f35b3461018e5760208060031936011261018e57600435600052600990818152604060002080546001600160401b0381116107f257916040519260059461176a8383881b0186613b32565b81855260009384528284208386019491855b8484106118e9575050505050604051928184019082855251809152604081818601961b85010192916000955b8287106117b55785850386f35b909192938280600192603f1989820301855287519081518152848060a01b038383015116838201526118cc6118b86118a461189061187c61186861185661184361183061181360408c015160408c6101c091829101528c0190613a63565b6060808d0151908c01526080808d0151908c8303908d0152613a63565b60a0808c0151908b8303908c0152613a63565b60c0808b0151908a8303908b0152613a63565b60e089015188820360e08a0152613a63565b610100808901519088830390890152613a63565b610120808801519087830390880152613a63565b610140808701519086830390870152613a63565b610160808601519085830390860152613a63565b610180808501519084830390850152613a63565b916101a080910151151591015296019201960195929190926117a8565b600e8660019260409a989a516118fe81613ae0565b86548152848060a01b0385880154168382015261191d60028801613be3565b60408201526003870154606082015261193860048801613be3565b60808201526119488d8801613be3565b60a082015261195960068801613be3565b60c082015261196a60078801613be3565b60e082015261197b60088801613be3565b61010082015261198c868801613be3565b61012082015261199e600a8801613be3565b6101408201526119b0600b8801613be3565b6101608201526119c2600c8801613be3565b61018082015260ff600d8801541615156101a082015281520193019301929196949661177c565b3461018e5760208060031936011261018e576001600160a01b03611a0b6139d2565b1660005260078152604060002060405190818382549182815201908192600052846000209060005b86828210611a89578686611a4982880383613b32565b604051928392818401908285525180915260408401929160005b828110611a7257505050500390f35b835185528695509381019392810192600101611a63565b835485529093019260019283019201611a33565b3461018e57602036600319011261018e576001600160a01b03611abe6139d2565b166000526001602052611b156040600020611ad881613be3565b90611b31611ae860018301613be3565b91611b2360ff6003611afc60028501613be3565b9301541693604051968796608088526080880190613a63565b908682036020880152613a63565b908482036040860152613a63565b90151560608301520390f35b3461018e57602036600319011261018e5761171d611b61611b5c6139d2565b614117565b604051918291602083526020830190613a63565b3461018e57602036600319011261018e576004356000908152600660205260409020805460018201546001600160a01b03169161171d9061169260028201613be3565b3461018e57604036600319011261018e57611bd16139d2565b602435908115159182810361018e577f3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a92611c5b60409360018060a01b0390611c1f82600054163314613dfd565b1692836000526002602052611c3a60ff866000205416613f1b565b836000526001602052600385600020019060ff801983541691151516179055565b82519182526020820152a1005b3461018e57600036600319011261018e576020600454604051908152f35b3461018e57602036600319011261018e577f4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d6020611cc26139d2565b600054906001600160a01b0390611cdc3383851614613dfd565b1680916001600160601b0360a01b1617600055604051908152a1005b3461018e57604036600319011261018e576020611d24611d166139d2565b611d1e6139e8565b90613f8c565b6040519015158152f35b3461018e5761018036600319011261018e57611d486139d2565b6024356001600160401b03811161018e57611d67903690600401613b53565b906064356001600160401b03811161018e57611d87903690600401613b53565b916084356001600160401b03811161018e57611da7903690600401613b53565b9260a4356001600160401b03811161018e57611dc7903690600401613b53565b9360c4356001600160401b03811161018e57611de7903690600401613b53565b9460e4356001600160401b03811161018e57611e07903690600401613b53565b610104356001600160401b03811161018e57611e27903690600401613b53565b90610124356001600160401b03811161018e57611e48903690600401613b53565b97610144356001600160401b03811161018e57611e69903690600401613b53565b936001600160401b03610164351161018e57611e8b3661016435600401613b53565b95336001600160a01b038b161480156131ee575b1561318357611eaf600854613f67565b978860085560018060a01b036000541633146000146128eb5750505050505050505060085460405191611ee183613ae0565b8183526001600160a01b03841660208401526040808401919091526000606084015251611f0d81613afc565b600081526080830152604051611f2281613afc565b6000815260a0830152604051611f3781613afc565b6000815260c0830152604051611f4c81613afc565b6000815260e0830152604051611f6181613afc565b60008152610100830152604051611f7781613afc565b60008152610120830152604051611f8d81613afc565b60008152610140830152604051611fa381613afc565b60008152610160830152604051611fb981613afc565b6000815261018083015260016101a08301526000526006602052604060002090805182556001820160018060a01b036020830151166001600160601b0360a01b82541617905560408101518051906001600160401b0382116107f2578190612031826120286002880154613ba9565b60028801613e72565b602090601f83116001146128795760009261286e575b50508160011b916000199060031b1c19161760028301555b6060810151600383015560808101518051906001600160401b0382116107f257819061209b826120926004880154613ba9565b60048801613e72565b602090601f83116001146127fc576000926127f1575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116107f25781906120fb826120f26005880154613ba9565b60058801613e72565b602090601f831160011461277f57600092612774575b50508160011b916000199060031b1c19161760058301555b60c081015180516001600160401b0381116107f25780600685019261215282610ebf8654613ba9565b602090601f831160011461270e57600092612703575b50508160011b916000199060031b1c19161790555b60e081015180516001600160401b0381116107f2578060078501926121a682610ebf8654613ba9565b602090601f831160011461269d57600092612692575b50508160011b916000199060031b1c19161790555b61010081015180516001600160401b0381116107f2578060088501926121fb82610ebf8654613ba9565b602090601f831160011461262c57600092612621575b50508160011b916000199060031b1c19161790555b61012081015180516001600160401b0381116107f25780600985019261225082610ebf8654613ba9565b602090601f83116001146125bb576000926125b0575b50508160011b916000199060031b1c19161790555b61014081015180516001600160401b0381116107f25780600a8501926122a582610ebf8654613ba9565b602090601f831160011461254a5760009261253f575b50508160011b916000199060031b1c19161790555b61016081015180516001600160401b0381116107f25780600b8501926122fa82610ebf8654613ba9565b602090601f83116001146124d9576000926124ce575b50508160011b916000199060031b1c19161790555b600c82016101808201518051906001600160401b0382116107f2576123548261234e8554613ba9565b85613e72565b602090601f831160011461245b5792826101a0936123a5979693600d96600092612450575b50508160011b916000199060031b1c19161790555b0151151591019060ff801983541691151516179055565b6001600160a01b038116600090815260076020526040902060085481549391600160401b8510156107f257846124019160017f8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c99797018155613a4b565b819291549060031b91821b91600019901b191617905561244460085491604051938493845260018060a01b03166020840152608060408401526080830190613a63565b600160608301520390a1005b015190508a80612379565b90601f198316918460005260206000209260005b8181106124b65750936123a5979693600d9693600193836101a0981061249d575b505050811b01905561238e565b015160001960f88460031b161c191690558a8080612490565b9293602060018192878601518155019501930161246f565b015190508780612310565b6000858152602081209350601f198516905b818110612527575090846001959493921061250e575b505050811b019055612325565b015160001960f88460031b161c19169055878080612501565b929360206001819287860151815501950193016124eb565b0151905087806122bb565b6000858152602081209350601f198516905b818110612598575090846001959493921061257f575b505050811b0190556122d0565b015160001960f88460031b161c19169055878080612572565b9293602060018192878601518155019501930161255c565b015190508780612266565b6000858152602081209350601f198516905b81811061260957509084600195949392106125f0575b505050811b01905561227b565b015160001960f88460031b161c191690558780806125e3565b929360206001819287860151815501950193016125cd565b015190508780612211565b6000858152602081209350601f198516905b81811061267a5750908460019594939210612661575b505050811b019055612226565b015160001960f88460031b161c19169055878080612654565b9293602060018192878601518155019501930161263e565b0151905087806121bc565b6000858152602081209350601f198516905b8181106126eb57509084600195949392106126d2575b505050811b0190556121d1565b015160001960f88460031b161c191690558780806126c5565b929360206001819287860151815501950193016126af565b015190508780612168565b6000858152602081209350601f198516905b81811061275c5750908460019594939210612743575b505050811b01905561217d565b015160001960f88460031b161c19169055878080612736565b92936020600181928786015181550195019301612720565b015190508680612111565b9250600585016000526020600020906000935b601f19841685106127d6576001945083601f198116106127bd575b505050811b016005830155612129565b015160001960f88460031b161c191690558680806127ad565b81810151835560209485019460019093019290910190612792565b0151905086806120b1565b9250600485016000526020600020906000935b601f1984168510612853576001945083601f1981161061283a575b505050811b0160048301556120c9565b015160001960f88460031b161c1916905586808061282a565b8181015183556020948501946001909301929091019061280f565b015190508680612047565b9250600285016000526020600020906000935b601f19841685106128d0576001945083601f198116106128b7575b505050811b01600283015561205f565b015160001960f88460031b161c191690558680806128a7565b8181015183556020948501946001909301929091019061288c565b604051996128f88b613ae0565b898b5260018060a01b038c1660208c015260408b015260443560608b015260808a015260a089015260c088015260e08701526101008601526101208501528561014085015261016084015261018083015260016101a08301526000526006602052604060002090805182556001820160018060a01b036020830151166001600160601b0360a01b82541617905560408101518051906001600160401b0382116107f25781906129ae826120286002880154613ba9565b602090601f831160011461311157600092613106575b50508160011b916000199060031b1c19161760028301555b6060810151600383015560808101518051906001600160401b0382116107f2578190612a0f826120926004880154613ba9565b602090601f831160011461309457600092613089575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116107f2578190612a66826120f26005880154613ba9565b602090601f83116001146130175760009261300c575b50508160011b916000199060031b1c19161760058301555b60c081015180516001600160401b0381116107f257806006850192612abd82610ebf8654613ba9565b602090601f8311600114612fa657600092612f9b575b50508160011b916000199060031b1c19161790555b60e081015180516001600160401b0381116107f257806007850192612b1182610ebf8654613ba9565b602090601f8311600114612f3557600092612f2a575b50508160011b916000199060031b1c19161790555b61010081015180516001600160401b0381116107f257806008850192612b6682610ebf8654613ba9565b602090601f8311600114612ec457600092612eb9575b50508160011b916000199060031b1c19161790555b61012081015180516001600160401b0381116107f257806009850192612bbb82610ebf8654613ba9565b602090601f8311600114612e5357600092612e48575b50508160011b916000199060031b1c19161790555b61014081015180516001600160401b0381116107f25780600a850192612c1082610ebf8654613ba9565b602090601f8311600114612de257600092612dd7575b50508160011b916000199060031b1c19161790555b61016081015180516001600160401b0381116107f25780600b850192612c6582610ebf8654613ba9565b602090601f8311600114612d7157600092612d66575b50508160011b916000199060031b1c19161790555b600c82016101808201518051906001600160401b0382116107f257612cb98261234e8554613ba9565b602090601f8311600114612d0d5792826101a093612d08979693600d966000926124505750508160011b916000199060031b1c19161790550151151591019060ff801983541691151516179055565b6123a5565b90601f198316918460005260206000209260005b818110612d4e575093612d08979693600d9693600193836101a0981061249d57505050811b01905561238e565b92936020600181928786015181550195019301612d21565b015190508780612c7b565b6000858152602081209350601f198516905b818110612dbf5750908460019594939210612da6575b505050811b019055612c90565b015160001960f88460031b161c19169055878080612d99565b92936020600181928786015181550195019301612d83565b015190508780612c26565b6000858152602081209350601f198516905b818110612e305750908460019594939210612e17575b505050811b019055612c3b565b015160001960f88460031b161c19169055878080612e0a565b92936020600181928786015181550195019301612df4565b015190508780612bd1565b6000858152602081209350601f198516905b818110612ea15750908460019594939210612e88575b505050811b019055612be6565b015160001960f88460031b161c19169055878080612e7b565b92936020600181928786015181550195019301612e65565b015190508780612b7c565b6000858152602081209350601f198516905b818110612f125750908460019594939210612ef9575b505050811b019055612b91565b015160001960f88460031b161c19169055878080612eec565b92936020600181928786015181550195019301612ed6565b015190508780612b27565b6000858152602081209350601f198516905b818110612f835750908460019594939210612f6a575b505050811b019055612b3c565b015160001960f88460031b161c19169055878080612f5d565b92936020600181928786015181550195019301612f47565b015190508780612ad3565b6000858152602081209350601f198516905b818110612ff45750908460019594939210612fdb575b505050811b019055612ae8565b015160001960f88460031b161c19169055878080612fce565b92936020600181928786015181550195019301612fb8565b015190508680612a7c565b9250600585016000526020600020906000935b601f198416851061306e576001945083601f19811610613055575b505050811b016005830155612a94565b015160001960f88460031b161c19169055868080613045565b8181015183556020948501946001909301929091019061302a565b015190508680612a25565b9250600485016000526020600020906000935b601f19841685106130eb576001945083601f198116106130d2575b505050811b016004830155612a3d565b015160001960f88460031b161c191690558680806130c2565b818101518355602094850194600190930192909101906130a7565b0151905086806129c4565b9250600285016000526020600020906000935b601f1984168510613168576001945083601f1981161061314f575b505050811b0160028301556129dc565b015160001960f88460031b161c1916905586808061313f565b81810151835560209485019460019093019290910190613124565b60405162461bcd60e51b815260206004820152603760248201527f48616e79612070617369656e20617461752061646d696e2079616e672062697360448201527f61206d656e616d6261682072656b616d206d656469732e0000000000000000006064820152608490fd5b506000546001600160a01b03163314611e9f565b3461018e57602036600319011261018e5760043560055481101561018e5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001546040516001600160a01b039091168152602090f35b3461018e57602036600319011261018e576001600160a01b0361327e6139d2565b166000526002602052602060ff604060002054166040519015158152f35b3461018e57600036600319011261018e576040518060055480825282602080930160056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09260005b85828210613312575050506132fe92500383613b32565b61171d604051928284938452830190613aa3565b85546001600160a01b03168452600195860195889550930192016132e7565b3461018e57602036600319011261018e5760043560045481101561018e5761335a6020916139fe565b905460405160039290921b1c6001600160a01b03168152f35b3461018e57602036600319011261018e576001600160a01b036133946139d2565b1660005260016020526133fa604060002061171d60ff6003830154166133b983613be3565b926134166133c960018301613be3565b916134086133e560046133de60028501613be3565b9301613ff4565b9360405198899860a08a5260a08a0190613a63565b9088820360208a0152613a63565b908682036040880152613a63565b91151560608501528382036080850152613aa3565b3461018e57602036600319011261018e576001600160a01b0361344c6139d2565b1680600052600260205261346760ff60406000205416613f1b565b600052600160205261171d6134826004604060002001613ff4565b604051918291602083526020830190613aa3565b3461018e57600036600319011261018e5733600052600360205260ff6040600020541661350b573360005260036020526040600020600160ff198254161790556134df33613eb7565b7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470586020604051338152a1005b60405162461bcd60e51b8152602060048201526024808201527f416e64612073756461682074657264616674617220736562616761692050617360448201526334b2b71760e11b6064820152608490fd5b3461018e57600036600319011261018e576020600854604051908152f35b3461018e57602036600319011261018e5761171d611b616135996139d2565b61404c565b3461018e57604036600319011261018e576135b76139d2565b6135bf6139e8565b9060018060a01b0380916135d882600054163314613dfd565b168060005281602093600285526135f660ff60406000205416613f1b565b168060005260039384815260ff60406000205416156137045782600052600181526004604060002001946000948654955b86811061368a5750600160401b8610156107f25761366e867fd9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a986001604099018155613a4b565b81939154911b9185831b921b19161790558351928352820152a1005b8482613696838b613a4b565b905490861b1c16146136b0576136ab90613f67565b613627565b60405162461bcd60e51b815260048101859052602660248201527f50617369656e20737564616820646974756761736b616e206b6520646f6b7465604482015265391034b7349760d11b6064820152608490fd5b6064906040519062461bcd60e51b82526004820152601760248201527f50617369656e20746964616b207465726461667461722e0000000000000000006044820152fd5b3461018e57602036600319011261018e576001600160a01b036137696139d2565b166000526003602052602060ff604060002054166040519015158152f35b3461018e57602036600319011261018e576137ad60018060a01b03600054163314613dfd565b6004356000908152600660205260409020600d01805460ff19169055005b3461018e57602036600319011261018e576004356004548110156137f45761335a6020916139fe565b60405162461bcd60e51b815260206004820152601960248201527f496e64657820646f6b74657220746964616b2076616c69642e000000000000006044820152606490fd5b3461018e5760208060031936011261018e576138536139d2565b9060018060a01b0361386a81600054163314613dfd565b8216806000526002825260ff6040600020541661392657806000526003825260ff604060002054166138e1576138d87f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470589382600052600384526040600020600160ff19825416179055613eb7565b604051908152a1005b60405162461bcd60e51b815260048101839052601760248201527f50617369656e207375646168207465726461667461722e0000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101839052602660248201527f416c616d6174207375646168207465726461667461722073656261676169204460448201526537b5ba32b91760d11b6064820152608490fd5b3461018e57604036600319011261018e576139936139d2565b6001600160a01b031660009081526007602052604090208054602435919082101561018e576020916139c491613a4b565b90546040519160031b1c8152f35b600435906001600160a01b038216820361018e57565b602435906001600160a01b038216820361018e57565b600454811015613a355760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015613a355760005260206000200190600090565b919082519283825260005b848110613a8f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201613a6e565b90815180825260208080930193019160005b828110613ac3575050505090565b83516001600160a01b031685529381019392810192600101613ab5565b6101c081019081106001600160401b038211176107f257604052565b602081019081106001600160401b038211176107f257604052565b604081019081106001600160401b038211176107f257604052565b90601f801991011681019081106001600160401b038211176107f257604052565b81601f8201121561018e578035906001600160401b0382116107f25760405192613b87601f8401601f191660200185613b32565b8284526020838301011161018e57816000926020809301838601378301015290565b90600182811c92168015613bd9575b6020831014613bc357565b634e487b7160e01b600052602260045260246000fd5b91607f1691613bb8565b9060405191826000825492613bf784613ba9565b908184526001948581169081600014613c665750600114613c23575b5050613c2192500383613b32565b565b9093915060005260209081600020936000915b818310613c4e575050613c2193508201013880613c13565b85548884018501529485019487945091830191613c36565b915050613c2194506020925060ff191682840152151560051b8201013880613c13565b9d9e9d6101a09c98613d0d829f9c9699613cff613d669f9a613cf1613d579f989d613d399c613d489f613d2a9c613cde91613d1b9c8c5260018060a01b031660208c01526101c08060408d01528b0190613a63565b9160608a015288820360808a0152613a63565b9086820360a0880152613a63565b9084820360c0860152613a63565b9160e0818403910152613a63565b8c81036101008e015290613a63565b908a82036101208c0152613a63565b908882036101408a0152613a63565b90868203610160880152613a63565b90848203610180860152613a63565b931515910152565b8054821015613a3557600052600e602060002091020190600090565b90608060031983011261018e576004356001600160a01b038116810361018e57916001600160401b039160243583811161018e5782613dcb91600401613b53565b9260443581811161018e5783613de391600401613b53565b9260643591821161018e57613dfa91600401613b53565b90565b15613e0457565b60405162461bcd60e51b815260206004820152602960248201527f48616e79612061646d696e2079616e672062697361206d656c616b756b616e2060448201526830b5b9b49034b7349760b91b6064820152608490fd5b818110613e66575050565b60008155600101613e5b565b9190601f8111613e8157505050565b613c21926000526020600020906020601f840160051c83019310613ead575b601f0160051c0190613e5b565b9091508190613ea0565b600554600160401b8110156107f2576001810180600555811015613a355760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03909216919091179055565b15613f2257565b60405162461bcd60e51b815260206004820152601760248201527f446f6b74657220746964616b207465726461667461722e0000000000000000006044820152606490fd5b6000198114613f765760010190565b634e487b7160e01b600052601160045260246000fd5b60018060a01b038091166000526001908160205260046040600020016000938154945b858110613fc157505050505050600090565b83613fcc8285613a4b565b9190548185169260031b1c1614613feb57613fe690613f67565b613faf565b50505050905090565b9060405191828154918282526020928383019160005283600020936000905b82821061402957505050613c2192500383613b32565b85546001600160a01b031684526001958601958895509381019390910190614013565b6000546001600160a01b03918216911681146140f55780600052600260205260ff604060002054166140d257600052600360205260ff604060002054166140b05760405161409981613b17565b60078152662ab735b737bbb760c91b602082015290565b6040516140bc81613b17565b60068152652830b9b4b2b760d11b602082015290565b506040516140df81613b17565b60068152652237b5ba32b960d11b602082015290565b5060405161410281613b17565b600581526420b236b4b760d91b602082015290565b6001600160a01b03166000908152600760209081526040808320905181548082529184528284208184019282908490875b878282106141ac5750505061415f92500382613b32565b80511561419757511561418357613dfa926006600293604093518352522001613be3565b634e487b7160e01b83526032600452602483fd5b505050604051906141a782613afc565b815290565b8554845260019586019587955093019201614148565b90808214614296576141d48154613ba9565b906001600160401b0382116107f25781906141f382610ebf8654613ba9565b600090601f831160011461422a5760009261421f575b50508160011b916000199060031b1c1916179055565b015490503880614209565b81526020808220858352818320935090601f1985169083905b82821061427d575050908460019594939210614264575b505050811b019055565b015460001960f88460031b161c1916905538808061425a565b8495819295850154815560018091019601940190614243565b505056fea2646970667358221220fde91062e98781e066c849fac750636efbe85beb2b210954f62706cffdd35a9064736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c8062410cb31461397a578063010ef3b314613839578063046bdbcc146137cb578063083d8824146137875780631132beb51461374857806319e8f4051461359e578063278208511461357a5780632e2dd1021461355c578063334181f214613496578063350ee3fc1461342b5780633da0551814613373578063426996511461333157806351887b671461329c5780635c4c93481461325d578063683700871461320257806368f5dc9914611d2e57806370419a8114611cf8578063704b6c0214611c865780637d3e9db814611c68578063932e0f6d14611bb8578063abf72abb14611b75578063ae28c7a914611b3d578063c3c0fdea14611a9d578063c967ede8146119e9578063d688780214611721578063dd09a96814611639578063ddbd24d3146110e7578063e05c8a0e14610e45578063f7dc5714146101935763f851a4401461016557600080fd5b3461018e57600036600319011261018e576000546040516001600160a01b039091168152602090f35b600080fd5b3461018e5761018036600319011261018e576024356001600160401b03811161018e576101c4903690600401613b53565b6064356001600160401b03811161018e576101e3903690600401613b53565b6084356001600160401b03811161018e57610202903690600401613b53565b9160a4356001600160401b03811161018e57610222903690600401613b53565b9060c4356001600160401b03811161018e57610242903690600401613b53565b60e4356001600160401b03811161018e57610261903690600401613b53565b610104356001600160401b03811161018e57610281903690600401613b53565b91610124356001600160401b03811161018e576102a2903690600401613b53565b94610144356001600160401b03811161018e576102c3903690600401613b53565b97610164356001600160401b03811161018e576102e4903690600401613b53565b97600435600052600660205260018060a01b036001604060002001541633600052600260205260ff6040600020541680610e2e575b15610dcb576103289033613f8c565b15610d75576004356000526006602052604060002096600960205260406000208054600160401b8110156107f25761036591600182018155613d6e565b610d5f57888103610c69575b508051906001600160401b0382116107f257819061039f8261039660028d0154613ba9565b60028d01613e72565b602090601f8311600114610bf757600092610bec575b50508160011b916000199060031b1c19161760028801555b60443560038801558051906001600160401b0382116107f2578190610402826103f960048c0154613ba9565b60048c01613e72565b602090601f8311600114610b7a57600092610b6f575b50508160011b916000199060031b1c19161760048701555b8051906001600160401b0382116107f257819061045d8261045460058b0154613ba9565b60058b01613e72565b602090601f8311600114610afd57600092610af2575b50508160011b916000199060031b1c19161760058601555b8051906001600160401b0382116107f25781906104b8826104af60068a0154613ba9565b60068a01613e72565b602090601f8311600114610a8057600092610a75575b50508160011b916000199060031b1c19161760068501555b8051906001600160401b0382116107f25781906105138261050a6007890154613ba9565b60078901613e72565b602090601f8311600114610a03576000926109f8575b50508160011b916000199060031b1c19161760078401555b8051906001600160401b0382116107f257819061056e826105656008880154613ba9565b60088801613e72565b602090601f83116001146109865760009261097b575b50508160011b916000199060031b1c19161760088301555b8051906001600160401b0382116107f25781906105c9826105c06009870154613ba9565b60098701613e72565b602090601f8311600114610909576000926108fe575b50508160011b916000199060031b1c19161760098201555b81516001600160401b0381116107f25761062181610618600a850154613ba9565b600a8501613e72565b806020601f821160011461089157600091610886575b508160011b916000199060031b1c191617600a8201555b83516001600160401b0381116107f2576106788161066f600b850154613ba9565b600b8501613e72565b6020601f8211600114610813578190600c949596600092610808575b50508160011b916000199060031b1c191617600b8201555b01918051926001600160401b0384116107f2576106d3846106cd8354613ba9565b83613e72565b602093601f81116001146107645791610754918361074695947f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1397600091610759575b508160011b916000199060031b1c19161790555b6040519384936004358552606060208601526060850190613a63565b908382036040850152613a63565b0390a1005b905083015188610716565b601f1981168260005260206000209060005b8181106107da57508261075494927f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1398610746989795600194106107c1575b5050811b01905561072a565b85015160001960f88460031b161c1916905588806107b5565b85880151835560209788019760019093019201610776565b634e487b7160e01b600052604160045260246000fd5b015190508680610694565b600b830160005260206000209560005b601f198416811061086e5750958291600c959697600194601f19811610610855575b505050811b01600b8201556106ac565b015160001960f88460031b161c19169055868080610845565b82820151885560019097019660209283019201610823565b905083015186610637565b9150600a830160005260206000206000925b601f19831684106108e6576001935082601f198116106108cd575b5050811b01600a82015561064e565b85015160001960f88460031b161c1916905586806108be565b858101518255602093840193600190920191016108a3565b0151905086806105df565b9250600984016000526020600020906000935b601f1984168510610960576001945083601f19811610610947575b505050811b0160098201556105f7565b015160001960f88460031b161c19169055868080610937565b8181015183556020948501946001909301929091019061091c565b015190508780610584565b9250600885016000526020600020906000935b601f19841685106109dd576001945083601f198116106109c4575b505050811b01600883015561059c565b015160001960f88460031b161c191690558780806109b4565b81810151835560209485019460019093019290910190610999565b015190508880610529565b9250600786016000526020600020906000935b601f1984168510610a5a576001945083601f19811610610a41575b505050811b016007840155610541565b015160001960f88460031b161c19169055888080610a31565b81810151835560209485019460019093019290910190610a16565b0151905089806104ce565b9250600687016000526020600020906000935b601f1984168510610ad7576001945083601f19811610610abe575b505050811b0160068501556104e6565b015160001960f88460031b161c19169055898080610aae565b81810151835560209485019460019093019290910190610a93565b015190508a80610473565b9250600588016000526020600020906000935b601f1984168510610b54576001945083601f19811610610b3b575b505050811b01600586015561048b565b015160001960f88460031b161c191690558a8080610b2b565b81810151835560209485019460019093019290910190610b10565b015190508b80610418565b9250600489016000526020600020906000935b601f1984168510610bd1576001945083601f19811610610bb8575b505050811b016004870155610430565b015160001960f88460031b161c191690558b8080610ba8565b81810151835560209485019460019093019290910190610b8d565b015190508c806103b5565b925060028a016000526020600020906000935b601f1984168510610c4e576001945083601f19811610610c35575b505050811b0160028801556103cd565b015160001960f88460031b161c191690558c8080610c25565b81810151835560209485019460019093019290910190610c0a565b610d5990895481556001810160018060a01b0360018c0154166001600160601b0360a01b825416179055610ca360028b01600283016141c2565b60038a01546003820155610cbd60048b01600483016141c2565b610ccd60058b01600583016141c2565b610cdd60068b01600683016141c2565b610ced60078b01600783016141c2565b610cfd60088b01600883016141c2565b610d0d60098b01600983016141c2565b610d1d600a8b01600a83016141c2565b610d2d600b8b01600b83016141c2565b610d3d600c8b01600c83016141c2565b600d60ff818c01541691019060ff801983541691151516179055565b8b610371565b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152602860248201527f446f6b74657220746964616b2064692d61737369676e20756e74756b2070617360448201526734b2b71034b7349760c11b6064820152608490fd5b60405162461bcd60e51b815260206004820152603560248201527f48616e796120646f6b74657220616b7469662079616e672062697361206d656d6044820152743832b93130b93ab4903932b5b0b69036b2b234b99760591b6064820152608490fd5b50600160205260ff60036040600020015416610319565b3461018e57610e5336613d8a565b60005490939192916001600160a01b0391610e719083163314613dfd565b168060005260209060028252610e8e60ff60406000205416613f1b565b80600052600193848352604060002084516001600160401b03958682116107f2578190610ec582610ebf8654613ba9565b86613e72565b8690601f831160011461108457600092611079575b5050600019600383901b1c191690871b1790555b8160005284835284604060002001908051908582116107f2578190610f1782610ebf8654613ba9565b8590601f83116001146110165760009261100b575b5050600019600383901b1c191690861b1790555b60005282815260026040600020019380519283116107f257610f6c83610f668754613ba9565b87613e72565b81601f8411600114610fa85750928293918392600094610f9d575b50501b916000199060031b1c1916179055600080f35b015192508580610f87565b919083601f1981168760005284600020946000905b88838310610ff15750505010610fd8575b505050811b019055005b015160001960f88460031b161c19169055838080610fce565b858701518855909601959485019487935090810190610fbd565b015190508880610f2c565b90889350601f1983169185600052876000209260005b89828210611063575050841161104a575b505050811b019055610f40565b015160001960f88460031b161c1916905588808061103d565b8385015186558c9790950194938401930161102c565b015190508980610eda565b90899350601f1983169185600052886000209260005b8a8282106110d157505084116110b8575b505050811b019055610eee565b015160001960f88460031b161c191690558980806110ab565b8385015186558d9790950194938401930161109a565b3461018e576110f536613d8a565b929061110c60018060a01b03600054163314613dfd565b6001600160a01b03821660009081526002602052604090205460ff166115f4576001600160a01b03821660009081526003602052604090205460ff166115a0576001600160a01b03821660009081526002602052604090819020805460ff19166001179055519361117c85613afc565b600085526040519460a086018681106001600160401b038211176107f25760405284865282602087015281604087015260016060870152608086015260018060a01b0383166000526001602052604060002085518051906001600160401b0382116107f25781906111f182610ebf8654613ba9565b602090601f831160011461153457600092611529575b50508160011b916000199060031b1c19161781555b60208601518051906001600160401b0382116107f257819061124e826112456001870154613ba9565b60018701613e72565b602090601f83116001146114b7576000926114ac575b50508160011b916000199060031b1c19161760018201555b60408601518051906001600160401b0382116107f2576112ac826112a36002860154613ba9565b60028601613e72565b602090601f83116001146114375791806080949260049460009261142c575b50508160011b916000199060031b1c19161760028201555b61130260608901511515600383019060ff801983541691151516179055565b01950151948551906001600160401b0382116107f257600160401b968783116107f257602090825484845580851061140f575b500190600052602060002060005b8381106113f25750505050600454948510156107f2576113e4610754926113918760017f5e399ee004ff4fef571265f7bdd2e8ec7d18b86f1aeab0d8009f0df31b27259299016004556139fe565b81549060031b9060018060a01b038816821b9160018060a01b03901b19161790556113d660405196879660018060a01b03168752608060208801526080870190613a63565b908582036040870152613a63565b908382036060850152613a63565b82516001600160a01b031681830155602090920191600101611343565b611426908460005285846000209182019101613e5b565b89611335565b015190508a806112cb565b906002840160005260206000209160005b601f19851681106114945750926080949260019260049583601f1981161061147b575b505050811b0160028201556112e3565b015160001960f88460031b161c191690558a808061146b565b91926020600181928685015181550194019201611448565b015190508880611264565b9250600184016000526020600020906000935b601f198416851061150e576001945083601f198116106114f5575b505050811b01600182015561127c565b015160001960f88460031b161c191690558880806114e5565b818101518355602094850194600190930192909101906114ca565b015190508880611207565b9250836000526020600020906000935b601f1984168510611585576001945083601f1981161061156c575b505050811b01815561121c565b015160001960f88460031b161c1916905588808061155f565b81810151835560209485019460019093019290910190611544565b60405162461bcd60e51b815260206004820152602660248201527f416c616d6174207375646168207465726461667461722073656261676169205060448201526530b9b4b2b71760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f446f6b746572207375646168207465726461667461722e0000000000000000006044820152606490fd5b3461018e57604036600319011261018e576024356004356000526009602052604060002090815481101561018e5761167091613d6e565b50805460018201546001600160a01b03169161171d9061169260028201613be3565b9060038101546116a460048301613be3565b6116b060058401613be3565b6116bc60068501613be3565b6116c860078601613be3565b6116d460088701613be3565b916116e160098801613be3565b936116ee600a8901613be3565b956116fb600b8a01613be3565b9760ff600d61170c600c8d01613be3565b9b0154169a6040519e8f9e8f613c89565b0390f35b3461018e5760208060031936011261018e57600435600052600990818152604060002080546001600160401b0381116107f257916040519260059461176a8383881b0186613b32565b81855260009384528284208386019491855b8484106118e9575050505050604051928184019082855251809152604081818601961b85010192916000955b8287106117b55785850386f35b909192938280600192603f1989820301855287519081518152848060a01b038383015116838201526118cc6118b86118a461189061187c61186861185661184361183061181360408c015160408c6101c091829101528c0190613a63565b6060808d0151908c01526080808d0151908c8303908d0152613a63565b60a0808c0151908b8303908c0152613a63565b60c0808b0151908a8303908b0152613a63565b60e089015188820360e08a0152613a63565b610100808901519088830390890152613a63565b610120808801519087830390880152613a63565b610140808701519086830390870152613a63565b610160808601519085830390860152613a63565b610180808501519084830390850152613a63565b916101a080910151151591015296019201960195929190926117a8565b600e8660019260409a989a516118fe81613ae0565b86548152848060a01b0385880154168382015261191d60028801613be3565b60408201526003870154606082015261193860048801613be3565b60808201526119488d8801613be3565b60a082015261195960068801613be3565b60c082015261196a60078801613be3565b60e082015261197b60088801613be3565b61010082015261198c868801613be3565b61012082015261199e600a8801613be3565b6101408201526119b0600b8801613be3565b6101608201526119c2600c8801613be3565b61018082015260ff600d8801541615156101a082015281520193019301929196949661177c565b3461018e5760208060031936011261018e576001600160a01b03611a0b6139d2565b1660005260078152604060002060405190818382549182815201908192600052846000209060005b86828210611a89578686611a4982880383613b32565b604051928392818401908285525180915260408401929160005b828110611a7257505050500390f35b835185528695509381019392810192600101611a63565b835485529093019260019283019201611a33565b3461018e57602036600319011261018e576001600160a01b03611abe6139d2565b166000526001602052611b156040600020611ad881613be3565b90611b31611ae860018301613be3565b91611b2360ff6003611afc60028501613be3565b9301541693604051968796608088526080880190613a63565b908682036020880152613a63565b908482036040860152613a63565b90151560608301520390f35b3461018e57602036600319011261018e5761171d611b61611b5c6139d2565b614117565b604051918291602083526020830190613a63565b3461018e57602036600319011261018e576004356000908152600660205260409020805460018201546001600160a01b03169161171d9061169260028201613be3565b3461018e57604036600319011261018e57611bd16139d2565b602435908115159182810361018e577f3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a92611c5b60409360018060a01b0390611c1f82600054163314613dfd565b1692836000526002602052611c3a60ff866000205416613f1b565b836000526001602052600385600020019060ff801983541691151516179055565b82519182526020820152a1005b3461018e57600036600319011261018e576020600454604051908152f35b3461018e57602036600319011261018e577f4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d6020611cc26139d2565b600054906001600160a01b0390611cdc3383851614613dfd565b1680916001600160601b0360a01b1617600055604051908152a1005b3461018e57604036600319011261018e576020611d24611d166139d2565b611d1e6139e8565b90613f8c565b6040519015158152f35b3461018e5761018036600319011261018e57611d486139d2565b6024356001600160401b03811161018e57611d67903690600401613b53565b906064356001600160401b03811161018e57611d87903690600401613b53565b916084356001600160401b03811161018e57611da7903690600401613b53565b9260a4356001600160401b03811161018e57611dc7903690600401613b53565b9360c4356001600160401b03811161018e57611de7903690600401613b53565b9460e4356001600160401b03811161018e57611e07903690600401613b53565b610104356001600160401b03811161018e57611e27903690600401613b53565b90610124356001600160401b03811161018e57611e48903690600401613b53565b97610144356001600160401b03811161018e57611e69903690600401613b53565b936001600160401b03610164351161018e57611e8b3661016435600401613b53565b95336001600160a01b038b161480156131ee575b1561318357611eaf600854613f67565b978860085560018060a01b036000541633146000146128eb5750505050505050505060085460405191611ee183613ae0565b8183526001600160a01b03841660208401526040808401919091526000606084015251611f0d81613afc565b600081526080830152604051611f2281613afc565b6000815260a0830152604051611f3781613afc565b6000815260c0830152604051611f4c81613afc565b6000815260e0830152604051611f6181613afc565b60008152610100830152604051611f7781613afc565b60008152610120830152604051611f8d81613afc565b60008152610140830152604051611fa381613afc565b60008152610160830152604051611fb981613afc565b6000815261018083015260016101a08301526000526006602052604060002090805182556001820160018060a01b036020830151166001600160601b0360a01b82541617905560408101518051906001600160401b0382116107f2578190612031826120286002880154613ba9565b60028801613e72565b602090601f83116001146128795760009261286e575b50508160011b916000199060031b1c19161760028301555b6060810151600383015560808101518051906001600160401b0382116107f257819061209b826120926004880154613ba9565b60048801613e72565b602090601f83116001146127fc576000926127f1575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116107f25781906120fb826120f26005880154613ba9565b60058801613e72565b602090601f831160011461277f57600092612774575b50508160011b916000199060031b1c19161760058301555b60c081015180516001600160401b0381116107f25780600685019261215282610ebf8654613ba9565b602090601f831160011461270e57600092612703575b50508160011b916000199060031b1c19161790555b60e081015180516001600160401b0381116107f2578060078501926121a682610ebf8654613ba9565b602090601f831160011461269d57600092612692575b50508160011b916000199060031b1c19161790555b61010081015180516001600160401b0381116107f2578060088501926121fb82610ebf8654613ba9565b602090601f831160011461262c57600092612621575b50508160011b916000199060031b1c19161790555b61012081015180516001600160401b0381116107f25780600985019261225082610ebf8654613ba9565b602090601f83116001146125bb576000926125b0575b50508160011b916000199060031b1c19161790555b61014081015180516001600160401b0381116107f25780600a8501926122a582610ebf8654613ba9565b602090601f831160011461254a5760009261253f575b50508160011b916000199060031b1c19161790555b61016081015180516001600160401b0381116107f25780600b8501926122fa82610ebf8654613ba9565b602090601f83116001146124d9576000926124ce575b50508160011b916000199060031b1c19161790555b600c82016101808201518051906001600160401b0382116107f2576123548261234e8554613ba9565b85613e72565b602090601f831160011461245b5792826101a0936123a5979693600d96600092612450575b50508160011b916000199060031b1c19161790555b0151151591019060ff801983541691151516179055565b6001600160a01b038116600090815260076020526040902060085481549391600160401b8510156107f257846124019160017f8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c99797018155613a4b565b819291549060031b91821b91600019901b191617905561244460085491604051938493845260018060a01b03166020840152608060408401526080830190613a63565b600160608301520390a1005b015190508a80612379565b90601f198316918460005260206000209260005b8181106124b65750936123a5979693600d9693600193836101a0981061249d575b505050811b01905561238e565b015160001960f88460031b161c191690558a8080612490565b9293602060018192878601518155019501930161246f565b015190508780612310565b6000858152602081209350601f198516905b818110612527575090846001959493921061250e575b505050811b019055612325565b015160001960f88460031b161c19169055878080612501565b929360206001819287860151815501950193016124eb565b0151905087806122bb565b6000858152602081209350601f198516905b818110612598575090846001959493921061257f575b505050811b0190556122d0565b015160001960f88460031b161c19169055878080612572565b9293602060018192878601518155019501930161255c565b015190508780612266565b6000858152602081209350601f198516905b81811061260957509084600195949392106125f0575b505050811b01905561227b565b015160001960f88460031b161c191690558780806125e3565b929360206001819287860151815501950193016125cd565b015190508780612211565b6000858152602081209350601f198516905b81811061267a5750908460019594939210612661575b505050811b019055612226565b015160001960f88460031b161c19169055878080612654565b9293602060018192878601518155019501930161263e565b0151905087806121bc565b6000858152602081209350601f198516905b8181106126eb57509084600195949392106126d2575b505050811b0190556121d1565b015160001960f88460031b161c191690558780806126c5565b929360206001819287860151815501950193016126af565b015190508780612168565b6000858152602081209350601f198516905b81811061275c5750908460019594939210612743575b505050811b01905561217d565b015160001960f88460031b161c19169055878080612736565b92936020600181928786015181550195019301612720565b015190508680612111565b9250600585016000526020600020906000935b601f19841685106127d6576001945083601f198116106127bd575b505050811b016005830155612129565b015160001960f88460031b161c191690558680806127ad565b81810151835560209485019460019093019290910190612792565b0151905086806120b1565b9250600485016000526020600020906000935b601f1984168510612853576001945083601f1981161061283a575b505050811b0160048301556120c9565b015160001960f88460031b161c1916905586808061282a565b8181015183556020948501946001909301929091019061280f565b015190508680612047565b9250600285016000526020600020906000935b601f19841685106128d0576001945083601f198116106128b7575b505050811b01600283015561205f565b015160001960f88460031b161c191690558680806128a7565b8181015183556020948501946001909301929091019061288c565b604051996128f88b613ae0565b898b5260018060a01b038c1660208c015260408b015260443560608b015260808a015260a089015260c088015260e08701526101008601526101208501528561014085015261016084015261018083015260016101a08301526000526006602052604060002090805182556001820160018060a01b036020830151166001600160601b0360a01b82541617905560408101518051906001600160401b0382116107f25781906129ae826120286002880154613ba9565b602090601f831160011461311157600092613106575b50508160011b916000199060031b1c19161760028301555b6060810151600383015560808101518051906001600160401b0382116107f2578190612a0f826120926004880154613ba9565b602090601f831160011461309457600092613089575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116107f2578190612a66826120f26005880154613ba9565b602090601f83116001146130175760009261300c575b50508160011b916000199060031b1c19161760058301555b60c081015180516001600160401b0381116107f257806006850192612abd82610ebf8654613ba9565b602090601f8311600114612fa657600092612f9b575b50508160011b916000199060031b1c19161790555b60e081015180516001600160401b0381116107f257806007850192612b1182610ebf8654613ba9565b602090601f8311600114612f3557600092612f2a575b50508160011b916000199060031b1c19161790555b61010081015180516001600160401b0381116107f257806008850192612b6682610ebf8654613ba9565b602090601f8311600114612ec457600092612eb9575b50508160011b916000199060031b1c19161790555b61012081015180516001600160401b0381116107f257806009850192612bbb82610ebf8654613ba9565b602090601f8311600114612e5357600092612e48575b50508160011b916000199060031b1c19161790555b61014081015180516001600160401b0381116107f25780600a850192612c1082610ebf8654613ba9565b602090601f8311600114612de257600092612dd7575b50508160011b916000199060031b1c19161790555b61016081015180516001600160401b0381116107f25780600b850192612c6582610ebf8654613ba9565b602090601f8311600114612d7157600092612d66575b50508160011b916000199060031b1c19161790555b600c82016101808201518051906001600160401b0382116107f257612cb98261234e8554613ba9565b602090601f8311600114612d0d5792826101a093612d08979693600d966000926124505750508160011b916000199060031b1c19161790550151151591019060ff801983541691151516179055565b6123a5565b90601f198316918460005260206000209260005b818110612d4e575093612d08979693600d9693600193836101a0981061249d57505050811b01905561238e565b92936020600181928786015181550195019301612d21565b015190508780612c7b565b6000858152602081209350601f198516905b818110612dbf5750908460019594939210612da6575b505050811b019055612c90565b015160001960f88460031b161c19169055878080612d99565b92936020600181928786015181550195019301612d83565b015190508780612c26565b6000858152602081209350601f198516905b818110612e305750908460019594939210612e17575b505050811b019055612c3b565b015160001960f88460031b161c19169055878080612e0a565b92936020600181928786015181550195019301612df4565b015190508780612bd1565b6000858152602081209350601f198516905b818110612ea15750908460019594939210612e88575b505050811b019055612be6565b015160001960f88460031b161c19169055878080612e7b565b92936020600181928786015181550195019301612e65565b015190508780612b7c565b6000858152602081209350601f198516905b818110612f125750908460019594939210612ef9575b505050811b019055612b91565b015160001960f88460031b161c19169055878080612eec565b92936020600181928786015181550195019301612ed6565b015190508780612b27565b6000858152602081209350601f198516905b818110612f835750908460019594939210612f6a575b505050811b019055612b3c565b015160001960f88460031b161c19169055878080612f5d565b92936020600181928786015181550195019301612f47565b015190508780612ad3565b6000858152602081209350601f198516905b818110612ff45750908460019594939210612fdb575b505050811b019055612ae8565b015160001960f88460031b161c19169055878080612fce565b92936020600181928786015181550195019301612fb8565b015190508680612a7c565b9250600585016000526020600020906000935b601f198416851061306e576001945083601f19811610613055575b505050811b016005830155612a94565b015160001960f88460031b161c19169055868080613045565b8181015183556020948501946001909301929091019061302a565b015190508680612a25565b9250600485016000526020600020906000935b601f19841685106130eb576001945083601f198116106130d2575b505050811b016004830155612a3d565b015160001960f88460031b161c191690558680806130c2565b818101518355602094850194600190930192909101906130a7565b0151905086806129c4565b9250600285016000526020600020906000935b601f1984168510613168576001945083601f1981161061314f575b505050811b0160028301556129dc565b015160001960f88460031b161c1916905586808061313f565b81810151835560209485019460019093019290910190613124565b60405162461bcd60e51b815260206004820152603760248201527f48616e79612070617369656e20617461752061646d696e2079616e672062697360448201527f61206d656e616d6261682072656b616d206d656469732e0000000000000000006064820152608490fd5b506000546001600160a01b03163314611e9f565b3461018e57602036600319011261018e5760043560055481101561018e5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001546040516001600160a01b039091168152602090f35b3461018e57602036600319011261018e576001600160a01b0361327e6139d2565b166000526002602052602060ff604060002054166040519015158152f35b3461018e57600036600319011261018e576040518060055480825282602080930160056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09260005b85828210613312575050506132fe92500383613b32565b61171d604051928284938452830190613aa3565b85546001600160a01b03168452600195860195889550930192016132e7565b3461018e57602036600319011261018e5760043560045481101561018e5761335a6020916139fe565b905460405160039290921b1c6001600160a01b03168152f35b3461018e57602036600319011261018e576001600160a01b036133946139d2565b1660005260016020526133fa604060002061171d60ff6003830154166133b983613be3565b926134166133c960018301613be3565b916134086133e560046133de60028501613be3565b9301613ff4565b9360405198899860a08a5260a08a0190613a63565b9088820360208a0152613a63565b908682036040880152613a63565b91151560608501528382036080850152613aa3565b3461018e57602036600319011261018e576001600160a01b0361344c6139d2565b1680600052600260205261346760ff60406000205416613f1b565b600052600160205261171d6134826004604060002001613ff4565b604051918291602083526020830190613aa3565b3461018e57600036600319011261018e5733600052600360205260ff6040600020541661350b573360005260036020526040600020600160ff198254161790556134df33613eb7565b7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470586020604051338152a1005b60405162461bcd60e51b8152602060048201526024808201527f416e64612073756461682074657264616674617220736562616761692050617360448201526334b2b71760e11b6064820152608490fd5b3461018e57600036600319011261018e576020600854604051908152f35b3461018e57602036600319011261018e5761171d611b616135996139d2565b61404c565b3461018e57604036600319011261018e576135b76139d2565b6135bf6139e8565b9060018060a01b0380916135d882600054163314613dfd565b168060005281602093600285526135f660ff60406000205416613f1b565b168060005260039384815260ff60406000205416156137045782600052600181526004604060002001946000948654955b86811061368a5750600160401b8610156107f25761366e867fd9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a986001604099018155613a4b565b81939154911b9185831b921b19161790558351928352820152a1005b8482613696838b613a4b565b905490861b1c16146136b0576136ab90613f67565b613627565b60405162461bcd60e51b815260048101859052602660248201527f50617369656e20737564616820646974756761736b616e206b6520646f6b7465604482015265391034b7349760d11b6064820152608490fd5b6064906040519062461bcd60e51b82526004820152601760248201527f50617369656e20746964616b207465726461667461722e0000000000000000006044820152fd5b3461018e57602036600319011261018e576001600160a01b036137696139d2565b166000526003602052602060ff604060002054166040519015158152f35b3461018e57602036600319011261018e576137ad60018060a01b03600054163314613dfd565b6004356000908152600660205260409020600d01805460ff19169055005b3461018e57602036600319011261018e576004356004548110156137f45761335a6020916139fe565b60405162461bcd60e51b815260206004820152601960248201527f496e64657820646f6b74657220746964616b2076616c69642e000000000000006044820152606490fd5b3461018e5760208060031936011261018e576138536139d2565b9060018060a01b0361386a81600054163314613dfd565b8216806000526002825260ff6040600020541661392657806000526003825260ff604060002054166138e1576138d87f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470589382600052600384526040600020600160ff19825416179055613eb7565b604051908152a1005b60405162461bcd60e51b815260048101839052601760248201527f50617369656e207375646168207465726461667461722e0000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101839052602660248201527f416c616d6174207375646168207465726461667461722073656261676169204460448201526537b5ba32b91760d11b6064820152608490fd5b3461018e57604036600319011261018e576139936139d2565b6001600160a01b031660009081526007602052604090208054602435919082101561018e576020916139c491613a4b565b90546040519160031b1c8152f35b600435906001600160a01b038216820361018e57565b602435906001600160a01b038216820361018e57565b600454811015613a355760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015613a355760005260206000200190600090565b919082519283825260005b848110613a8f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201613a6e565b90815180825260208080930193019160005b828110613ac3575050505090565b83516001600160a01b031685529381019392810192600101613ab5565b6101c081019081106001600160401b038211176107f257604052565b602081019081106001600160401b038211176107f257604052565b604081019081106001600160401b038211176107f257604052565b90601f801991011681019081106001600160401b038211176107f257604052565b81601f8201121561018e578035906001600160401b0382116107f25760405192613b87601f8401601f191660200185613b32565b8284526020838301011161018e57816000926020809301838601378301015290565b90600182811c92168015613bd9575b6020831014613bc357565b634e487b7160e01b600052602260045260246000fd5b91607f1691613bb8565b9060405191826000825492613bf784613ba9565b908184526001948581169081600014613c665750600114613c23575b5050613c2192500383613b32565b565b9093915060005260209081600020936000915b818310613c4e575050613c2193508201013880613c13565b85548884018501529485019487945091830191613c36565b915050613c2194506020925060ff191682840152151560051b8201013880613c13565b9d9e9d6101a09c98613d0d829f9c9699613cff613d669f9a613cf1613d579f989d613d399c613d489f613d2a9c613cde91613d1b9c8c5260018060a01b031660208c01526101c08060408d01528b0190613a63565b9160608a015288820360808a0152613a63565b9086820360a0880152613a63565b9084820360c0860152613a63565b9160e0818403910152613a63565b8c81036101008e015290613a63565b908a82036101208c0152613a63565b908882036101408a0152613a63565b90868203610160880152613a63565b90848203610180860152613a63565b931515910152565b8054821015613a3557600052600e602060002091020190600090565b90608060031983011261018e576004356001600160a01b038116810361018e57916001600160401b039160243583811161018e5782613dcb91600401613b53565b9260443581811161018e5783613de391600401613b53565b9260643591821161018e57613dfa91600401613b53565b90565b15613e0457565b60405162461bcd60e51b815260206004820152602960248201527f48616e79612061646d696e2079616e672062697361206d656c616b756b616e2060448201526830b5b9b49034b7349760b91b6064820152608490fd5b818110613e66575050565b60008155600101613e5b565b9190601f8111613e8157505050565b613c21926000526020600020906020601f840160051c83019310613ead575b601f0160051c0190613e5b565b9091508190613ea0565b600554600160401b8110156107f2576001810180600555811015613a355760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03909216919091179055565b15613f2257565b60405162461bcd60e51b815260206004820152601760248201527f446f6b74657220746964616b207465726461667461722e0000000000000000006044820152606490fd5b6000198114613f765760010190565b634e487b7160e01b600052601160045260246000fd5b60018060a01b038091166000526001908160205260046040600020016000938154945b858110613fc157505050505050600090565b83613fcc8285613a4b565b9190548185169260031b1c1614613feb57613fe690613f67565b613faf565b50505050905090565b9060405191828154918282526020928383019160005283600020936000905b82821061402957505050613c2192500383613b32565b85546001600160a01b031684526001958601958895509381019390910190614013565b6000546001600160a01b03918216911681146140f55780600052600260205260ff604060002054166140d257600052600360205260ff604060002054166140b05760405161409981613b17565b60078152662ab735b737bbb760c91b602082015290565b6040516140bc81613b17565b60068152652830b9b4b2b760d11b602082015290565b506040516140df81613b17565b60068152652237b5ba32b960d11b602082015290565b5060405161410281613b17565b600581526420b236b4b760d91b602082015290565b6001600160a01b03166000908152600760209081526040808320905181548082529184528284208184019282908490875b878282106141ac5750505061415f92500382613b32565b80511561419757511561418357613dfa926006600293604093518352522001613be3565b634e487b7160e01b83526032600452602483fd5b505050604051906141a782613afc565b815290565b8554845260019586019587955093019201614148565b90808214614296576141d48154613ba9565b906001600160401b0382116107f25781906141f382610ebf8654613ba9565b600090601f831160011461422a5760009261421f575b50508160011b916000199060031b1c1916179055565b015490503880614209565b81526020808220858352818320935090601f1985169083905b82821061427d575050908460019594939210614264575b505050811b019055565b015460001960f88460031b161c1916905538808061425a565b8495819295850154815560018091019601940190614243565b505056fea2646970667358221220fde91062e98781e066c849fac750636efbe85beb2b210954f62706cffdd35a9064736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "69:12079:0:-:0;;;;;;;1811:18;69:12079;;-1:-1:-1;;;;;;69:12079:0;1819:10;69:12079;;;;;;;;;;;;;",
  "deployedSourceMap": "69:12079:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;;;11201:10;69:12079;;;;;;;;;;;11201:22;69:12079;;2376:10;69:12079;;2367:8;69:12079;;;;;;;;2367:52;;;69:12079;;;;2533:45;2376:10;;2533:45;:::i;:::-;69:12079;;;;;;;11201:10;69:12079;;;;;;11293:18;69:12079;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;11339:10;;69:12079;11339:10;69:12079;2367:8;11339:10;;69:12079;;:::i;:::-;2367:8;11339:10;;69:12079;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:8;11339:10;;69:12079;;;;;11368:10;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;11397:19;;69:12079;11397:19;69:12079;;11397:19;;69:12079;;:::i;:::-;;11397:19;;69:12079;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11397:19;;69:12079;;;;;-1:-1:-1;;;;;69:12079:0;;;;11444:18;;69:12079;11444:18;69:12079;11444:18;;;69:12079;;:::i;:::-;11444:18;;;69:12079;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11444:18;;;69:12079;;;;;-1:-1:-1;;;;;69:12079:0;;;;11489:12;;69:12079;11489:12;69:12079;11201:10;11489:12;;69:12079;;:::i;:::-;11201:10;11489:12;;69:12079;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11201:10;11489:12;;69:12079;;;;;-1:-1:-1;;;;;69:12079:0;;;;11522:12;;69:12079;11522:12;69:12079;11522:12;;;69:12079;;:::i;:::-;11522:12;;;69:12079;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11522:12;;;69:12079;;;;;-1:-1:-1;;;;;69:12079:0;;;;11555:15;;69:12079;11555:15;69:12079;11555:15;;;69:12079;;:::i;:::-;11555:15;;;69:12079;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11555:15;;;69:12079;;;;;-1:-1:-1;;;;;69:12079:0;;;;11594:11;;69:12079;11594:11;69:12079;11293:18;11594:11;;69:12079;;:::i;:::-;11293:18;11594:11;;69:12079;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11293:18;11594:11;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;11625:14;69:12079;11625:14;;;69:12079;;:::i;:::-;11625:14;;;69:12079;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11625:14;;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;11662:10;69:12079;11662:10;;;69:12079;;:::i;:::-;11662:10;;;69:12079;:::i;:::-;;;;;;;;;;;11691:13;69:12079;;;;;;;;;;;;;;;;;;;;;;;11662:10;;;69:12079;;11691:13;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;11731:46;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;11731:46;;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11731:46;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;11662:10;;;69:12079;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;11691:13;69:12079;;;;;;;;;;;;;;;;;;;11662:10;;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11625:14;;;;;69:12079;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;11625:14;;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;11594:11;;11293:18;11594:11;;69:12079;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;11293:18;11594:11;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;11555:15;;;;;69:12079;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;11555:15;;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;11522:12;;;;;69:12079;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;11522:12;;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;11489:12;;11201:10;11489:12;;69:12079;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;11201:10;11489:12;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;11444:18;;;;;69:12079;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;11444:18;;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;11397:19;;69:12079;11397:19;;69:12079;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;11397:19;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;11339:10;;2367:8;11339:10;;69:12079;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;2367:8;11339:10;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;2367:8;69:12079;;2367:8;69:12079;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;11201:10;69:12079;;11201:10;69:12079;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;11293:18;69:12079;;11293:18;69:12079;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;2367:52;69:12079;;;;;;;;;2391:28;69:12079;;2367:52;;69:12079;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;69:12079:0;1920:110;;69:12079;;1942:10;:19;1920:110;:::i;:::-;69:12079;;;;;;4603:8;69:12079;;4595:53;69:12079;;;;;;4595:53;:::i;:::-;69:12079;;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;4702:32;69:12079;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;69:12079:0;;;;;;;;;;;;;;;;;;;4603:8;69:12079;;;4761:32;69:12079;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1920:110;69:12079;;;;;;;;1942:10;:19;1920:110;:::i;:::-;-1:-1:-1;;;;;69:12079:0;;;;;;3147:8;69:12079;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;3212:8;69:12079;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;3147:8;69:12079;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;3340:202;69:12079;3340:202;;69:12079;3340:202;69:12079;3340:202;;69:12079;;3340:202;;;69:12079;3340:202;;;69:12079;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3212:8;69:12079;;;;;;;;;3340:202;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3212:8;69:12079;;;;;;;;;;;3340:202;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;3147:8;69:12079;;;;:::i;:::-;3147:8;69:12079;;;:::i;:::-;;;;;;;;;;;;3340:202;69:12079;;;;;;;;;;;;;;;;;;3212:8;69:12079;;;;;3147:8;69:12079;;;;;3340:202;;;69:12079;;;3212:8;69:12079;;;;;;;;;;;;;;;;;;;3340:202;;69:12079;;;;;-1:-1:-1;;;;;69:12079:0;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3595:61;69:12079;;;;;:::i;:::-;;;;3212:8;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3340:202;69:12079;;;;3340:202;69:12079;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;3340:202;69:12079;;;;:::i;:::-;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:12079:0;;;;;;3147:8;69:12079;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;3340:202;69:12079;;;;;;;;;;;;;;;;;;;;;3147:8;69:12079;;;;;;;;;;;;3212:8;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3212:8;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3212:8;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;1137:59;69:12079;;;;;;;;1137:59;;;;;;;;:::i;:::-;-1:-1:-1;69:12079:0;;;1137:59;;69:12079;-1:-1:-1;;;;;69:12079:0;;;;1137:59;;;;;:::i;:::-;;69:12079;1137:59;;69:12079;1137:59;69:12079;1137:59;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;69:12079;1137:59;;;;;;:::i;:::-;;;69:12079;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11959:18;69:12079;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;:::i;:::-;;;;7978:18;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;-1:-1:-1;;;;;69:12079:0;;:::i;:::-;;;;;;;;;;;293:44;;;:::i;:::-;;69:12079;293:44;69:12079;293:44;;;:::i;:::-;;69:12079;;;293:44;;;;;:::i;:::-;;;69:12079;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;950:49;69:12079;;;;;;;;950:49;;69:12079;-1:-1:-1;;;;;69:12079:0;;;;950:49;;;;;:::i;69:12079::-;;;;;;-1:-1:-1;;69:12079:0;;;;;;:::i;:::-;;;;;;;;;;;;;4263:35;69:12079;4213:34;69:12079;;;;;;;;1920:110;69:12079;;;;1942:10;:19;1920:110;:::i;:::-;69:12079;;;;;4157:8;69:12079;;4149:53;69:12079;;;;;;4149:53;:::i;:::-;69:12079;;;;;;;;;;4213:25;69:12079;;;;;;;;;;;;;;;4213:34;69:12079;;;;;;;;;4263:35;69:12079;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;8624:26;69:12079;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;1920:110;1942:10;69:12079;;;1942:19;1920:110;:::i;:::-;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;8624:26;69:12079;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;:::i;:::-;;9172:10;-1:-1:-1;;;;;69:12079:0;;9172:21;:44;;;;69:12079;;;;9312:17;;69:12079;9312:17;:::i;:::-;69:12079;;9312:17;69:12079;;;;;;;;;9172:10;9346:19;9342:1220;69:12079;;;;;;;;;;;;9312:17;69:12079;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;9487:530;;69:12079;;9487:530;;;69:12079;;;;-1:-1:-1;69:12079:0;9487:530;;69:12079;;;;;:::i;:::-;;;;;9487:530;;69:12079;;;;;;:::i;:::-;;;;;9487:530;;69:12079;;;;;;:::i;:::-;;;;;9487:530;;69:12079;;;;;;:::i;:::-;;;;;9487:530;;69:12079;;;;;;:::i;:::-;;;;;9487:530;;69:12079;;;;;;:::i;:::-;;;;;9487:530;;69:12079;;;;;;:::i;:::-;;;;;9487:530;;69:12079;;;;;;:::i;:::-;;;;;9487:530;;69:12079;;;;;;:::i;:::-;;;;;9487:530;;69:12079;;9487:530;;;69:12079;;;9457:10;69:12079;;;;;;;;;;;;;;;;;;;9487:530;;69:12079;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;9487:530;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;;69:12079;;;;;;9487:530;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;9457:10;69:12079;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;9312:17;69:12079;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;9487:530;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;69:12079;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;10574:18;69:12079;;;;;9312:17;69:12079;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;10639:64;69:12079;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;9312:17;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;10639:64;;;69:12079;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:530;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9342:1220;69:12079;;;;;;:::i;:::-;;;;;;;;;;;;10140:410;;69:12079;;10140:410;;69:12079;;;;10140:410;;69:12079;;10140:410;;69:12079;;10140:410;;69:12079;;10140:410;;69:12079;;10140:410;;69:12079;;10140:410;;69:12079;;10140:410;;69:12079;10140:410;69:12079;10140:410;;69:12079;;10140:410;;69:12079;;10140:410;;69:12079;;10140:410;;;69:12079;;;10110:10;69:12079;;;;;;;;;;;;;;;;;;;10140:410;;69:12079;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;10140:410;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;;69:12079;;;;;;10140:410;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;10110:10;69:12079;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;9312:17;69:12079;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;;69:12079;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;;69:12079;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;:::i;:::-;;;;;;;;;;;;10140:410;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;69:12079;;;;;;;;;;;;;;;;;;;;;9342:1220;;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:410;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;9172:44;-1:-1:-1;69:12079:0;;-1:-1:-1;;;;;69:12079:0;9172:10;9197:19;9172:44;;69:12079;;;;;;-1:-1:-1;;69:12079:0;;;;;;506:29;69:12079;506:29;;;;;;69:12079;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;-1:-1:-1;;;;;69:12079:0;;:::i;:::-;;;;344:40;69:12079;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;8138:12;69:12079;;;;;;;;;8138:12;69:12079;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;440:29;;;;;;69:12079;440:29;;:::i;:::-;69:12079;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;-1:-1:-1;;;;;69:12079:0;;:::i;:::-;;;;;;;;;;;;;;6690:7;;69:12079;;;;;:::i;:::-;6632:14;69:12079;;;6632:14;;69:12079;:::i;:::-;6661:14;69:12079;;;;6661:14;;;69:12079;:::i;:::-;6712:16;;69:12079;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:12079:0;;;;-1:-1:-1;;;;;69:12079:0;;:::i;:::-;;;;;6050:8;69:12079;;6042:53;69:12079;;;;;;6042:53;:::i;:::-;69:12079;;;;;;;;;;;6113:34;69:12079;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:12079:0;;;;7345:10;69:12079;;;;;;;;;;;;;7345:10;69:12079;;;;;;;;7431:4;69:12079;;;;;;;;7446:29;7345:10;7446:29;:::i;:::-;7491:27;69:12079;;;7345:10;69:12079;;7491:27;69:12079;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;1067:27;69:12079;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;69:12079:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;1920:110;69:12079;;;;1942:10;:19;1920:110;:::i;:::-;69:12079;;;;;;;5026:8;69:12079;;5018:53;69:12079;;;;;;5018:53;:::i;:::-;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;5179:34;5229:10;69:12079;;;;5224:200;5241:23;;;;;;69:12079;-1:-1:-1;;;69:12079:0;;;;;;;5476:40;69:12079;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;5476:40;69:12079;5266:3;5312:15;;;;;;:::i;:::-;69:12079;;;;;;;5312:26;69:12079;;5266:3;;;:::i;:::-;5229:10;;69:12079;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;-1:-1:-1;;;;;69:12079:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;1920:110;69:12079;;;;;;;;1942:10;:19;1920:110;:::i;:::-;69:12079;;;;;;12108:10;69:12079;;;;;12108:21;;69:12079;;-1:-1:-1;;69:12079:0;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;;3862:27;;69:12079;;;3937:19;69:12079;3937:19;;:::i;69:12079::-;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1920:110;69:12079;;;;1942:10;:19;1920:110;:::i;:::-;69:12079;;;;;6966:8;69:12079;;;;;;;;;;;;;;;;;;;;;;;;7137:26;7179:24;69:12079;;;;;;;;;;;;;;;;;;;7137:26;:::i;:::-;69:12079;;;;;7179:24;69:12079;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;:::i;:::-;-1:-1:-1;;;;;69:12079:0;;;;;1006:52;69:12079;;;;;;;;;;;1006:52;;;;;69:12079;1006:52;;;;:::i;:::-;69:12079;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;69:12079:0;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;69:12079:0;;;;-1:-1:-1;69:12079:0;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;-1:-1:-1;69:12079:0;;;-1:-1:-1;69:12079:0;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;69:12079:0;;;;-1:-1:-1;69:12079:0;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;69:12079:0;;;-1:-1:-1;69:12079:0;;;;;-1:-1:-1;69:12079:0;:::o;:::-;;;-1:-1:-1;;69:12079:0;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;69:12079:0;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;69:12079:0;;;;;7137:12;69:12079;-1:-1:-1;;;69:12079:0;;;;;;;;;7137:12;69:12079;;;;;;7137:12;-1:-1:-1;69:12079:0;;;;;-1:-1:-1;;;;;;69:12079:0;-1:-1:-1;;;;;69:12079:0;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;69:12079:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:12079:0;;;;;;;:::o;:::-;;;;;;;;;;;;5532:384;69:12079;;;;;;;;-1:-1:-1;69:12079:0;;;;;;5694:34;69:12079;-1:-1:-1;69:12079:0;5694:34;-1:-1:-1;69:12079:0;;;5739:147;5756:21;;;;;;5896:12;;;;;;-1:-1:-1;5532:384:0;:::o;5779:3::-;5803:13;;;;;:::i;:::-;69:12079;;;;;;;;;;;5803:24;5799:76;;5779:3;;;:::i;:::-;5744:10;;5799:76;5848:11;;;;;;;:::o;69:12079::-;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;-1:-1:-1;69:12079:0;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;7558:246;7654:5;69:12079;-1:-1:-1;;;;;69:12079:0;;;;;7645:14;;7641:34;;69:12079;7654:5;69:12079;7690:8;69:12079;;;;7654:5;69:12079;;;7686:36;;7654:5;69:12079;7737:8;69:12079;;;;7654:5;69:12079;;;7733:36;;69:12079;;;;;:::i;:::-;;;;-1:-1:-1;;;69:12079:0;;;;7558:246;:::o;7733:36::-;69:12079;;;;;:::i;:::-;;;;-1:-1:-1;;;69:12079:0;;;;7754:15;:::o;7686:36::-;69:12079;;;;;;:::i;:::-;;;;-1:-1:-1;;;69:12079:0;;;;7707:15;:::o;7641:34::-;69:12079;;;;;;:::i;:::-;;;;-1:-1:-1;;;69:12079:0;;;;7661:14;:::o;8228:266::-;-1:-1:-1;;;;;69:12079:0;-1:-1:-1;69:12079:0;;;8351:18;69:12079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;:::i;:::-;;;8393:15;8389:57;;69:12079;;;;;;8463:10;:23;69:12079;;;;;;;;8463:23;69:12079;:::i;:::-;-1:-1:-1;;;69:12079:0;;;;;;;;8389:57;69:12079;;;;;;;;;:::i;:::-;;;8425:9;:::o;69:12079::-;;;;;;;;;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;69:12079:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;69:12079:0;;;;;;;;;;;;;;;;;;-1:-1:-1;69:12079:0;-1:-1:-1;;69:12079:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract RekamMedis {\r\n    address public admin;\r\n\r\n    struct Dokter {\r\n        string nama;\r\n        string spesialisasi;\r\n        string nomorLisensi;\r\n        bool aktif;\r\n        address[] assignedPasien;\r\n    }\r\n\r\n    mapping(address => Dokter) public dataDokter;\r\n    mapping(address => bool) public isDokter;\r\n    mapping(address => bool) public isPasien;\r\n\r\n    address[] public daftarDokter; // daftar semua alamat dokter\r\n    address[] public daftarPasien; // daftar semua alamat pasien\r\n\r\n    struct RekamMedisData {\r\n        uint id;\r\n        address pasien;\r\n        string nama;\r\n        uint umur;\r\n        string golonganDarah;\r\n        string tanggalLahir;\r\n        string gender;\r\n        string alamat;\r\n        string noTelepon;\r\n        string email;\r\n        string diagnosa;\r\n        string foto;\r\n        string catatan;\r\n        bool valid;\r\n    }\r\n\r\n    mapping(uint => RekamMedisData) public rekamMedis;\r\n    mapping(address => uint[]) public rekamMedisByPasien;\r\n\r\n    uint public rekamMedisCount;\r\n\r\n    // Versi history rekam medis\r\n    mapping(uint => RekamMedisData[]) public rekamMedisVersions;\r\n\r\n    // Events\r\n    event RekamMedisDitambahkan(\r\n        uint id,\r\n        address pasien,\r\n        string diagnosa,\r\n        bool valid\r\n    );\r\n    event RekamMedisDiperbarui(uint id, string diagnosa, string catatan);\r\n    event AdminDitetapkan(address newAdmin);\r\n    event DokterTerdaftar(\r\n        address dokter,\r\n        string nama,\r\n        string spesialisasi,\r\n        string nomorLisensi\r\n    );\r\n    event DokterStatusDiubah(address dokter, bool aktif);\r\n    event PasienDiassignKeDokter(address dokter, address pasien);\r\n    event PasienTerdaftar(address pasien);\r\n\r\n    constructor() {\r\n        admin = msg.sender; // Set pembuat kontrak sebagai admin awal\r\n    }\r\n\r\n    modifier hanyaAdmin() {\r\n        require(\r\n            msg.sender == admin,\r\n            \"Hanya admin yang bisa melakukan aksi ini.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaDokterAktif() {\r\n        require(\r\n            isDokter[msg.sender] && dataDokter[msg.sender].aktif,\r\n            \"Hanya dokter aktif yang bisa memperbarui rekam medis.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaDokterAktifUntukPasien(address _pasien) {\r\n        require(\r\n            isDokter[msg.sender] && dataDokter[msg.sender].aktif,\r\n            \"Hanya dokter aktif yang bisa memperbarui rekam medis.\"\r\n        );\r\n        require(\r\n            isPasienAssignedToDokter(msg.sender, _pasien),\r\n            \"Dokter tidak di-assign untuk pasien ini.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaPasien(address pasien) {\r\n        require(\r\n            msg.sender == pasien,\r\n            \"Hanya pasien yang bisa membuat rekam medis mereka.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    // Register dokter baru dengan tambahan spesialisasi dan nomor lisensi\r\n    function registerDokter(\r\n        address _dokter,\r\n        string memory _nama,\r\n        string memory _spesialisasi,\r\n        string memory _nomorLisensi\r\n    ) public hanyaAdmin {\r\n        require(!isDokter[_dokter], \"Dokter sudah terdaftar.\");\r\n        require(!isPasien[_dokter], \"Alamat sudah terdaftar sebagai Pasien.\");\r\n        isDokter[_dokter] = true;\r\n        dataDokter[_dokter] = Dokter({\r\n            nama: _nama,\r\n            spesialisasi: _spesialisasi,\r\n            nomorLisensi: _nomorLisensi,\r\n            aktif: true,\r\n            assignedPasien: new address[](0)\r\n        });\r\n        daftarDokter.push(_dokter);\r\n        emit DokterTerdaftar(_dokter, _nama, _spesialisasi, _nomorLisensi);\r\n    }\r\n\r\n    function totalDokter() public view returns (uint) {\r\n        return daftarDokter.length;\r\n    }\r\n\r\n    function getDokterByIndex(uint index) public view returns (address) {\r\n        require(index < daftarDokter.length, \"Index dokter tidak valid.\");\r\n        return daftarDokter[index];\r\n    }\r\n\r\n    // Set status dokter aktif/nonaktif (tidak perlu ubah spesialisasi dan lisensi di sini)\r\n    function setStatusDokter(address _dokter, bool _aktif) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        dataDokter[_dokter].aktif = _aktif;\r\n        emit DokterStatusDiubah(_dokter, _aktif);\r\n    }\r\n\r\n    // Update data dokter (misal untuk update nama, spesialisasi, atau nomor lisensi)\r\n    function updateDataDokter(\r\n        address _dokter,\r\n        string memory _nama,\r\n        string memory _spesialisasi,\r\n        string memory _nomorLisensi\r\n    ) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        dataDokter[_dokter].nama = _nama;\r\n        dataDokter[_dokter].spesialisasi = _spesialisasi;\r\n        dataDokter[_dokter].nomorLisensi = _nomorLisensi;\r\n        // Emit event jika perlu dibuat event update dokter (tidak wajib)\r\n    }\r\n\r\n    function assignPasienToDokter(\r\n        address _dokter,\r\n        address _pasien\r\n    ) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        require(isPasien[_pasien], \"Pasien tidak terdaftar.\");\r\n        address[] storage pasienDokter = dataDokter[_dokter].assignedPasien;\r\n        for (uint i = 0; i < pasienDokter.length; i++) {\r\n            require(\r\n                pasienDokter[i] != _pasien,\r\n                \"Pasien sudah ditugaskan ke dokter ini.\"\r\n            );\r\n        }\r\n        pasienDokter.push(_pasien);\r\n        emit PasienDiassignKeDokter(_dokter, _pasien);\r\n    }\r\n\r\n    function isPasienAssignedToDokter(\r\n        address _dokter,\r\n        address _pasien\r\n    ) public view returns (bool) {\r\n        address[] storage pasienList = dataDokter[_dokter].assignedPasien;\r\n        for (uint i = 0; i < pasienList.length; i++) {\r\n            if (pasienList[i] == _pasien) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getAssignedPasienByDokter(\r\n        address _dokter\r\n    ) public view returns (address[] memory) {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        return dataDokter[_dokter].assignedPasien;\r\n    }\r\n\r\n    // Get data dokter lengkap termasuk spesialisasi dan nomor lisensi\r\n    function getDokter(\r\n        address _dokter\r\n    )\r\n        public\r\n        view\r\n        returns (\r\n            string memory nama,\r\n            string memory spesialisasi,\r\n            string memory nomorLisensi,\r\n            bool aktif,\r\n            address[] memory pasien\r\n        )\r\n    {\r\n        Dokter storage d = dataDokter[_dokter];\r\n        return (\r\n            d.nama,\r\n            d.spesialisasi,\r\n            d.nomorLisensi,\r\n            d.aktif,\r\n            d.assignedPasien\r\n        );\r\n    }\r\n\r\n    // Daftarkan pasien oleh admin tanpa menyimpan nama secara terpisah,\r\n    // nama pasien diambil dari data rekam medis pertama\r\n    function registerPasien(address _pasien) public hanyaAdmin {\r\n        require(!isDokter[_pasien], \"Alamat sudah terdaftar sebagai Dokter.\");\r\n        require(!isPasien[_pasien], \"Pasien sudah terdaftar.\");\r\n        isPasien[_pasien] = true;\r\n        daftarPasien.push(_pasien);\r\n        emit PasienTerdaftar(_pasien);\r\n    }\r\n\r\n    // Self register pasien tanpa nama (bisa dikembangkan)\r\n    function selfRegisterPasien() public {\r\n        require(!isPasien[msg.sender], \"Anda sudah terdaftar sebagai Pasien.\");\r\n        isPasien[msg.sender] = true;\r\n        daftarPasien.push(msg.sender);\r\n        emit PasienTerdaftar(msg.sender);\r\n    }\r\n\r\n    // Ambil role user\r\n    function getUserRole(address _user) public view returns (string memory) {\r\n        if (_user == admin) return \"Admin\";\r\n        if (isDokter[_user]) return \"Dokter\";\r\n        if (isPasien[_user]) return \"Pasien\";\r\n        return \"Unknown\";\r\n    }\r\n\r\n    // Ambil daftar rekam medis milik pasien\r\n    function getRekamMedisIdsByPasien(\r\n        address pasien\r\n    ) public view returns (uint[] memory) {\r\n        return rekamMedisByPasien[pasien];\r\n    }\r\n\r\n    // Ambil daftar semua pasien\r\n    function getDaftarPasien() public view returns (address[] memory) {\r\n        return daftarPasien;\r\n    }\r\n\r\n    // Ambil nama pasien dari rekam medis pertama (jika ada)\r\n    function getNamaPasien(\r\n        address _pasien\r\n    ) public view returns (string memory) {\r\n        uint[] memory ids = rekamMedisByPasien[_pasien];\r\n        if (ids.length == 0) {\r\n            return \"\";\r\n        }\r\n        return rekamMedis[ids[0]].nama;\r\n    }\r\n\r\n    // Set admin baru\r\n    function setAdmin(address _newAdmin) public hanyaAdmin {\r\n        admin = _newAdmin;\r\n        emit AdminDitetapkan(_newAdmin);\r\n    }\r\n\r\n    // Tambah rekam medis pasien (self data input)\r\n    function tambahRekamMedis(\r\n        address _pasien,\r\n        string memory _nama,\r\n        uint _umur,\r\n        string memory _golonganDarah,\r\n        string memory _tanggalLahir,\r\n        string memory _gender,\r\n        string memory _alamat,\r\n        string memory _noTelepon,\r\n        string memory _email,\r\n        string memory _diagnosa,\r\n        string memory _foto,\r\n        string memory _catatan\r\n    ) public {\r\n        require(\r\n            msg.sender == _pasien || msg.sender == admin,\r\n            \"Hanya pasien atau admin yang bisa menambah rekam medis.\"\r\n        );\r\n\r\n        rekamMedisCount++;\r\n\r\n        if (msg.sender == admin) {\r\n            // Jika admin, simpan hanya nama, sisanya kosong atau default\r\n            rekamMedis[rekamMedisCount] = RekamMedisData(\r\n                rekamMedisCount,\r\n                _pasien,\r\n                _nama,\r\n                0, // umur default\r\n                \"\", // golonganDarah kosong\r\n                \"\", // tanggalLahir kosong\r\n                \"\", // gender kosong\r\n                \"\", // alamat kosong\r\n                \"\", // noTelepon kosong\r\n                \"\", // email kosong\r\n                \"\", // diagnosa kosong\r\n                \"\", // foto kosong\r\n                \"\", // catatan kosong\r\n                true\r\n            );\r\n        } else {\r\n            // Jika pasien, simpan semua data sesuai input\r\n            rekamMedis[rekamMedisCount] = RekamMedisData(\r\n                rekamMedisCount,\r\n                _pasien,\r\n                _nama,\r\n                _umur,\r\n                _golonganDarah,\r\n                _tanggalLahir,\r\n                _gender,\r\n                _alamat,\r\n                _noTelepon,\r\n                _email,\r\n                _diagnosa,\r\n                _foto,\r\n                _catatan,\r\n                true\r\n            );\r\n        }\r\n\r\n        rekamMedisByPasien[_pasien].push(rekamMedisCount);\r\n        emit RekamMedisDitambahkan(rekamMedisCount, _pasien, _diagnosa, true);\r\n    }\r\n\r\n    // Update rekam medis dokter aktif\r\n    function updateRekamMedis(\r\n        uint _id,\r\n        string memory _nama,\r\n        uint _umur,\r\n        string memory _golonganDarah,\r\n        string memory _tanggalLahir,\r\n        string memory _gender,\r\n        string memory _alamat,\r\n        string memory _noTelepon,\r\n        string memory _email,\r\n        string memory _diagnosa,\r\n        string memory _foto,\r\n        string memory _catatan\r\n    ) public hanyaDokterAktifUntukPasien(rekamMedis[_id].pasien) {\r\n        RekamMedisData storage rekam = rekamMedis[_id];\r\n        rekamMedisVersions[_id].push(rekam);\r\n        rekam.nama = _nama;\r\n        rekam.umur = _umur;\r\n        rekam.golonganDarah = _golonganDarah;\r\n        rekam.tanggalLahir = _tanggalLahir;\r\n        rekam.gender = _gender;\r\n        rekam.alamat = _alamat;\r\n        rekam.noTelepon = _noTelepon;\r\n        rekam.email = _email;\r\n        rekam.diagnosa = _diagnosa;\r\n        rekam.foto = _foto;\r\n        rekam.catatan = _catatan;\r\n        emit RekamMedisDiperbarui(_id, _diagnosa, _catatan);\r\n    }\r\n\r\n    // Fungsi untuk ambil versi rekam medis\r\n    function getRekamMedisVersions(\r\n        uint _id\r\n    ) public view returns (RekamMedisData[] memory) {\r\n        return rekamMedisVersions[_id];\r\n    }\r\n\r\n    // Nonaktifkan rekam medis (admin)\r\n    function nonaktifkanRekamMedis(uint _id) public hanyaAdmin {\r\n        rekamMedis[_id].valid = false;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\TA\\Rekam_Medis_Blockchain\\rekam_medis_backend\\contracts\\RekamMedis.sol",
  "ast": {
    "absolutePath": "project:/contracts/RekamMedis.sol",
    "exportedSymbols": {
      "RekamMedis": [
        971
      ]
    },
    "id": 972,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "RekamMedis",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 971,
        "linearizedBaseContracts": [
          971
        ],
        "name": "RekamMedis",
        "nameLocation": "78:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 3,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "111:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "96:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "96:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RekamMedis.Dokter",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "nama",
                "nameLocation": "157:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "150:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "150:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "spesialisasi",
                "nameLocation": "179:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "172:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "nomorLisensi",
                "nameLocation": "209:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "202:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "202:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "aktif",
                "nameLocation": "237:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "232:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "232:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "assignedPasien",
                "nameLocation": "263:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "253:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13,
                  "nodeType": "ArrayTypeName",
                  "src": "253:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Dokter",
            "nameLocation": "132:6:0",
            "nodeType": "StructDefinition",
            "scope": 971,
            "src": "125:160:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3c0fdea",
            "id": 20,
            "mutability": "mutable",
            "name": "dataDokter",
            "nameLocation": "327:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "293:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
              "typeString": "mapping(address => struct RekamMedis.Dokter)"
            },
            "typeName": {
              "id": 19,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "301:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "293:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                "typeString": "mapping(address => struct RekamMedis.Dokter)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 18,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 17,
                  "name": "Dokter",
                  "nameLocations": [
                    "312:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15,
                  "src": "312:6:0"
                },
                "referencedDeclaration": 15,
                "src": "312:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dokter_$15_storage_ptr",
                  "typeString": "struct RekamMedis.Dokter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c4c9348",
            "id": 24,
            "mutability": "mutable",
            "name": "isDokter",
            "nameLocation": "376:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "344:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 23,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "352:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "344:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 22,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "363:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1132beb5",
            "id": 28,
            "mutability": "mutable",
            "name": "isPasien",
            "nameLocation": "423:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "391:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 27,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "399:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "391:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "410:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "42699651",
            "id": 31,
            "mutability": "mutable",
            "name": "daftarDokter",
            "nameLocation": "457:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "440:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "440:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 30,
              "nodeType": "ArrayTypeName",
              "src": "440:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68370087",
            "id": 34,
            "mutability": "mutable",
            "name": "daftarPasien",
            "nameLocation": "523:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "506:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "506:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 33,
              "nodeType": "ArrayTypeName",
              "src": "506:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RekamMedis.RekamMedisData",
            "id": 63,
            "members": [
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "612:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "607:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "607:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "pasien",
                "nameLocation": "633:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "625:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 37,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "625:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "nama",
                "nameLocation": "657:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "650:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 39,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "650:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "umur",
                "nameLocation": "677:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "672:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "672:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "golonganDarah",
                "nameLocation": "699:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "692:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 43,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "692:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "tanggalLahir",
                "nameLocation": "730:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "723:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 45,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "723:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "gender",
                "nameLocation": "760:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "753:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 47,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "753:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "alamat",
                "nameLocation": "784:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "777:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 49,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "777:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "noTelepon",
                "nameLocation": "808:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "801:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 51,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "801:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "email",
                "nameLocation": "835:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "828:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 53,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "828:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "diagnosa",
                "nameLocation": "858:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "851:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 55,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "851:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "foto",
                "nameLocation": "884:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "877:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 57,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "877:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 60,
                "mutability": "mutable",
                "name": "catatan",
                "nameLocation": "906:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "899:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 59,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "899:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "929:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "924:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 61,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "924:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RekamMedisData",
            "nameLocation": "581:14:0",
            "nodeType": "StructDefinition",
            "scope": 971,
            "src": "574:368:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "abf72abb",
            "id": 68,
            "mutability": "mutable",
            "name": "rekamMedis",
            "nameLocation": "989:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "950:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$63_storage_$",
              "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData)"
            },
            "typeName": {
              "id": 67,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 64,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "958:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "950:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$63_storage_$",
                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 66,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 65,
                  "name": "RekamMedisData",
                  "nameLocations": [
                    "966:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63,
                  "src": "966:14:0"
                },
                "referencedDeclaration": 63,
                "src": "966:14:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                  "typeString": "struct RekamMedis.RekamMedisData"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "00410cb3",
            "id": 73,
            "mutability": "mutable",
            "name": "rekamMedisByPasien",
            "nameLocation": "1040:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1006:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 72,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 69,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1014:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1006:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 70,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1025:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 71,
                "nodeType": "ArrayTypeName",
                "src": "1025:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2e2dd102",
            "id": 75,
            "mutability": "mutable",
            "name": "rekamMedisCount",
            "nameLocation": "1079:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1067:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1067:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd09a968",
            "id": 81,
            "mutability": "mutable",
            "name": "rekamMedisVersions",
            "nameLocation": "1178:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1137:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$63_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData[])"
            },
            "typeName": {
              "id": 80,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 76,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1145:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1137:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$63_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 78,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 77,
                    "name": "RekamMedisData",
                    "nameLocations": [
                      "1153:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 63,
                    "src": "1153:14:0"
                  },
                  "referencedDeclaration": 63,
                  "src": "1153:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                    "typeString": "struct RekamMedis.RekamMedisData"
                  }
                },
                "id": 79,
                "nodeType": "ArrayTypeName",
                "src": "1153:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$63_storage_$dyn_storage_ptr",
                  "typeString": "struct RekamMedis.RekamMedisData[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c997",
            "id": 91,
            "name": "RekamMedisDitambahkan",
            "nameLocation": "1226:21:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1263:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1258:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1284:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1276:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "diagnosa",
                  "nameLocation": "1308:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1301:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "1332:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1327:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1247:97:0"
            },
            "src": "1220:125:0"
          },
          {
            "anonymous": false,
            "eventSelector": "2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e13",
            "id": 99,
            "name": "RekamMedisDiperbarui",
            "nameLocation": "1357:20:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1383:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1378:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "diagnosa",
                  "nameLocation": "1394:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1387:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "catatan",
                  "nameLocation": "1411:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1404:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1377:42:0"
            },
            "src": "1351:69:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d",
            "id": 103,
            "name": "AdminDitetapkan",
            "nameLocation": "1432:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "1456:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1448:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1447:18:0"
            },
            "src": "1426:40:0"
          },
          {
            "anonymous": false,
            "eventSelector": "5e399ee004ff4fef571265f7bdd2e8ec7d18b86f1aeab0d8009f0df31b272592",
            "id": 113,
            "name": "DokterTerdaftar",
            "nameLocation": "1478:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1512:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1504:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1504:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nama",
                  "nameLocation": "1536:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1529:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "spesialisasi",
                  "nameLocation": "1558:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1551:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nomorLisensi",
                  "nameLocation": "1588:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1581:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1493:114:0"
            },
            "src": "1472:136:0"
          },
          {
            "anonymous": false,
            "eventSelector": "3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a",
            "id": 119,
            "name": "DokterStatusDiubah",
            "nameLocation": "1620:18:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1647:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1639:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "aktif",
                  "nameLocation": "1660:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1655:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1638:28:0"
            },
            "src": "1614:53:0"
          },
          {
            "anonymous": false,
            "eventSelector": "d9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a",
            "id": 125,
            "name": "PasienDiassignKeDokter",
            "nameLocation": "1679:22:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1710:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1702:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1726:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1718:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1701:32:0"
            },
            "src": "1673:61:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da47058",
            "id": 129,
            "name": "PasienTerdaftar",
            "nameLocation": "1746:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1770:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1762:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:16:0"
            },
            "src": "1740:38:0"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1800:79:0",
              "statements": [
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1811:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 133,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1819:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1823:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1819:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1811:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:18:0"
                }
              ]
            },
            "id": 138,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:2:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:0:0"
            },
            "scope": 971,
            "src": "1786:93:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1909:141:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 141,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1942:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1946:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1942:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 143,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1956:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1942:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612061646d696e2079616e672062697361206d656c616b756b616e20616b736920696e692e",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1976:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40743133d152203b81977e888be4a239119d67c3c029e27406bd4fbf4c6eff2f",
                          "typeString": "literal_string \"Hanya admin yang bisa melakukan aksi ini.\""
                        },
                        "value": "Hanya admin yang bisa melakukan aksi ini."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40743133d152203b81977e888be4a239119d67c3c029e27406bd4fbf4c6eff2f",
                          "typeString": "literal_string \"Hanya admin yang bisa melakukan aksi ini.\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1920:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1920:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:110:0"
                },
                {
                  "id": 148,
                  "nodeType": "PlaceholderStatement",
                  "src": "2041:1:0"
                }
              ]
            },
            "id": 150,
            "name": "hanyaAdmin",
            "nameLocation": "1896:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1906:2:0"
            },
            "src": "1887:163:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "2086:186:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 153,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2119:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 156,
                          "indexExpression": {
                            "expression": {
                              "id": 154,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2128:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2132:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2128:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2119:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 157,
                              "name": "dataDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "2143:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                                "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                              }
                            },
                            "id": 160,
                            "indexExpression": {
                              "expression": {
                                "id": 158,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2154:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2158:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2154:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2143:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dokter_$15_storage",
                              "typeString": "struct RekamMedis.Dokter storage ref"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2166:5:0",
                          "memberName": "aktif",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "2143:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2119:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e796120646f6b74657220616b7469662079616e672062697361206d656d70657262617275692072656b616d206d656469732e",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2186:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        },
                        "value": "Hanya dokter aktif yang bisa memperbarui rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2097:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2097:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2097:155:0"
                },
                {
                  "id": 166,
                  "nodeType": "PlaceholderStatement",
                  "src": "2263:1:0"
                }
              ]
            },
            "id": 168,
            "name": "hanyaDokterAktif",
            "nameLocation": "2067:16:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2083:2:0"
            },
            "src": "2058:214:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "2334:332:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 173,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2367:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 176,
                          "indexExpression": {
                            "expression": {
                              "id": 174,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2376:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2380:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2376:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2367:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 177,
                              "name": "dataDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "2391:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                                "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                              }
                            },
                            "id": 180,
                            "indexExpression": {
                              "expression": {
                                "id": 178,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2402:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2406:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2402:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2391:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dokter_$15_storage",
                              "typeString": "struct RekamMedis.Dokter storage ref"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2414:5:0",
                          "memberName": "aktif",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "2391:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2367:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e796120646f6b74657220616b7469662079616e672062697361206d656d70657262617275692072656b616d206d656469732e",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2434:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        },
                        "value": "Hanya dokter aktif yang bisa memperbarui rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2345:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "2345:155:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 188,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2558:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2562:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2558:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 190,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "2570:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 187,
                          "name": "isPasienAssignedToDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "2533:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2533:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b2064692d61737369676e20756e74756b2070617369656e20696e692e",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2593:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e82baccf1116aea183061ae2d562c35c217635aaf6d8edae2e53db74fd1d63d",
                          "typeString": "literal_string \"Dokter tidak di-assign untuk pasien ini.\""
                        },
                        "value": "Dokter tidak di-assign untuk pasien ini."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e82baccf1116aea183061ae2d562c35c217635aaf6d8edae2e53db74fd1d63d",
                          "typeString": "literal_string \"Dokter tidak di-assign untuk pasien ini.\""
                        }
                      ],
                      "id": 186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2511:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2511:135:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2511:135:0"
                },
                {
                  "id": 195,
                  "nodeType": "PlaceholderStatement",
                  "src": "2657:1:0"
                }
              ]
            },
            "id": 197,
            "name": "hanyaDokterAktifUntukPasien",
            "nameLocation": "2289:27:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "2325:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2317:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2316:17:0"
            },
            "src": "2280:386:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "2711:151:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 202,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2744:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2748:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2744:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 204,
                          "name": "pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "2758:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2744:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612070617369656e2079616e672062697361206d656d627561742072656b616d206d65646973206d6572656b612e",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2779:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be9e5faf1ada86bba8df6c823638bf7d94a2e628e433585b67a75bd6684f5304",
                          "typeString": "literal_string \"Hanya pasien yang bisa membuat rekam medis mereka.\""
                        },
                        "value": "Hanya pasien yang bisa membuat rekam medis mereka."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be9e5faf1ada86bba8df6c823638bf7d94a2e628e433585b67a75bd6684f5304",
                          "typeString": "literal_string \"Hanya pasien yang bisa membuat rekam medis mereka.\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2722:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2722:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "2722:120:0"
                },
                {
                  "id": 209,
                  "nodeType": "PlaceholderStatement",
                  "src": "2853:1:0"
                }
              ]
            },
            "id": 211,
            "name": "hanyaPasien",
            "nameLocation": "2683:11:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "2703:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2695:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2695:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2694:16:0"
            },
            "src": "2674:188:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "3127:537:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3146:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 225,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3147:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 227,
                          "indexExpression": {
                            "id": 226,
                            "name": "_dokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "3156:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3147:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b746572207375646168207465726461667461722e",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3166:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_244ba53ff803a73914781092e4815e3084e42d1edb577a9193f81c0183023344",
                          "typeString": "literal_string \"Dokter sudah terdaftar.\""
                        },
                        "value": "Dokter sudah terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_244ba53ff803a73914781092e4815e3084e42d1edb577a9193f81c0183023344",
                          "typeString": "literal_string \"Dokter sudah terdaftar.\""
                        }
                      ],
                      "id": 224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3138:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3138:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "3138:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3211:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 233,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "3212:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 235,
                          "indexExpression": {
                            "id": 234,
                            "name": "_dokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "3221:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3212:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c616d61742073756461682074657264616674617220736562616761692050617369656e2e",
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3231:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84c42e7ccb88d3ba71eb5ceba45ba7a042208342e460783b267a4a0a677d60f2",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Pasien.\""
                        },
                        "value": "Alamat sudah terdaftar sebagai Pasien."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84c42e7ccb88d3ba71eb5ceba45ba7a042208342e460783b267a4a0a677d60f2",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Pasien.\""
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3203:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3203:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "3203:69:0"
                },
                {
                  "expression": {
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 240,
                        "name": "isDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "3283:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 242,
                      "indexExpression": {
                        "id": 241,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "3292:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3283:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3303:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3283:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "3283:24:0"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 246,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3318:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 248,
                      "indexExpression": {
                        "id": 247,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "3329:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3318:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$15_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 250,
                          "name": "_nama",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "3368:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 251,
                          "name": "_spesialisasi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "3402:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 252,
                          "name": "_nomorLisensi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "3444:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3479:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3528:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3514:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 254,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3518:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 255,
                              "nodeType": "ArrayTypeName",
                              "src": "3518:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3514:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "id": 249,
                        "name": "Dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "3340:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Dokter_$15_storage_ptr_$",
                          "typeString": "type(struct RekamMedis.Dokter storage pointer)"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3362:4:0",
                        "3388:12:0",
                        "3430:12:0",
                        "3472:5:0",
                        "3498:14:0"
                      ],
                      "names": [
                        "nama",
                        "spesialisasi",
                        "nomorLisensi",
                        "aktif",
                        "assignedPasien"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3340:202:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$15_memory_ptr",
                        "typeString": "struct RekamMedis.Dokter memory"
                      }
                    },
                    "src": "3318:224:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dokter_$15_storage",
                      "typeString": "struct RekamMedis.Dokter storage ref"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "3318:224:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 265,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "3571:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 262,
                        "name": "daftarDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "3553:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3566:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3553:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3553:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "3553:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 269,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "3611:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 270,
                        "name": "_nama",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "3620:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 271,
                        "name": "_spesialisasi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "3627:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 272,
                        "name": "_nomorLisensi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "3642:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 268,
                      "name": "DokterTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "3595:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,string memory,string memory)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3595:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "EmitStatement",
                  "src": "3590:66:0"
                }
              ]
            },
            "functionSelector": "ddbd24d3",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 221,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "3116:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "3116:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3116:10:0"
              }
            ],
            "name": "registerDokter",
            "nameLocation": "2955:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "2988:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "2980:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2980:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "3020:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "3006:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3006:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_spesialisasi",
                  "nameLocation": "3050:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "3036:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "_nomorLisensi",
                  "nameLocation": "3088:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "3074:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3074:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2969:139:0"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3127:0:0"
            },
            "scope": 971,
            "src": "2946:718:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "3722:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 281,
                      "name": "daftarDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "3740:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3753:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3740:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 280,
                  "id": 283,
                  "nodeType": "Return",
                  "src": "3733:26:0"
                }
              ]
            },
            "functionSelector": "7d3e9db8",
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDokter",
            "nameLocation": "3681:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3692:2:0"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3716:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3716:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3715:6:0"
            },
            "scope": 971,
            "src": "3672:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "3843:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 293,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "3862:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 294,
                            "name": "daftarDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "3870:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3883:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3870:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3862:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e64657820646f6b74657220746964616b2076616c69642e",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3891:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3e7eef6eca0aa2543ab5b1b1fefb44d677dd8a64bfa1603b451f59a63157404",
                          "typeString": "literal_string \"Index dokter tidak valid.\""
                        },
                        "value": "Index dokter tidak valid."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3e7eef6eca0aa2543ab5b1b1fefb44d677dd8a64bfa1603b451f59a63157404",
                          "typeString": "literal_string \"Index dokter tidak valid.\""
                        }
                      ],
                      "id": 292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3854:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3854:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "3854:65:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 300,
                      "name": "daftarDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "3937:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 302,
                    "indexExpression": {
                      "id": 301,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 287,
                      "src": "3950:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3937:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 291,
                  "id": 303,
                  "nodeType": "Return",
                  "src": "3930:26:0"
                }
              ]
            },
            "functionSelector": "046bdbcc",
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDokterByIndex",
            "nameLocation": "3784:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3806:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3801:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3801:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3800:12:0"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3834:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3834:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3833:9:0"
            },
            "scope": 971,
            "src": "3775:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "4138:168:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 315,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "4157:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 317,
                        "indexExpression": {
                          "id": 316,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4166:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4157:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4176:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4149:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4149:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "4149:53:0"
                },
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 321,
                          "name": "dataDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4213:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                            "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                          }
                        },
                        "id": 323,
                        "indexExpression": {
                          "id": 322,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4224:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4213:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$15_storage",
                          "typeString": "struct RekamMedis.Dokter storage ref"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4233:5:0",
                      "memberName": "aktif",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "4213:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 325,
                      "name": "_aktif",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "4241:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4213:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "4213:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 329,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "4282:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 330,
                        "name": "_aktif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "4291:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 328,
                      "name": "DokterStatusDiubah",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "4263:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "EmitStatement",
                  "src": "4258:40:0"
                }
              ]
            },
            "functionSelector": "932e0f6d",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 312,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 311,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "4127:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "4127:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4127:10:0"
              }
            ],
            "name": "setStatusDokter",
            "nameLocation": "4074:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "4098:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "4090:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4090:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "_aktif",
                  "nameLocation": "4112:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "4107:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4089:30:0"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4138:0:0"
            },
            "scope": 971,
            "src": "4065:241:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "4584:308:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 348,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "4603:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 350,
                        "indexExpression": {
                          "id": 349,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "4612:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4603:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4622:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4595:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4595:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "4595:53:0"
                },
                {
                  "expression": {
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 354,
                          "name": "dataDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4659:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                            "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                          }
                        },
                        "id": 356,
                        "indexExpression": {
                          "id": 355,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "4670:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4659:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$15_storage",
                          "typeString": "struct RekamMedis.Dokter storage ref"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4679:4:0",
                      "memberName": "nama",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "4659:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 358,
                      "name": "_nama",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 338,
                      "src": "4686:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4659:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "4659:32:0"
                },
                {
                  "expression": {
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 361,
                          "name": "dataDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4702:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                            "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                          }
                        },
                        "id": 363,
                        "indexExpression": {
                          "id": 362,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "4713:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4702:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$15_storage",
                          "typeString": "struct RekamMedis.Dokter storage ref"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4722:12:0",
                      "memberName": "spesialisasi",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "4702:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 365,
                      "name": "_spesialisasi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "4737:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4702:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "4702:48:0"
                },
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 368,
                          "name": "dataDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4761:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                            "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                          }
                        },
                        "id": 370,
                        "indexExpression": {
                          "id": 369,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "4772:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4761:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$15_storage",
                          "typeString": "struct RekamMedis.Dokter storage ref"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4781:12:0",
                      "memberName": "nomorLisensi",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "4761:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 372,
                      "name": "_nomorLisensi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "4796:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4761:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "4761:48:0"
                }
              ]
            },
            "functionSelector": "e05c8a0e",
            "id": 376,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 345,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 344,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "4573:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "4573:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4573:10:0"
              }
            ],
            "name": "updateDataDokter",
            "nameLocation": "4410:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "4445:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "4437:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4437:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "4477:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "4463:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 340,
                  "mutability": "mutable",
                  "name": "_spesialisasi",
                  "nameLocation": "4507:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "4493:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4493:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 342,
                  "mutability": "mutable",
                  "name": "_nomorLisensi",
                  "nameLocation": "4545:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "4531:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4426:139:0"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4584:0:0"
            },
            "scope": 971,
            "src": "4401:491:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "5007:517:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 386,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "5026:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 388,
                        "indexExpression": {
                          "id": 387,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "5035:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5026:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5045:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5018:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5018:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "5018:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 393,
                          "name": "isPasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "5090:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 395,
                        "indexExpression": {
                          "id": 394,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 380,
                          "src": "5099:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5090:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617369656e20746964616b207465726461667461722e",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5109:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4782a23f877cf9a2cb61015c9d3479d89c3bb6c338a0540e7268bf1efb9819c",
                          "typeString": "literal_string \"Pasien tidak terdaftar.\""
                        },
                        "value": "Pasien tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4782a23f877cf9a2cb61015c9d3479d89c3bb6c338a0540e7268bf1efb9819c",
                          "typeString": "literal_string \"Pasien tidak terdaftar.\""
                        }
                      ],
                      "id": 392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5082:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5082:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "5082:53:0"
                },
                {
                  "assignments": [
                    403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "pasienDokter",
                      "nameLocation": "5164:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "5146:30:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 401,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5146:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 402,
                        "nodeType": "ArrayTypeName",
                        "src": "5146:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 408,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 404,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5179:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 406,
                      "indexExpression": {
                        "id": 405,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "5190:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5179:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$15_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5199:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14,
                    "src": "5179:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5146:67:0"
                },
                {
                  "body": {
                    "id": 429,
                    "nodeType": "Block",
                    "src": "5271:153:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 421,
                                  "name": "pasienDokter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "5312:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                    "typeString": "address[] storage pointer"
                                  }
                                },
                                "id": 423,
                                "indexExpression": {
                                  "id": 422,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 410,
                                  "src": "5325:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5312:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 424,
                                "name": "_pasien",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 380,
                                "src": "5331:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5312:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50617369656e20737564616820646974756761736b616e206b6520646f6b74657220696e692e",
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5357:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c614628bd02fed10ab7037aa9ef96182341b00560e3c47f216b8b35ae12ce6a9",
                                "typeString": "literal_string \"Pasien sudah ditugaskan ke dokter ini.\""
                              },
                              "value": "Pasien sudah ditugaskan ke dokter ini."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c614628bd02fed10ab7037aa9ef96182341b00560e3c47f216b8b35ae12ce6a9",
                                "typeString": "literal_string \"Pasien sudah ditugaskan ke dokter ini.\""
                              }
                            ],
                            "id": 420,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5286:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5286:126:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 428,
                        "nodeType": "ExpressionStatement",
                        "src": "5286:126:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 413,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "5241:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 414,
                        "name": "pasienDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "5245:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5258:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5245:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5241:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 430,
                  "initializationExpression": {
                    "assignments": [
                      410
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5234:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "5229:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5229:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 412,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5238:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5229:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5266:3:0",
                      "subExpression": {
                        "id": 417,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "5266:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 419,
                    "nodeType": "ExpressionStatement",
                    "src": "5266:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5224:200:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 434,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "5452:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 431,
                        "name": "pasienDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "5434:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5447:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5434:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5434:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "5434:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 438,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "5499:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 439,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "5508:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 437,
                      "name": "PasienDiassignKeDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "5476:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5476:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "EmitStatement",
                  "src": "5471:45:0"
                }
              ]
            },
            "functionSelector": "19e8f405",
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 383,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 382,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "4996:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "4996:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4996:10:0"
              }
            ],
            "name": "assignPasienToDokter",
            "nameLocation": "4909:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "4948:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "4940:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4940:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "4974:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "4966:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4966:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4929:59:0"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5007:0:0"
            },
            "scope": 971,
            "src": "4900:624:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 486,
              "nodeType": "Block",
              "src": "5652:264:0",
              "statements": [
                {
                  "assignments": [
                    456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 456,
                      "mutability": "mutable",
                      "name": "pasienList",
                      "nameLocation": "5681:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 486,
                      "src": "5663:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5663:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 455,
                        "nodeType": "ArrayTypeName",
                        "src": "5663:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 461,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 457,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5694:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "id": 458,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "5705:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5694:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$15_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5714:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14,
                    "src": "5694:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5663:65:0"
                },
                {
                  "body": {
                    "id": 482,
                    "nodeType": "Block",
                    "src": "5784:102:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 473,
                              "name": "pasienList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 456,
                              "src": "5803:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 475,
                            "indexExpression": {
                              "id": 474,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "5814:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5803:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 476,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "5820:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5803:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 481,
                        "nodeType": "IfStatement",
                        "src": "5799:76:0",
                        "trueBody": {
                          "id": 480,
                          "nodeType": "Block",
                          "src": "5829:46:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5855:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 451,
                              "id": 479,
                              "nodeType": "Return",
                              "src": "5848:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 466,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "5756:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 467,
                        "name": "pasienList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "5760:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5771:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5760:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5756:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 483,
                  "initializationExpression": {
                    "assignments": [
                      463
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5749:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 483,
                        "src": "5744:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5744:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 465,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5753:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5744:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5779:3:0",
                      "subExpression": {
                        "id": 470,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "5779:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 472,
                    "nodeType": "ExpressionStatement",
                    "src": "5779:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5739:147:0"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5903:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 451,
                  "id": 485,
                  "nodeType": "Return",
                  "src": "5896:12:0"
                }
              ]
            },
            "functionSelector": "70419a81",
            "id": 487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPasienAssignedToDokter",
            "nameLocation": "5541:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "5584:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "5576:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5576:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "5610:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "5602:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5602:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5565:59:0"
            },
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "5646:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5646:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5645:6:0"
            },
            "scope": 971,
            "src": "5532:384:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "6031:124:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 496,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "6050:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 498,
                        "indexExpression": {
                          "id": 497,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 489,
                          "src": "6059:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6050:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6069:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6042:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6042:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "6042:53:0"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 502,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "6113:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 504,
                      "indexExpression": {
                        "id": 503,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "6124:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6113:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$15_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6133:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14,
                    "src": "6113:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 494,
                  "id": 506,
                  "nodeType": "Return",
                  "src": "6106:41:0"
                }
              ]
            },
            "functionSelector": "350ee3fc",
            "id": 508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssignedPasienByDokter",
            "nameLocation": "5933:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 489,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "5977:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "5969:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5969:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5958:33:0"
            },
            "returnParameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6013:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 491,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6013:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 492,
                    "nodeType": "ArrayTypeName",
                    "src": "6013:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6012:18:0"
            },
            "scope": 971,
            "src": "5924:231:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 543,
              "nodeType": "Block",
              "src": "6529:218:0",
              "statements": [
                {
                  "assignments": [
                    526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 526,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "6555:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 543,
                      "src": "6540:16:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$15_storage_ptr",
                        "typeString": "struct RekamMedis.Dokter"
                      },
                      "typeName": {
                        "id": 525,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 524,
                          "name": "Dokter",
                          "nameLocations": [
                            "6540:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15,
                          "src": "6540:6:0"
                        },
                        "referencedDeclaration": 15,
                        "src": "6540:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$15_storage_ptr",
                          "typeString": "struct RekamMedis.Dokter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 530,
                  "initialValue": {
                    "baseExpression": {
                      "id": 527,
                      "name": "dataDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "6559:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$15_storage_$",
                        "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                      }
                    },
                    "id": 529,
                    "indexExpression": {
                      "id": 528,
                      "name": "_dokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "6570:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6559:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dokter_$15_storage",
                      "typeString": "struct RekamMedis.Dokter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6540:38:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 531,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "6611:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$15_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6613:4:0",
                        "memberName": "nama",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "6611:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 533,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "6632:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$15_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6634:12:0",
                        "memberName": "spesialisasi",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "6632:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 535,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "6661:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$15_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6663:12:0",
                        "memberName": "nomorLisensi",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "6661:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 537,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "6690:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$15_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6692:5:0",
                        "memberName": "aktif",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "6690:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 539,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "6712:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$15_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6714:14:0",
                        "memberName": "assignedPasien",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "6712:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "id": 541,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6596:143:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_bool_$_t_array$_t_address_$dyn_storage_$",
                      "typeString": "tuple(string storage ref,string storage ref,string storage ref,bool,address[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 523,
                  "id": 542,
                  "nodeType": "Return",
                  "src": "6589:150:0"
                }
              ]
            },
            "functionSelector": "3da05518",
            "id": 544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDokter",
            "nameLocation": "6244:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "6272:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "6264:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6264:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6253:33:0"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 513,
                  "mutability": "mutable",
                  "name": "nama",
                  "nameLocation": "6363:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "6349:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6349:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "spesialisasi",
                  "nameLocation": "6396:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "6382:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6382:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "nomorLisensi",
                  "nameLocation": "6437:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "6423:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6423:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "aktif",
                  "nameLocation": "6469:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "6464:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6464:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "6506:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "6489:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 520,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6489:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 521,
                    "nodeType": "ArrayTypeName",
                    "src": "6489:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6334:189:0"
            },
            "scope": 971,
            "src": "6235:512:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "6946:265:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6965:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 552,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "6966:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 554,
                          "indexExpression": {
                            "id": 553,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "6975:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6966:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c616d617420737564616820746572646166746172207365626167616920446f6b7465722e",
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6985:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be029ad283bd7570d827e2efd69af31e6d9aa723e23fc4389e6b595e7e86d11b",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Dokter.\""
                        },
                        "value": "Alamat sudah terdaftar sebagai Dokter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be029ad283bd7570d827e2efd69af31e6d9aa723e23fc4389e6b595e7e86d11b",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Dokter.\""
                        }
                      ],
                      "id": 551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6957:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6957:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "6957:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7045:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 560,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "7046:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 562,
                          "indexExpression": {
                            "id": 561,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "7055:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7046:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617369656e207375646168207465726461667461722e",
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7065:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64341dd50e2f06c0cac41d11d350ddc2b418e49e56f752b197f71f27c89db58a",
                          "typeString": "literal_string \"Pasien sudah terdaftar.\""
                        },
                        "value": "Pasien sudah terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64341dd50e2f06c0cac41d11d350ddc2b418e49e56f752b197f71f27c89db58a",
                          "typeString": "literal_string \"Pasien sudah terdaftar.\""
                        }
                      ],
                      "id": 559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7037:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7037:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "7037:54:0"
                },
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 567,
                        "name": "isPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7102:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 569,
                      "indexExpression": {
                        "id": 568,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "7111:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7102:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7122:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7102:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "7102:24:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 576,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "7155:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 573,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "7137:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7150:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7137:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7137:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "7137:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 580,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "7195:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 579,
                      "name": "PasienTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "7179:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7179:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "EmitStatement",
                  "src": "7174:29:0"
                }
              ]
            },
            "functionSelector": "010ef3b3",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 549,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 548,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "6935:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "6935:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6935:10:0"
              }
            ],
            "name": "registerPasien",
            "nameLocation": "6896:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "6919:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "6911:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6911:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6910:17:0"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6946:0:0"
            },
            "scope": 971,
            "src": "6887:324:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 615,
              "nodeType": "Block",
              "src": "7316:210:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7335:21:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 588,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "7336:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 591,
                          "indexExpression": {
                            "expression": {
                              "id": 589,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7345:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7349:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7345:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7336:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e64612073756461682074657264616674617220736562616761692050617369656e2e",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7358:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0841d6660aee72f790cc47020ada23ff80bb1ecf0407dbd179fa7f96a310aa51",
                          "typeString": "literal_string \"Anda sudah terdaftar sebagai Pasien.\""
                        },
                        "value": "Anda sudah terdaftar sebagai Pasien."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0841d6660aee72f790cc47020ada23ff80bb1ecf0407dbd179fa7f96a310aa51",
                          "typeString": "literal_string \"Anda sudah terdaftar sebagai Pasien.\""
                        }
                      ],
                      "id": 587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7327:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7327:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "7327:70:0"
                },
                {
                  "expression": {
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 596,
                        "name": "isPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7408:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 599,
                      "indexExpression": {
                        "expression": {
                          "id": 597,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7417:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7421:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7417:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7408:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7431:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7408:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "7408:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 606,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7464:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7468:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7464:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 603,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "7446:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7459:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7446:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7446:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "7446:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 611,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7507:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7511:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7507:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 610,
                      "name": "PasienTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "7491:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7491:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "EmitStatement",
                  "src": "7486:32:0"
                }
              ]
            },
            "functionSelector": "334181f2",
            "id": 616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selfRegisterPasien",
            "nameLocation": "7288:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7306:2:0"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7316:0:0"
            },
            "scope": 971,
            "src": "7279:247:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 643,
              "nodeType": "Block",
              "src": "7630:174:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 623,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "7645:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 624,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "7654:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7645:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 628,
                  "nodeType": "IfStatement",
                  "src": "7641:34:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "41646d696e",
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7668:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a729ef4e25027bc652fc8b5c4d1d902947361fa7c8e7b4905e877823f27331b3",
                        "typeString": "literal_string \"Admin\""
                      },
                      "value": "Admin"
                    },
                    "functionReturnParameters": 622,
                    "id": 627,
                    "nodeType": "Return",
                    "src": "7661:14:0"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 629,
                      "name": "isDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "7690:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 631,
                    "indexExpression": {
                      "id": 630,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "7699:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7690:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 634,
                  "nodeType": "IfStatement",
                  "src": "7686:36:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "446f6b746572",
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7714:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ed409fc39e86bba01e2f3ce892f3153d258f5daf56a4904da0fb72c6ff04a7d8",
                        "typeString": "literal_string \"Dokter\""
                      },
                      "value": "Dokter"
                    },
                    "functionReturnParameters": 622,
                    "id": 633,
                    "nodeType": "Return",
                    "src": "7707:15:0"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 635,
                      "name": "isPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "7737:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 637,
                    "indexExpression": {
                      "id": 636,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "7746:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7737:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 640,
                  "nodeType": "IfStatement",
                  "src": "7733:36:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "50617369656e",
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7761:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6383b0bd00903b5c3a202742c52694704f8578001e3c3fd193167fcaac2674db",
                        "typeString": "literal_string \"Pasien\""
                      },
                      "value": "Pasien"
                    },
                    "functionReturnParameters": 622,
                    "id": 639,
                    "nodeType": "Return",
                    "src": "7754:15:0"
                  }
                },
                {
                  "expression": {
                    "hexValue": "556e6b6e6f776e",
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7787:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ff165d3fe0272c13129fc9e1aecd998364a5fdcad04c6ae84a7d1dfc3d06a17",
                      "typeString": "literal_string \"Unknown\""
                    },
                    "value": "Unknown"
                  },
                  "functionReturnParameters": 622,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "7780:16:0"
                }
              ]
            },
            "functionSelector": "27820851",
            "id": 644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRole",
            "nameLocation": "7567:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "7587:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "7579:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7579:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7578:15:0"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "7615:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7615:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7614:15:0"
            },
            "scope": 971,
            "src": "7558:246:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "7960:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 652,
                      "name": "rekamMedisByPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "7978:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 654,
                    "indexExpression": {
                      "id": 653,
                      "name": "pasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "7997:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7978:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 651,
                  "id": 655,
                  "nodeType": "Return",
                  "src": "7971:33:0"
                }
              ]
            },
            "functionSelector": "c967ede8",
            "id": 657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRekamMedisIdsByPasien",
            "nameLocation": "7867:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "7910:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "7902:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7902:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7891:32:0"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "7945:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 648,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "7945:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 649,
                    "nodeType": "ArrayTypeName",
                    "src": "7945:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7944:15:0"
            },
            "scope": 971,
            "src": "7858:154:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "8120:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 663,
                    "name": "daftarPasien",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "8138:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 662,
                  "id": 664,
                  "nodeType": "Return",
                  "src": "8131:19:0"
                }
              ]
            },
            "functionSelector": "51887b67",
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDaftarPasien",
            "nameLocation": "8063:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8078:2:0"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "8102:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 659,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8102:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 660,
                    "nodeType": "ArrayTypeName",
                    "src": "8102:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8101:18:0"
            },
            "scope": 971,
            "src": "8054:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "8320:174:0",
              "statements": [
                {
                  "assignments": [
                    677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 677,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "8345:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 697,
                      "src": "8331:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 675,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8331:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 676,
                        "nodeType": "ArrayTypeName",
                        "src": "8331:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 681,
                  "initialValue": {
                    "baseExpression": {
                      "id": 678,
                      "name": "rekamMedisByPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "8351:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 680,
                    "indexExpression": {
                      "id": 679,
                      "name": "_pasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "8370:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8351:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8331:47:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 682,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "8393:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8397:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8393:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8407:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8393:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 689,
                  "nodeType": "IfStatement",
                  "src": "8389:57:0",
                  "trueBody": {
                    "id": 688,
                    "nodeType": "Block",
                    "src": "8410:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "",
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8432:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "functionReturnParameters": 672,
                        "id": 687,
                        "nodeType": "Return",
                        "src": "8425:9:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 690,
                        "name": "rekamMedis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "8463:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$63_storage_$",
                          "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                        }
                      },
                      "id": 694,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 691,
                          "name": "ids",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "8474:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 693,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8478:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8474:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8463:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$63_storage",
                        "typeString": "struct RekamMedis.RekamMedisData storage ref"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8482:4:0",
                    "memberName": "nama",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 40,
                    "src": "8463:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 672,
                  "id": 696,
                  "nodeType": "Return",
                  "src": "8456:30:0"
                }
              ]
            },
            "functionSelector": "ae28c7a9",
            "id": 698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNamaPasien",
            "nameLocation": "8237:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "8269:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "8261:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8261:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8250:33:0"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "8305:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8305:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8304:15:0"
            },
            "scope": 971,
            "src": "8228:266:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 713,
              "nodeType": "Block",
              "src": "8580:78:0",
              "statements": [
                {
                  "expression": {
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 705,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "8591:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 706,
                      "name": "_newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "8599:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8591:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "8591:17:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 710,
                        "name": "_newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8640:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 709,
                      "name": "AdminDitetapkan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "8624:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8624:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "EmitStatement",
                  "src": "8619:31:0"
                }
              ]
            },
            "functionSelector": "704b6c02",
            "id": 714,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 703,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 702,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "8569:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "8569:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8569:10:0"
              }
            ],
            "name": "setAdmin",
            "nameLocation": "8534:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "_newAdmin",
                  "nameLocation": "8551:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 714,
                  "src": "8543:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8543:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8542:19:0"
            },
            "returnParameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8580:0:0"
            },
            "scope": 971,
            "src": "8525:133:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 820,
              "nodeType": "Block",
              "src": "9139:1572:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 742,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9172:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9176:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9172:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 744,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 716,
                            "src": "9186:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9172:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 746,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9197:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9201:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9197:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 748,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "9211:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9197:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9172:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612070617369656e20617461752061646d696e2079616e672062697361206d656e616d6261682072656b616d206d656469732e",
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9231:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4247971d2744700286c60be19a687734902c836535c0b440cdf2974dee2b31f",
                          "typeString": "literal_string \"Hanya pasien atau admin yang bisa menambah rekam medis.\""
                        },
                        "value": "Hanya pasien atau admin yang bisa menambah rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4247971d2744700286c60be19a687734902c836535c0b440cdf2974dee2b31f",
                          "typeString": "literal_string \"Hanya pasien atau admin yang bisa menambah rekam medis.\""
                        }
                      ],
                      "id": 741,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9150:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9150:149:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "9150:149:0"
                },
                {
                  "expression": {
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "9312:17:0",
                    "subExpression": {
                      "id": 754,
                      "name": "rekamMedisCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "9312:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "9312:17:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 757,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9346:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9350:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9346:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 759,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "9360:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9346:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 804,
                    "nodeType": "Block",
                    "src": "10035:527:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 783,
                              "name": "rekamMedis",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "10110:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$63_storage_$",
                                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                              }
                            },
                            "id": 785,
                            "indexExpression": {
                              "id": 784,
                              "name": "rekamMedisCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "10121:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10110:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RekamMedisData_$63_storage",
                              "typeString": "struct RekamMedis.RekamMedisData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 787,
                                "name": "rekamMedisCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "10173:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 788,
                                "name": "_pasien",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 716,
                                "src": "10207:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 789,
                                "name": "_nama",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 718,
                                "src": "10233:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 790,
                                "name": "_umur",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 720,
                                "src": "10257:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 791,
                                "name": "_golonganDarah",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 722,
                                "src": "10281:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 792,
                                "name": "_tanggalLahir",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "10314:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 793,
                                "name": "_gender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 726,
                                "src": "10346:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 794,
                                "name": "_alamat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 728,
                                "src": "10372:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 795,
                                "name": "_noTelepon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 730,
                                "src": "10398:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 796,
                                "name": "_email",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "10427:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 797,
                                "name": "_diagnosa",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 734,
                                "src": "10452:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 798,
                                "name": "_foto",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 736,
                                "src": "10480:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 799,
                                "name": "_catatan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 738,
                                "src": "10504:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10531:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 786,
                              "name": "RekamMedisData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "10140:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_RekamMedisData_$63_storage_ptr_$",
                                "typeString": "type(struct RekamMedis.RekamMedisData storage pointer)"
                              }
                            },
                            "id": 801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10140:410:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RekamMedisData_$63_memory_ptr",
                              "typeString": "struct RekamMedis.RekamMedisData memory"
                            }
                          },
                          "src": "10110:440:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RekamMedisData_$63_storage",
                            "typeString": "struct RekamMedis.RekamMedisData storage ref"
                          }
                        },
                        "id": 803,
                        "nodeType": "ExpressionStatement",
                        "src": "10110:440:0"
                      }
                    ]
                  },
                  "id": 805,
                  "nodeType": "IfStatement",
                  "src": "9342:1220:0",
                  "trueBody": {
                    "id": 782,
                    "nodeType": "Block",
                    "src": "9367:662:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 761,
                              "name": "rekamMedis",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "9457:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$63_storage_$",
                                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                              }
                            },
                            "id": 763,
                            "indexExpression": {
                              "id": 762,
                              "name": "rekamMedisCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "9468:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9457:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RekamMedisData_$63_storage",
                              "typeString": "struct RekamMedis.RekamMedisData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 765,
                                "name": "rekamMedisCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "9520:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 766,
                                "name": "_pasien",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 716,
                                "src": "9554:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 767,
                                "name": "_nama",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 718,
                                "src": "9580:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9604:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "",
                                "id": 769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9640:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9685:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9729:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9767:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9805:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9846:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9883:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9923:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9959:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "74727565",
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9998:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 764,
                              "name": "RekamMedisData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "9487:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_RekamMedisData_$63_storage_ptr_$",
                                "typeString": "type(struct RekamMedis.RekamMedisData storage pointer)"
                              }
                            },
                            "id": 779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9487:530:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RekamMedisData_$63_memory_ptr",
                              "typeString": "struct RekamMedis.RekamMedisData memory"
                            }
                          },
                          "src": "9457:560:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RekamMedisData_$63_storage",
                            "typeString": "struct RekamMedis.RekamMedisData storage ref"
                          }
                        },
                        "id": 781,
                        "nodeType": "ExpressionStatement",
                        "src": "9457:560:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 810,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "10607:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 806,
                          "name": "rekamMedisByPasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "10574:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 808,
                        "indexExpression": {
                          "id": 807,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 716,
                          "src": "10593:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10574:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10602:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "10574:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10574:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "10574:49:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 814,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "10661:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 815,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "10678:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 816,
                        "name": "_diagnosa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "10687:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10698:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 813,
                      "name": "RekamMedisDitambahkan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "10639:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,string memory,bool)"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10639:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 819,
                  "nodeType": "EmitStatement",
                  "src": "10634:69:0"
                }
              ]
            },
            "functionSelector": "68f5dc99",
            "id": 821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tambahRekamMedis",
            "nameLocation": "8727:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "8762:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "8754:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8754:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "8794:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "8780:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8780:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 720,
                  "mutability": "mutable",
                  "name": "_umur",
                  "nameLocation": "8815:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "8810:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8810:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "_golonganDarah",
                  "nameLocation": "8845:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "8831:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8831:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "_tanggalLahir",
                  "nameLocation": "8884:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "8870:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8870:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "_gender",
                  "nameLocation": "8922:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "8908:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8908:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "_alamat",
                  "nameLocation": "8954:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "8940:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8940:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "_noTelepon",
                  "nameLocation": "8986:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "8972:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8972:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "_email",
                  "nameLocation": "9021:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "9007:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9007:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "_diagnosa",
                  "nameLocation": "9052:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "9038:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9038:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "_foto",
                  "nameLocation": "9086:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "9072:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "_catatan",
                  "nameLocation": "9116:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "9102:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9102:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8743:388:0"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9139:0:0"
            },
            "scope": 971,
            "src": "8718:1993:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "11225:560:0",
              "statements": [
                {
                  "assignments": [
                    856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 856,
                      "mutability": "mutable",
                      "name": "rekam",
                      "nameLocation": "11259:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 940,
                      "src": "11236:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData"
                      },
                      "typeName": {
                        "id": 855,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 854,
                          "name": "RekamMedisData",
                          "nameLocations": [
                            "11236:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63,
                          "src": "11236:14:0"
                        },
                        "referencedDeclaration": 63,
                        "src": "11236:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 860,
                  "initialValue": {
                    "baseExpression": {
                      "id": 857,
                      "name": "rekamMedis",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "11267:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$63_storage_$",
                        "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                      }
                    },
                    "id": 859,
                    "indexExpression": {
                      "id": 858,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 823,
                      "src": "11278:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11267:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RekamMedisData_$63_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11236:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 865,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11322:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 861,
                          "name": "rekamMedisVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "11293:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$63_storage_$dyn_storage_$",
                            "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref[] storage ref)"
                          }
                        },
                        "id": 863,
                        "indexExpression": {
                          "id": 862,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "11312:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11293:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$63_storage_$dyn_storage",
                          "typeString": "struct RekamMedis.RekamMedisData storage ref[] storage ref"
                        }
                      },
                      "id": 864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11317:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "11293:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_RekamMedisData_$63_storage_$dyn_storage_ptr_$_t_struct$_RekamMedisData_$63_storage_$returns$__$attached_to$_t_array$_t_struct$_RekamMedisData_$63_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct RekamMedis.RekamMedisData storage ref[] storage pointer,struct RekamMedis.RekamMedisData storage ref)"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11293:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "11293:35:0"
                },
                {
                  "expression": {
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 868,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11339:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 870,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11345:4:0",
                      "memberName": "nama",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "11339:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 871,
                      "name": "_nama",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "11352:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11339:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "11339:18:0"
                },
                {
                  "expression": {
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 874,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11368:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 876,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11374:4:0",
                      "memberName": "umur",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "11368:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 877,
                      "name": "_umur",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "11381:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11368:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "11368:18:0"
                },
                {
                  "expression": {
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 880,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11397:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 882,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11403:13:0",
                      "memberName": "golonganDarah",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "11397:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 883,
                      "name": "_golonganDarah",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "11419:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11397:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "11397:36:0"
                },
                {
                  "expression": {
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 886,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11444:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11450:12:0",
                      "memberName": "tanggalLahir",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "11444:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 889,
                      "name": "_tanggalLahir",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "11465:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11444:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 891,
                  "nodeType": "ExpressionStatement",
                  "src": "11444:34:0"
                },
                {
                  "expression": {
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 892,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11489:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 894,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11495:6:0",
                      "memberName": "gender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "11489:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 895,
                      "name": "_gender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "11504:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11489:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "11489:22:0"
                },
                {
                  "expression": {
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 898,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11522:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11528:6:0",
                      "memberName": "alamat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "11522:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 901,
                      "name": "_alamat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "11537:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11522:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "11522:22:0"
                },
                {
                  "expression": {
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 904,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11555:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 906,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11561:9:0",
                      "memberName": "noTelepon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "11555:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 907,
                      "name": "_noTelepon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "11573:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11555:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "11555:28:0"
                },
                {
                  "expression": {
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 910,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11594:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11600:5:0",
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "11594:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 913,
                      "name": "_email",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "11608:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11594:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "11594:20:0"
                },
                {
                  "expression": {
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 916,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11625:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 918,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11631:8:0",
                      "memberName": "diagnosa",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "11625:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 919,
                      "name": "_diagnosa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "11642:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11625:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "11625:26:0"
                },
                {
                  "expression": {
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 922,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11662:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 924,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11668:4:0",
                      "memberName": "foto",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "11662:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 925,
                      "name": "_foto",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "11675:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11662:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "11662:18:0"
                },
                {
                  "expression": {
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 928,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "11691:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11697:7:0",
                      "memberName": "catatan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "11691:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 931,
                      "name": "_catatan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 845,
                      "src": "11707:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11691:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "11691:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 935,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 823,
                        "src": "11752:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 936,
                        "name": "_diagnosa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "11757:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 937,
                        "name": "_catatan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "11768:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 934,
                      "name": "RekamMedisDiperbarui",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "11731:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory)"
                      }
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11731:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 939,
                  "nodeType": "EmitStatement",
                  "src": "11726:51:0"
                }
              ]
            },
            "functionSelector": "f7dc5714",
            "id": 941,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 848,
                        "name": "rekamMedis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "11201:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$63_storage_$",
                          "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                        }
                      },
                      "id": 850,
                      "indexExpression": {
                        "id": 849,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 823,
                        "src": "11212:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11201:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$63_storage",
                        "typeString": "struct RekamMedis.RekamMedisData storage ref"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11217:6:0",
                    "memberName": "pasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 38,
                    "src": "11201:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 852,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 847,
                  "name": "hanyaDokterAktifUntukPasien",
                  "nameLocations": [
                    "11173:27:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 197,
                  "src": "11173:27:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11173:51:0"
              }
            ],
            "name": "updateRekamMedis",
            "nameLocation": "10768:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "10800:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "10795:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10795:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "10828:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "10814:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10814:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "_umur",
                  "nameLocation": "10849:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "10844:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10844:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "_golonganDarah",
                  "nameLocation": "10879:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "10865:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10865:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "_tanggalLahir",
                  "nameLocation": "10918:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "10904:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10904:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "_gender",
                  "nameLocation": "10956:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "10942:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10942:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "_alamat",
                  "nameLocation": "10988:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "10974:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10974:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "_noTelepon",
                  "nameLocation": "11020:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "11006:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11006:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "_email",
                  "nameLocation": "11055:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "11041:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11041:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "_diagnosa",
                  "nameLocation": "11086:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "11072:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11072:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "_foto",
                  "nameLocation": "11120:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "11106:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11106:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "_catatan",
                  "nameLocation": "11150:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "11136:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11136:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10784:381:0"
            },
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11225:0:0"
            },
            "scope": 971,
            "src": "10759:1026:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 954,
              "nodeType": "Block",
              "src": "11941:49:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 950,
                      "name": "rekamMedisVersions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "11959:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$63_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref[] storage ref)"
                      }
                    },
                    "id": 952,
                    "indexExpression": {
                      "id": 951,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "11978:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11959:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$63_storage_$dyn_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 949,
                  "id": 953,
                  "nodeType": "Return",
                  "src": "11952:30:0"
                }
              ]
            },
            "functionSelector": "d6887802",
            "id": 955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRekamMedisVersions",
            "nameLocation": "11847:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "11884:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "11879:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11879:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11868:26:0"
            },
            "returnParameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "11916:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$63_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct RekamMedis.RekamMedisData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 946,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 945,
                        "name": "RekamMedisData",
                        "nameLocations": [
                          "11916:14:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 63,
                        "src": "11916:14:0"
                      },
                      "referencedDeclaration": 63,
                      "src": "11916:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$63_storage_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData"
                      }
                    },
                    "id": 947,
                    "nodeType": "ArrayTypeName",
                    "src": "11916:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$63_storage_$dyn_storage_ptr",
                      "typeString": "struct RekamMedis.RekamMedisData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11915:25:0"
            },
            "scope": 971,
            "src": "11838:152:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 969,
              "nodeType": "Block",
              "src": "12097:48:0",
              "statements": [
                {
                  "expression": {
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 962,
                          "name": "rekamMedis",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "12108:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$63_storage_$",
                            "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                          }
                        },
                        "id": 964,
                        "indexExpression": {
                          "id": 963,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 957,
                          "src": "12119:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12108:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$63_storage",
                          "typeString": "struct RekamMedis.RekamMedisData storage ref"
                        }
                      },
                      "id": 965,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12124:5:0",
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "12108:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12132:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "12108:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 968,
                  "nodeType": "ExpressionStatement",
                  "src": "12108:29:0"
                }
              ]
            },
            "functionSelector": "083d8824",
            "id": 970,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 960,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 959,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "12086:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "12086:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12086:10:0"
              }
            ],
            "name": "nonaktifkanRekamMedis",
            "nameLocation": "12047:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "12074:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 970,
                  "src": "12069:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12069:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12068:10:0"
            },
            "returnParameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12097:0:0"
            },
            "scope": 971,
            "src": "12038:107:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 972,
        "src": "69:12079:0",
        "usedErrors": []
      }
    ],
    "src": "33:12117:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x50d7A9e65436317684cB1E321ff4FC8002855Ad7",
      "transactionHash": "0x0ad7ea96e8a8fb5a80444ca10e3290606adc9e45a4142eb3acdec76da76ed3bc"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-05-21T19:46:04.885Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}