{
  "contractName": "RekamMedis",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminDitetapkan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        }
      ],
      "name": "DokterStatusDiubah",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "nama",
          "type": "string"
        }
      ],
      "name": "DokterTerdaftar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "PasienDiassignKeDokter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "PasienTerdaftar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        }
      ],
      "name": "RekamMedisDiperbarui",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "RekamMedisDitambahkan",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "daftarDokter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "daftarPasien",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dataDokter",
      "outputs": [
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDokter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPasien",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedis",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedisByPasien",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rekamMedisCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedisVersions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        }
      ],
      "name": "registerDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDokter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getDokterByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_aktif",
          "type": "bool"
        }
      ],
      "name": "setStatusDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "assignPasienToDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "isPasienAssignedToDokter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        }
      ],
      "name": "getAssignedPasienByDokter",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        }
      ],
      "name": "getDokter",
      "outputs": [
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        },
        {
          "internalType": "address[]",
          "name": "pasien",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "registerPasien",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "selfRegisterPasien",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserRole",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "getRekamMedisIdsByPasien",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDaftarPasien",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "getNamaPasien",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_catatan",
          "type": "string"
        }
      ],
      "name": "tambahRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_catatan",
          "type": "string"
        }
      ],
      "name": "updateRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRekamMedisVersions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pasien",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "nama",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "umur",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "golonganDarah",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tanggalLahir",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "gender",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "alamat",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "noTelepon",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "diagnosa",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "foto",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "catatan",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ],
          "internalType": "struct RekamMedis.RekamMedisData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "nonaktifkanRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminDitetapkan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"}],\"name\":\"DokterStatusDiubah\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"}],\"name\":\"DokterTerdaftar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"PasienDiassignKeDokter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"PasienTerdaftar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"}],\"name\":\"RekamMedisDiperbarui\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"RekamMedisDitambahkan\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"assignPasienToDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daftarDokter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daftarPasien\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dataDokter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"}],\"name\":\"getAssignedPasienByDokter\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDaftarPasien\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"}],\"name\":\"getDokter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"pasien\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDokterByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"getNamaPasien\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"getRekamMedisIdsByPasien\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRekamMedisVersions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"internalType\":\"struct RekamMedis.RekamMedisData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserRole\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDokter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPasien\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"isPasienAssignedToDokter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"nonaktifkanRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"}],\"name\":\"registerDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"registerPasien\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedisByPasien\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rekamMedisCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedisVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selfRegisterPasien\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_aktif\",\"type\":\"bool\"}],\"name\":\"setStatusDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_catatan\",\"type\":\"string\"}],\"name\":\"tambahRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDokter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_catatan\",\"type\":\"string\"}],\"name\":\"updateRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RekamMedis.sol\":\"RekamMedis\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/RekamMedis.sol\":{\"keccak256\":\"0x6a3804a0b35ebb7fd34ad11c08a9aaa34816421afaa5901514928b3ac2157083\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://519630c8fd0c10d268181cf870418bb6683a664f4bfa879bd10ef805d5e45743\",\"dweb:/ipfs/QmP5nEC64Zj5fNFtwrAqSVx3vwYxywgFzc5PBYbS7fYdp3\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "69:10675:0:-:0;;;;;;;1666:18;69:10675;;-1:-1:-1;;;;;;69:10675:0;1674:10;69:10675;;;;;;;;;;;;;",
  "deployedSourceMap": "69:10675:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;;;9797:10;69:10675;;;;;;;;;;;9797:22;69:10675;;2231:10;69:10675;;2222:8;69:10675;;;;;;;;2222:52;;;69:10675;;;;2388:45;2231:10;;2388:45;:::i;:::-;69:10675;;;;;;;9797:10;69:10675;;;;;;9889:18;69:10675;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;9935:10;;69:10675;9935:10;69:10675;2222:8;9935:10;;69:10675;;:::i;:::-;2222:8;9935:10;;69:10675;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2222:8;9935:10;;69:10675;;;;;9964:10;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;9993:19;;69:10675;9993:19;69:10675;;9993:19;;69:10675;;:::i;:::-;;9993:19;;69:10675;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9993:19;;69:10675;;;;;-1:-1:-1;;;;;69:10675:0;;;;10040:18;;69:10675;10040:18;69:10675;10040:18;;;69:10675;;:::i;:::-;10040:18;;;69:10675;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10040:18;;;69:10675;;;;;-1:-1:-1;;;;;69:10675:0;;;;10085:12;;69:10675;10085:12;69:10675;9797:10;10085:12;;69:10675;;:::i;:::-;9797:10;10085:12;;69:10675;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9797:10;10085:12;;69:10675;;;;;-1:-1:-1;;;;;69:10675:0;;;;10118:12;;69:10675;10118:12;69:10675;10118:12;;;69:10675;;:::i;:::-;10118:12;;;69:10675;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10118:12;;;69:10675;;;;;-1:-1:-1;;;;;69:10675:0;;;;10151:15;;69:10675;10151:15;69:10675;10151:15;;;69:10675;;:::i;:::-;10151:15;;;69:10675;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10151:15;;;69:10675;;;;;-1:-1:-1;;;;;69:10675:0;;;;10190:11;;69:10675;10190:11;69:10675;9889:18;10190:11;;69:10675;;:::i;:::-;9889:18;10190:11;;69:10675;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9889:18;10190:11;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;10221:14;69:10675;10221:14;;;69:10675;;:::i;:::-;10221:14;;;69:10675;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10221:14;;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;10258:10;69:10675;10258:10;;;69:10675;;:::i;:::-;10258:10;;;69:10675;:::i;:::-;;;;;;;;;;;10287:13;69:10675;;;;;;;;;;;;;;;;;;;;;;;10258:10;;;69:10675;;10287:13;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;10327:46;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;10327:46;;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10327:46;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;10258:10;;;69:10675;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;10287:13;69:10675;;;;;;;;;;;;;;;;;;;10258:10;;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10221:14;;;;;69:10675;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;10221:14;;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;10190:11;;9889:18;10190:11;;69:10675;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;9889:18;10190:11;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;10151:15;;;;;69:10675;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;10151:15;;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;10118:12;;;;;69:10675;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;10118:12;;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;10085:12;;9797:10;10085:12;;69:10675;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;9797:10;10085:12;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;10040:18;;;;;69:10675;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;10040:18;;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;9993:19;;69:10675;9993:19;;69:10675;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;9993:19;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;9935:10;;2222:8;9935:10;;69:10675;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;2222:8;9935:10;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;2222:8;69:10675;;2222:8;69:10675;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;9797:10;69:10675;;9797:10;69:10675;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;9889:18;69:10675;;9889:18;69:10675;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;2222:52;69:10675;;;;;;;;;2246:28;69:10675;;2222:52;;69:10675;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;1077:59;69:10675;;;;;;;;1077:59;;;;;;;;:::i;:::-;-1:-1:-1;69:10675:0;;;1077:59;;69:10675;-1:-1:-1;;;;;69:10675:0;;;;1077:59;;;;;:::i;:::-;;69:10675;1077:59;;69:10675;1077:59;69:10675;1077:59;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;69:10675;1077:59;;;;;;:::i;:::-;;;69:10675;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10555:18;69:10675;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;:::i;:::-;;;;6574:18;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;-1:-1:-1;;;;;69:10675:0;;:::i;:::-;;;;;;;;;;;;;233:44;;;:::i;:::-;;;69:10675;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;890:49;69:10675;;;;;;;;890:49;;69:10675;-1:-1:-1;;;;;69:10675:0;;;;890:49;;;;;:::i;69:10675::-;;;;;;-1:-1:-1;;69:10675:0;;;;;;:::i;:::-;;;;;;;;;;;;;3757:35;69:10675;3707:34;69:10675;;;;;;;;1775:110;69:10675;;;;1797:10;:19;1775:110;:::i;:::-;69:10675;;;;;3651:8;69:10675;;3643:53;69:10675;;;;;;3643:53;:::i;:::-;69:10675;;;;;;;;;;3707:25;69:10675;;;;;;;;;;;;;;;3707:34;69:10675;;;;;;;;;3757:35;69:10675;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;7220:26;69:10675;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;1775:110;1797:10;69:10675;;;1797:19;1775:110;:::i;:::-;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;7220:26;69:10675;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;:::i;:::-;;7768:10;-1:-1:-1;;;;;69:10675:0;;7768:21;:44;;;;69:10675;;;;7908:17;;69:10675;7908:17;:::i;:::-;69:10675;;7908:17;69:10675;;;;;;;;;7768:10;7942:19;7938:1220;69:10675;;;;;;;;;;;;7908:17;69:10675;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;8083:530;;69:10675;;8083:530;;;69:10675;;;;-1:-1:-1;69:10675:0;8083:530;;69:10675;;;;;:::i;:::-;;;;;8083:530;;69:10675;;;;;;:::i;:::-;;;;;8083:530;;69:10675;;;;;;:::i;:::-;;;;;8083:530;;69:10675;;;;;;:::i;:::-;;;;;8083:530;;69:10675;;;;;;:::i;:::-;;;;;8083:530;;69:10675;;;;;;:::i;:::-;;;;;8083:530;;69:10675;;;;;;:::i;:::-;;;;;8083:530;;69:10675;;;;;;:::i;:::-;;;;;8083:530;;69:10675;;;;;;:::i;:::-;;;;;8083:530;;69:10675;;8083:530;;;69:10675;;;8053:10;69:10675;;;;;;;;;;;;;;;;;;;8083:530;;69:10675;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;8083:530;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;;69:10675;;;;;;8083:530;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;8053:10;69:10675;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;7908:17;69:10675;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;8083:530;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;69:10675;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;9170:18;69:10675;;;;;7908:17;69:10675;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;9235:64;69:10675;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7908:17;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;9235:64;;;69:10675;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:530;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7938:1220;69:10675;;;;;;:::i;:::-;;;;;;;;;;;;8736:410;;69:10675;;8736:410;;69:10675;;;;8736:410;;69:10675;;8736:410;;69:10675;;8736:410;;69:10675;;8736:410;;69:10675;;8736:410;;69:10675;;8736:410;;69:10675;;8736:410;;69:10675;8736:410;69:10675;8736:410;;69:10675;;8736:410;;69:10675;;8736:410;;69:10675;;8736:410;;;69:10675;;;8706:10;69:10675;;;;;;;;;;;;;;;;;;;8736:410;;69:10675;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;8736:410;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;;69:10675;;;;;;8736:410;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;8706:10;69:10675;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;7908:17;69:10675;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;;69:10675;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;;69:10675;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;:::i;:::-;;;;;;;;;;;;8736:410;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;69:10675;;;;;;;;;;;;;;;;;;;;;7938:1220;;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8736:410;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;7768:44;-1:-1:-1;69:10675:0;;-1:-1:-1;;;;;69:10675:0;7768:10;7793:19;7768:44;;69:10675;;;;;;-1:-1:-1;;69:10675:0;;;;;;446:29;69:10675;446:29;;;;;;69:10675;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;-1:-1:-1;;;;;69:10675:0;;:::i;:::-;;;;284:40;69:10675;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;6734:12;69:10675;;;;;;;;;6734:12;69:10675;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;380:29;;;;;;69:10675;380:29;;:::i;:::-;69:10675;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;-1:-1:-1;;;;;69:10675:0;;:::i;:::-;;;;;;;;;;;;;;5309:7;;69:10675;;;5318:16;69:10675;;;:::i;:::-;5318:16;;69:10675;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:10675:0;;;;-1:-1:-1;;;;;69:10675:0;;:::i;:::-;;;;;4958:8;69:10675;;4950:53;69:10675;;;;;;4950:53;:::i;:::-;69:10675;;;;;;;4958:8;69:10675;;;5021:34;69:10675;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:10675:0;;;;5941:10;69:10675;;;;;;;;;;;;;5941:10;69:10675;;;;;;;;6027:4;69:10675;;;;;;;;6042:29;5941:10;6042:29;:::i;:::-;6087:27;69:10675;;;5941:10;69:10675;;6087:27;69:10675;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;1007:27;69:10675;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;69:10675:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;1775:110;69:10675;;;;1797:10;:19;1775:110;:::i;:::-;69:10675;;;;;;;3934:8;69:10675;;3926:53;69:10675;;;;;;3926:53;:::i;:::-;69:10675;;;;;;;;;;;;;;;;;;;;;;;;3934:8;69:10675;;;4087:34;4137:10;69:10675;;;;4132:200;4149:23;;;;;;69:10675;-1:-1:-1;;;69:10675:0;;;;;;;4384:40;69:10675;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;4384:40;69:10675;4174:3;4220:15;;;;;;:::i;:::-;69:10675;;;;;;;4220:26;69:10675;;4174:3;;;:::i;:::-;4137:10;;69:10675;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;-1:-1:-1;;;;;69:10675:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;:::i;:::-;;1775:110;69:10675;;;;;;;;1797:10;:19;1775:110;:::i;:::-;-1:-1:-1;;;;;69:10675:0;;;;;;2850:8;69:10675;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;2850:8;69:10675;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;3043:118;;69:10675;;;;;3043:118;;69:10675;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2850:8;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3043:118;;69:10675;;;;;-1:-1:-1;;;;;69:10675:0;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3214:31;69:10675;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;69:10675:0;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;;;2850:8;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;1775:110;69:10675;;;;;;;;1797:10;:19;1775:110;:::i;:::-;69:10675;;;;;;10704:10;69:10675;;;;;10704:21;;69:10675;;-1:-1:-1;;69:10675:0;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;;3449:27;;69:10675;;;3524:19;69:10675;3524:19;;:::i;69:10675::-;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1775:110;69:10675;;;;1797:10;:19;1775:110;:::i;:::-;69:10675;;;;;5562:8;69:10675;;;;;;;;;;;;;;;;;;;;;;;;5733:26;5775:24;69:10675;;;;;;;;;;;;;;;;;;;5733:26;:::i;:::-;69:10675;;;;;5775:24;69:10675;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;:::i;:::-;-1:-1:-1;;;;;69:10675:0;;;;;946:52;69:10675;;;;;;;;;;;946:52;;;;;69:10675;946:52;;;;:::i;:::-;69:10675;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;69:10675:0;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;69:10675:0;;;;-1:-1:-1;69:10675:0;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;-1:-1:-1;69:10675:0;;;-1:-1:-1;69:10675:0;:::o;:::-;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;69:10675:0;;;;-1:-1:-1;69:10675:0;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;69:10675:0;;;-1:-1:-1;69:10675:0;;;;;-1:-1:-1;69:10675:0;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;69:10675:0;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;69:10675:0;;;;;5733:12;69:10675;-1:-1:-1;;;69:10675:0;;;;;;;;;5733:12;69:10675;;;;;;5733:12;-1:-1:-1;69:10675:0;;;;;-1:-1:-1;;;;;;69:10675:0;-1:-1:-1;;;;;69:10675:0;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;69:10675:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:10675:0;;;;;;;:::o;:::-;;;;;;;;;;;;4440:384;69:10675;;;;;;;;-1:-1:-1;69:10675:0;;;;;;4602:34;69:10675;-1:-1:-1;69:10675:0;4602:34;-1:-1:-1;69:10675:0;;;4647:147;4664:21;;;;;;4804:12;;;;;;-1:-1:-1;4440:384:0;:::o;4687:3::-;4711:13;;;;;:::i;:::-;69:10675;;;;;;;;;;;4711:24;4707:76;;4687:3;;;:::i;:::-;4652:10;;4707:76;4756:11;;;;;;;:::o;69:10675::-;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;-1:-1:-1;69:10675:0;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;6154:246;6250:5;69:10675;-1:-1:-1;;;;;69:10675:0;;;;;6241:14;;6237:34;;69:10675;6250:5;69:10675;6286:8;69:10675;;;;6250:5;69:10675;;;6282:36;;6250:5;69:10675;6333:8;69:10675;;;;6250:5;69:10675;;;6329:36;;69:10675;;;;;:::i;:::-;;;;-1:-1:-1;;;69:10675:0;;;;6154:246;:::o;6329:36::-;69:10675;;;;;:::i;:::-;;;;-1:-1:-1;;;69:10675:0;;;;6350:15;:::o;6282:36::-;69:10675;;;;;;:::i;:::-;;;;-1:-1:-1;;;69:10675:0;;;;6303:15;:::o;6237:34::-;69:10675;;;;;;:::i;:::-;;;;-1:-1:-1;;;69:10675:0;;;;6257:14;:::o;6824:266::-;-1:-1:-1;;;;;69:10675:0;-1:-1:-1;69:10675:0;;;6947:18;69:10675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;:::i;:::-;;;6989:15;6985:57;;69:10675;;;;;;7059:10;:23;69:10675;;;;;;;;7059:23;69:10675;:::i;:::-;6824:266;:::o;69:10675::-;-1:-1:-1;;;69:10675:0;;;;;;;;6985:57;69:10675;;;;;;;;;:::i;:::-;;;7021:9;:::o;69:10675::-;;;;;;;;;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;69:10675:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;69:10675:0;;;;;;;;;;;;;;;;;;-1:-1:-1;69:10675:0;-1:-1:-1;;69:10675:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract RekamMedis {\r\n    address public admin;\r\n\r\n    struct Dokter {\r\n        string nama;\r\n        bool aktif;\r\n        address[] assignedPasien;\r\n    }\r\n\r\n    mapping(address => Dokter) public dataDokter;\r\n    mapping(address => bool) public isDokter;\r\n    mapping(address => bool) public isPasien;\r\n\r\n    address[] public daftarDokter; // daftar semua alamat dokter\r\n    address[] public daftarPasien; // daftar semua alamat pasien\r\n\r\n    struct RekamMedisData {\r\n        uint id;\r\n        address pasien;\r\n        string nama;\r\n        uint umur;\r\n        string golonganDarah;\r\n        string tanggalLahir;\r\n        string gender;\r\n        string alamat;\r\n        string noTelepon;\r\n        string email;\r\n        string diagnosa;\r\n        string foto;\r\n        string catatan;\r\n        bool valid;\r\n    }\r\n\r\n    mapping(uint => RekamMedisData) public rekamMedis;\r\n    mapping(address => uint[]) public rekamMedisByPasien;\r\n\r\n    uint public rekamMedisCount;\r\n\r\n    // Versi history rekam medis\r\n    mapping(uint => RekamMedisData[]) public rekamMedisVersions;\r\n\r\n    // Events\r\n    event RekamMedisDitambahkan(\r\n        uint id,\r\n        address pasien,\r\n        string diagnosa,\r\n        bool valid\r\n    );\r\n    event RekamMedisDiperbarui(uint id, string diagnosa, string catatan);\r\n    event AdminDitetapkan(address newAdmin);\r\n    event DokterTerdaftar(address dokter, string nama);\r\n    event DokterStatusDiubah(address dokter, bool aktif);\r\n    event PasienDiassignKeDokter(address dokter, address pasien);\r\n    event PasienTerdaftar(address pasien);\r\n\r\n    constructor() {\r\n        admin = msg.sender; // Set pembuat kontrak sebagai admin awal\r\n    }\r\n\r\n    modifier hanyaAdmin() {\r\n        require(\r\n            msg.sender == admin,\r\n            \"Hanya admin yang bisa melakukan aksi ini.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaDokterAktif() {\r\n        require(\r\n            isDokter[msg.sender] && dataDokter[msg.sender].aktif,\r\n            \"Hanya dokter aktif yang bisa memperbarui rekam medis.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaDokterAktifUntukPasien(address _pasien) {\r\n        require(\r\n            isDokter[msg.sender] && dataDokter[msg.sender].aktif,\r\n            \"Hanya dokter aktif yang bisa memperbarui rekam medis.\"\r\n        );\r\n        require(\r\n            isPasienAssignedToDokter(msg.sender, _pasien),\r\n            \"Dokter tidak di-assign untuk pasien ini.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaPasien(address pasien) {\r\n        require(\r\n            msg.sender == pasien,\r\n            \"Hanya pasien yang bisa membuat rekam medis mereka.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function registerDokter(\r\n        address _dokter,\r\n        string memory _nama\r\n    ) public hanyaAdmin {\r\n        require(!isDokter[_dokter], \"Dokter sudah terdaftar.\");\r\n        require(!isPasien[_dokter], \"Alamat sudah terdaftar sebagai Pasien.\");\r\n        isDokter[_dokter] = true;\r\n        dataDokter[_dokter] = Dokter({\r\n            nama: _nama,\r\n            aktif: true,\r\n            assignedPasien: new address[](0)\r\n        });\r\n        daftarDokter.push(_dokter);\r\n        emit DokterTerdaftar(_dokter, _nama);\r\n    }\r\n    function totalDokter() public view returns (uint) {\r\n        return daftarDokter.length;\r\n    }\r\n\r\n    function getDokterByIndex(uint index) public view returns (address) {\r\n        require(index < daftarDokter.length, \"Index dokter tidak valid.\");\r\n        return daftarDokter[index];\r\n    }\r\n\r\n    function setStatusDokter(address _dokter, bool _aktif) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        dataDokter[_dokter].aktif = _aktif;\r\n        emit DokterStatusDiubah(_dokter, _aktif);\r\n    }\r\n\r\n    function assignPasienToDokter(\r\n        address _dokter,\r\n        address _pasien\r\n    ) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        require(isPasien[_pasien], \"Pasien tidak terdaftar.\");\r\n        address[] storage pasienDokter = dataDokter[_dokter].assignedPasien;\r\n        for (uint i = 0; i < pasienDokter.length; i++) {\r\n            require(\r\n                pasienDokter[i] != _pasien,\r\n                \"Pasien sudah ditugaskan ke dokter ini.\"\r\n            );\r\n        }\r\n        pasienDokter.push(_pasien);\r\n        emit PasienDiassignKeDokter(_dokter, _pasien);\r\n    }\r\n\r\n    function isPasienAssignedToDokter(\r\n        address _dokter,\r\n        address _pasien\r\n    ) public view returns (bool) {\r\n        address[] storage pasienList = dataDokter[_dokter].assignedPasien;\r\n        for (uint i = 0; i < pasienList.length; i++) {\r\n            if (pasienList[i] == _pasien) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getAssignedPasienByDokter(\r\n        address _dokter\r\n    ) public view returns (address[] memory) {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        return dataDokter[_dokter].assignedPasien;\r\n    }\r\n\r\n    function getDokter(\r\n        address _dokter\r\n    )\r\n        public\r\n        view\r\n        returns (string memory nama, bool aktif, address[] memory pasien)\r\n    {\r\n        Dokter storage d = dataDokter[_dokter];\r\n        return (d.nama, d.aktif, d.assignedPasien);\r\n    }\r\n\r\n    // Daftarkan pasien oleh admin tanpa menyimpan nama secara terpisah,\r\n    // nama pasien diambil dari data rekam medis pertama\r\n    function registerPasien(address _pasien) public hanyaAdmin {\r\n        require(!isDokter[_pasien], \"Alamat sudah terdaftar sebagai Dokter.\");\r\n        require(!isPasien[_pasien], \"Pasien sudah terdaftar.\");\r\n        isPasien[_pasien] = true;\r\n        daftarPasien.push(_pasien);\r\n        emit PasienTerdaftar(_pasien);\r\n    }\r\n\r\n    // Self register pasien tanpa nama (bisa dikembangkan)\r\n    function selfRegisterPasien() public {\r\n        require(!isPasien[msg.sender], \"Anda sudah terdaftar sebagai Pasien.\");\r\n        isPasien[msg.sender] = true;\r\n        daftarPasien.push(msg.sender);\r\n        emit PasienTerdaftar(msg.sender);\r\n    }\r\n\r\n    // Ambil role user\r\n    function getUserRole(address _user) public view returns (string memory) {\r\n        if (_user == admin) return \"Admin\";\r\n        if (isDokter[_user]) return \"Dokter\";\r\n        if (isPasien[_user]) return \"Pasien\";\r\n        return \"Unknown\";\r\n    }\r\n\r\n    // Ambil daftar rekam medis milik pasien\r\n    function getRekamMedisIdsByPasien(\r\n        address pasien\r\n    ) public view returns (uint[] memory) {\r\n        return rekamMedisByPasien[pasien];\r\n    }\r\n\r\n    // Ambil daftar semua pasien\r\n    function getDaftarPasien() public view returns (address[] memory) {\r\n        return daftarPasien;\r\n    }\r\n\r\n    // Ambil nama pasien dari rekam medis pertama (jika ada)\r\n    function getNamaPasien(\r\n        address _pasien\r\n    ) public view returns (string memory) {\r\n        uint[] memory ids = rekamMedisByPasien[_pasien];\r\n        if (ids.length == 0) {\r\n            return \"\";\r\n        }\r\n        return rekamMedis[ids[0]].nama;\r\n    }\r\n\r\n    // Set admin baru\r\n    function setAdmin(address _newAdmin) public hanyaAdmin {\r\n        admin = _newAdmin;\r\n        emit AdminDitetapkan(_newAdmin);\r\n    }\r\n\r\n    // Tambah rekam medis pasien (self data input)\r\n    function tambahRekamMedis(\r\n        address _pasien,\r\n        string memory _nama,\r\n        uint _umur,\r\n        string memory _golonganDarah,\r\n        string memory _tanggalLahir,\r\n        string memory _gender,\r\n        string memory _alamat,\r\n        string memory _noTelepon,\r\n        string memory _email,\r\n        string memory _diagnosa,\r\n        string memory _foto,\r\n        string memory _catatan\r\n    ) public {\r\n        require(\r\n            msg.sender == _pasien || msg.sender == admin,\r\n            \"Hanya pasien atau admin yang bisa menambah rekam medis.\"\r\n        );\r\n\r\n        rekamMedisCount++;\r\n\r\n        if (msg.sender == admin) {\r\n            // Jika admin, simpan hanya nama, sisanya kosong atau default\r\n            rekamMedis[rekamMedisCount] = RekamMedisData(\r\n                rekamMedisCount,\r\n                _pasien,\r\n                _nama,\r\n                0, // umur default\r\n                \"\", // golonganDarah kosong\r\n                \"\", // tanggalLahir kosong\r\n                \"\", // gender kosong\r\n                \"\", // alamat kosong\r\n                \"\", // noTelepon kosong\r\n                \"\", // email kosong\r\n                \"\", // diagnosa kosong\r\n                \"\", // foto kosong\r\n                \"\", // catatan kosong\r\n                true\r\n            );\r\n        } else {\r\n            // Jika pasien, simpan semua data sesuai input\r\n            rekamMedis[rekamMedisCount] = RekamMedisData(\r\n                rekamMedisCount,\r\n                _pasien,\r\n                _nama,\r\n                _umur,\r\n                _golonganDarah,\r\n                _tanggalLahir,\r\n                _gender,\r\n                _alamat,\r\n                _noTelepon,\r\n                _email,\r\n                _diagnosa,\r\n                _foto,\r\n                _catatan,\r\n                true\r\n            );\r\n        }\r\n\r\n        rekamMedisByPasien[_pasien].push(rekamMedisCount);\r\n        emit RekamMedisDitambahkan(rekamMedisCount, _pasien, _diagnosa, true);\r\n    }\r\n\r\n    // Update rekam medis dokter aktif\r\n    function updateRekamMedis(\r\n        uint _id,\r\n        string memory _nama,\r\n        uint _umur,\r\n        string memory _golonganDarah,\r\n        string memory _tanggalLahir,\r\n        string memory _gender,\r\n        string memory _alamat,\r\n        string memory _noTelepon,\r\n        string memory _email,\r\n        string memory _diagnosa,\r\n        string memory _foto,\r\n        string memory _catatan\r\n    ) public hanyaDokterAktifUntukPasien(rekamMedis[_id].pasien) {\r\n        RekamMedisData storage rekam = rekamMedis[_id];\r\n        rekamMedisVersions[_id].push(rekam);\r\n        rekam.nama = _nama;\r\n        rekam.umur = _umur;\r\n        rekam.golonganDarah = _golonganDarah;\r\n        rekam.tanggalLahir = _tanggalLahir;\r\n        rekam.gender = _gender;\r\n        rekam.alamat = _alamat;\r\n        rekam.noTelepon = _noTelepon;\r\n        rekam.email = _email;\r\n        rekam.diagnosa = _diagnosa;\r\n        rekam.foto = _foto;\r\n        rekam.catatan = _catatan;\r\n        emit RekamMedisDiperbarui(_id, _diagnosa, _catatan);\r\n    }\r\n\r\n    // Fungsi untuk ambil versi rekam medis\r\n    function getRekamMedisVersions(\r\n        uint _id\r\n    ) public view returns (RekamMedisData[] memory) {\r\n        return rekamMedisVersions[_id];\r\n    }\r\n\r\n    // Nonaktifkan rekam medis (admin)\r\n    function nonaktifkanRekamMedis(uint _id) public hanyaAdmin {\r\n        rekamMedis[_id].valid = false;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\TA\\Rekam_Medis_Blockchain\\rekam_medis_backend\\contracts\\RekamMedis.sol",
  "ast": {
    "absolutePath": "project:/contracts/RekamMedis.sol",
    "exportedSymbols": {
      "RekamMedis": [
        905
      ]
    },
    "id": 906,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "RekamMedis",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 905,
        "linearizedBaseContracts": [
          905
        ],
        "name": "RekamMedis",
        "nameLocation": "78:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 3,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "111:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 905,
            "src": "96:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "96:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RekamMedis.Dokter",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "nama",
                "nameLocation": "157:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "150:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "150:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "aktif",
                "nameLocation": "177:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "172:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "assignedPasien",
                "nameLocation": "203:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "193:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9,
                  "nodeType": "ArrayTypeName",
                  "src": "193:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Dokter",
            "nameLocation": "132:6:0",
            "nodeType": "StructDefinition",
            "scope": 905,
            "src": "125:100:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3c0fdea",
            "id": 16,
            "mutability": "mutable",
            "name": "dataDokter",
            "nameLocation": "267:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 905,
            "src": "233:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
              "typeString": "mapping(address => struct RekamMedis.Dokter)"
            },
            "typeName": {
              "id": 15,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "241:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "233:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                "typeString": "mapping(address => struct RekamMedis.Dokter)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 14,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 13,
                  "name": "Dokter",
                  "nameLocations": [
                    "252:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "252:6:0"
                },
                "referencedDeclaration": 11,
                "src": "252:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                  "typeString": "struct RekamMedis.Dokter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c4c9348",
            "id": 20,
            "mutability": "mutable",
            "name": "isDokter",
            "nameLocation": "316:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 905,
            "src": "284:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 19,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "292:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "284:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 18,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "303:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1132beb5",
            "id": 24,
            "mutability": "mutable",
            "name": "isPasien",
            "nameLocation": "363:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 905,
            "src": "331:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 23,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "339:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "331:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 22,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "350:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "42699651",
            "id": 27,
            "mutability": "mutable",
            "name": "daftarDokter",
            "nameLocation": "397:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 905,
            "src": "380:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "380:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 26,
              "nodeType": "ArrayTypeName",
              "src": "380:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68370087",
            "id": 30,
            "mutability": "mutable",
            "name": "daftarPasien",
            "nameLocation": "463:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 905,
            "src": "446:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "446:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "446:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RekamMedis.RekamMedisData",
            "id": 59,
            "members": [
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "552:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "547:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "547:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "pasien",
                "nameLocation": "573:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "565:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 33,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "565:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "nama",
                "nameLocation": "597:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "590:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "590:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "umur",
                "nameLocation": "617:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "612:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "612:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "golonganDarah",
                "nameLocation": "639:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "632:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 39,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "632:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "tanggalLahir",
                "nameLocation": "670:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "663:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 41,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "gender",
                "nameLocation": "700:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "693:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 43,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "alamat",
                "nameLocation": "724:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "717:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 45,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "noTelepon",
                "nameLocation": "748:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "741:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 47,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "741:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "email",
                "nameLocation": "775:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "768:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 49,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "768:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "diagnosa",
                "nameLocation": "798:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "791:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 51,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "791:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "foto",
                "nameLocation": "824:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "817:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 53,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "817:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "catatan",
                "nameLocation": "846:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "839:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 55,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "839:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "869:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "864:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 57,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "864:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RekamMedisData",
            "nameLocation": "521:14:0",
            "nodeType": "StructDefinition",
            "scope": 905,
            "src": "514:368:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "abf72abb",
            "id": 64,
            "mutability": "mutable",
            "name": "rekamMedis",
            "nameLocation": "929:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 905,
            "src": "890:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
              "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData)"
            },
            "typeName": {
              "id": 63,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 60,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "898:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "890:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 62,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 61,
                  "name": "RekamMedisData",
                  "nameLocations": [
                    "906:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59,
                  "src": "906:14:0"
                },
                "referencedDeclaration": 59,
                "src": "906:14:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                  "typeString": "struct RekamMedis.RekamMedisData"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "00410cb3",
            "id": 69,
            "mutability": "mutable",
            "name": "rekamMedisByPasien",
            "nameLocation": "980:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 905,
            "src": "946:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 68,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "954:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "946:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 66,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "965:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 67,
                "nodeType": "ArrayTypeName",
                "src": "965:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2e2dd102",
            "id": 71,
            "mutability": "mutable",
            "name": "rekamMedisCount",
            "nameLocation": "1019:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 905,
            "src": "1007:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1007:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd09a968",
            "id": 77,
            "mutability": "mutable",
            "name": "rekamMedisVersions",
            "nameLocation": "1118:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 905,
            "src": "1077:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData[])"
            },
            "typeName": {
              "id": 76,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 72,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1085:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1077:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 74,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 73,
                    "name": "RekamMedisData",
                    "nameLocations": [
                      "1093:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 59,
                    "src": "1093:14:0"
                  },
                  "referencedDeclaration": 59,
                  "src": "1093:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                    "typeString": "struct RekamMedis.RekamMedisData"
                  }
                },
                "id": 75,
                "nodeType": "ArrayTypeName",
                "src": "1093:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr",
                  "typeString": "struct RekamMedis.RekamMedisData[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c997",
            "id": 87,
            "name": "RekamMedisDitambahkan",
            "nameLocation": "1166:21:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1203:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1198:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1224:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1216:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "diagnosa",
                  "nameLocation": "1248:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1241:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "1272:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1267:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:97:0"
            },
            "src": "1160:125:0"
          },
          {
            "anonymous": false,
            "eventSelector": "2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e13",
            "id": 95,
            "name": "RekamMedisDiperbarui",
            "nameLocation": "1297:20:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1323:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1318:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "diagnosa",
                  "nameLocation": "1334:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1327:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "catatan",
                  "nameLocation": "1351:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1344:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1317:42:0"
            },
            "src": "1291:69:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d",
            "id": 99,
            "name": "AdminDitetapkan",
            "nameLocation": "1372:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "1396:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1388:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:18:0"
            },
            "src": "1366:40:0"
          },
          {
            "anonymous": false,
            "eventSelector": "c38147498c0c3f6433ae14d0586b30fef7b292e301be82700c6478971c423dce",
            "id": 105,
            "name": "DokterTerdaftar",
            "nameLocation": "1418:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1442:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1434:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nama",
                  "nameLocation": "1457:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1450:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1433:29:0"
            },
            "src": "1412:51:0"
          },
          {
            "anonymous": false,
            "eventSelector": "3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a",
            "id": 111,
            "name": "DokterStatusDiubah",
            "nameLocation": "1475:18:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1502:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1494:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "aktif",
                  "nameLocation": "1515:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1510:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1493:28:0"
            },
            "src": "1469:53:0"
          },
          {
            "anonymous": false,
            "eventSelector": "d9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a",
            "id": 117,
            "name": "PasienDiassignKeDokter",
            "nameLocation": "1534:22:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1565:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1557:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1581:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1573:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1556:32:0"
            },
            "src": "1528:61:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da47058",
            "id": 121,
            "name": "PasienTerdaftar",
            "nameLocation": "1601:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1625:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1617:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1616:16:0"
            },
            "src": "1595:38:0"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "1655:79:0",
              "statements": [
                {
                  "expression": {
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1666:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 125,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1674:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1678:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1674:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1666:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:18:0"
                }
              ]
            },
            "id": 130,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1652:2:0"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1655:0:0"
            },
            "scope": 905,
            "src": "1641:93:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1764:141:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 133,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1797:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1801:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1797:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 135,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1811:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1797:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612061646d696e2079616e672062697361206d656c616b756b616e20616b736920696e692e",
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1831:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40743133d152203b81977e888be4a239119d67c3c029e27406bd4fbf4c6eff2f",
                          "typeString": "literal_string \"Hanya admin yang bisa melakukan aksi ini.\""
                        },
                        "value": "Hanya admin yang bisa melakukan aksi ini."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40743133d152203b81977e888be4a239119d67c3c029e27406bd4fbf4c6eff2f",
                          "typeString": "literal_string \"Hanya admin yang bisa melakukan aksi ini.\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1775:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1775:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1775:110:0"
                },
                {
                  "id": 140,
                  "nodeType": "PlaceholderStatement",
                  "src": "1896:1:0"
                }
              ]
            },
            "id": 142,
            "name": "hanyaAdmin",
            "nameLocation": "1751:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:2:0"
            },
            "src": "1742:163:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1941:186:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 145,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1974:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 148,
                          "indexExpression": {
                            "expression": {
                              "id": 146,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1983:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1987:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1983:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1974:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 149,
                              "name": "dataDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "1998:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                                "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                              }
                            },
                            "id": 152,
                            "indexExpression": {
                              "expression": {
                                "id": 150,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2009:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2013:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2009:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1998:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dokter_$11_storage",
                              "typeString": "struct RekamMedis.Dokter storage ref"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2021:5:0",
                          "memberName": "aktif",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "1998:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1974:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e796120646f6b74657220616b7469662079616e672062697361206d656d70657262617275692072656b616d206d656469732e",
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2041:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        },
                        "value": "Hanya dokter aktif yang bisa memperbarui rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        }
                      ],
                      "id": 144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1952:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1952:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1952:155:0"
                },
                {
                  "id": 158,
                  "nodeType": "PlaceholderStatement",
                  "src": "2118:1:0"
                }
              ]
            },
            "id": 160,
            "name": "hanyaDokterAktif",
            "nameLocation": "1922:16:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1938:2:0"
            },
            "src": "1913:214:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "2189:332:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 165,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2222:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 168,
                          "indexExpression": {
                            "expression": {
                              "id": 166,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2231:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2235:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2231:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2222:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 169,
                              "name": "dataDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "2246:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                                "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                              }
                            },
                            "id": 172,
                            "indexExpression": {
                              "expression": {
                                "id": 170,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2257:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2261:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2257:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2246:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dokter_$11_storage",
                              "typeString": "struct RekamMedis.Dokter storage ref"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2269:5:0",
                          "memberName": "aktif",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "2246:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2222:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e796120646f6b74657220616b7469662079616e672062697361206d656d70657262617275692072656b616d206d656469732e",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2289:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        },
                        "value": "Hanya dokter aktif yang bisa memperbarui rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        }
                      ],
                      "id": 164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2200:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2200:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:155:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 180,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2413:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2417:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2413:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 182,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "2425:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 179,
                          "name": "isPasienAssignedToDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "2388:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2388:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b2064692d61737369676e20756e74756b2070617369656e20696e692e",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2448:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e82baccf1116aea183061ae2d562c35c217635aaf6d8edae2e53db74fd1d63d",
                          "typeString": "literal_string \"Dokter tidak di-assign untuk pasien ini.\""
                        },
                        "value": "Dokter tidak di-assign untuk pasien ini."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e82baccf1116aea183061ae2d562c35c217635aaf6d8edae2e53db74fd1d63d",
                          "typeString": "literal_string \"Dokter tidak di-assign untuk pasien ini.\""
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2366:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2366:135:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:135:0"
                },
                {
                  "id": 187,
                  "nodeType": "PlaceholderStatement",
                  "src": "2512:1:0"
                }
              ]
            },
            "id": 189,
            "name": "hanyaDokterAktifUntukPasien",
            "nameLocation": "2144:27:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "2180:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2172:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2171:17:0"
            },
            "src": "2135:386:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "2566:151:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 194,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2599:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2603:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2599:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 196,
                          "name": "pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "2613:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2599:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612070617369656e2079616e672062697361206d656d627561742072656b616d206d65646973206d6572656b612e",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2634:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be9e5faf1ada86bba8df6c823638bf7d94a2e628e433585b67a75bd6684f5304",
                          "typeString": "literal_string \"Hanya pasien yang bisa membuat rekam medis mereka.\""
                        },
                        "value": "Hanya pasien yang bisa membuat rekam medis mereka."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be9e5faf1ada86bba8df6c823638bf7d94a2e628e433585b67a75bd6684f5304",
                          "typeString": "literal_string \"Hanya pasien yang bisa membuat rekam medis mereka.\""
                        }
                      ],
                      "id": 193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2577:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2577:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2577:120:0"
                },
                {
                  "id": 201,
                  "nodeType": "PlaceholderStatement",
                  "src": "2708:1:0"
                }
              ]
            },
            "id": 203,
            "name": "hanyaPasien",
            "nameLocation": "2538:11:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "2558:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2550:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2549:16:0"
            },
            "src": "2529:188:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "2830:423:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2849:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 213,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2850:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 215,
                          "indexExpression": {
                            "id": 214,
                            "name": "_dokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 205,
                            "src": "2859:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2850:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b746572207375646168207465726461667461722e",
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2869:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_244ba53ff803a73914781092e4815e3084e42d1edb577a9193f81c0183023344",
                          "typeString": "literal_string \"Dokter sudah terdaftar.\""
                        },
                        "value": "Dokter sudah terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_244ba53ff803a73914781092e4815e3084e42d1edb577a9193f81c0183023344",
                          "typeString": "literal_string \"Dokter sudah terdaftar.\""
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2841:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2841:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2914:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 221,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2915:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 223,
                          "indexExpression": {
                            "id": 222,
                            "name": "_dokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 205,
                            "src": "2924:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2915:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c616d61742073756461682074657264616674617220736562616761692050617369656e2e",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2934:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84c42e7ccb88d3ba71eb5ceba45ba7a042208342e460783b267a4a0a677d60f2",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Pasien.\""
                        },
                        "value": "Alamat sudah terdaftar sebagai Pasien."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84c42e7ccb88d3ba71eb5ceba45ba7a042208342e460783b267a4a0a677d60f2",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Pasien.\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2906:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2906:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "2906:69:0"
                },
                {
                  "expression": {
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 228,
                        "name": "isDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2986:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 230,
                      "indexExpression": {
                        "id": 229,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "2995:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2986:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3006:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2986:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "2986:24:0"
                },
                {
                  "expression": {
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 234,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3021:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 236,
                      "indexExpression": {
                        "id": 235,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "3032:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3021:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 238,
                          "name": "_nama",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "3071:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3098:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3147:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3133:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 240,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3137:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 241,
                              "nodeType": "ArrayTypeName",
                              "src": "3137:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3133:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "id": 237,
                        "name": "Dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "3043:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Dokter_$11_storage_ptr_$",
                          "typeString": "type(struct RekamMedis.Dokter storage pointer)"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3065:4:0",
                        "3091:5:0",
                        "3117:14:0"
                      ],
                      "names": [
                        "nama",
                        "aktif",
                        "assignedPasien"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3043:118:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_memory_ptr",
                        "typeString": "struct RekamMedis.Dokter memory"
                      }
                    },
                    "src": "3021:140:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dokter_$11_storage",
                      "typeString": "struct RekamMedis.Dokter storage ref"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:140:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 251,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "3190:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 248,
                        "name": "daftarDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "3172:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3185:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3172:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3172:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "3172:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 255,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "3230:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 256,
                        "name": "_nama",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "3239:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 254,
                      "name": "DokterTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "3214:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3214:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "EmitStatement",
                  "src": "3209:36:0"
                }
              ]
            },
            "functionSelector": "107e202f",
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 210,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 209,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "2819:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "2819:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2819:10:0"
              }
            ],
            "name": "registerDokter",
            "nameLocation": "2734:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "2767:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2759:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "2799:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2785:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2785:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2748:63:0"
            },
            "returnParameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2830:0:0"
            },
            "scope": 905,
            "src": "2725:528:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 268,
              "nodeType": "Block",
              "src": "3309:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 265,
                      "name": "daftarDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3327:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3340:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3327:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 264,
                  "id": 267,
                  "nodeType": "Return",
                  "src": "3320:26:0"
                }
              ]
            },
            "functionSelector": "7d3e9db8",
            "id": 269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDokter",
            "nameLocation": "3268:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3279:2:0"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "3303:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3302:6:0"
            },
            "scope": 905,
            "src": "3259:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "3430:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 277,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "3449:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 278,
                            "name": "daftarDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "3457:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3470:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3457:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3449:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e64657820646f6b74657220746964616b2076616c69642e",
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3478:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3e7eef6eca0aa2543ab5b1b1fefb44d677dd8a64bfa1603b451f59a63157404",
                          "typeString": "literal_string \"Index dokter tidak valid.\""
                        },
                        "value": "Index dokter tidak valid."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3e7eef6eca0aa2543ab5b1b1fefb44d677dd8a64bfa1603b451f59a63157404",
                          "typeString": "literal_string \"Index dokter tidak valid.\""
                        }
                      ],
                      "id": 276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3441:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3441:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3441:65:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 284,
                      "name": "daftarDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3524:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 286,
                    "indexExpression": {
                      "id": 285,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "3537:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3524:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 275,
                  "id": 287,
                  "nodeType": "Return",
                  "src": "3517:26:0"
                }
              ]
            },
            "functionSelector": "046bdbcc",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDokterByIndex",
            "nameLocation": "3371:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3393:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "3388:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3388:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3387:12:0"
            },
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "3421:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3421:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3420:9:0"
            },
            "scope": 905,
            "src": "3362:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3632:168:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 299,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3651:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 301,
                        "indexExpression": {
                          "id": 300,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3660:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3651:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3670:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3643:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3643:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:53:0"
                },
                {
                  "expression": {
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 305,
                          "name": "dataDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "3707:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                            "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                          }
                        },
                        "id": 307,
                        "indexExpression": {
                          "id": 306,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3718:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3707:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$11_storage",
                          "typeString": "struct RekamMedis.Dokter storage ref"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3727:5:0",
                      "memberName": "aktif",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "3707:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 309,
                      "name": "_aktif",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "3735:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3707:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "3707:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 313,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 291,
                        "src": "3776:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 314,
                        "name": "_aktif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "3785:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 312,
                      "name": "DokterStatusDiubah",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3757:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "EmitStatement",
                  "src": "3752:40:0"
                }
              ]
            },
            "functionSelector": "932e0f6d",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 296,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 295,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "3621:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "3621:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3621:10:0"
              }
            ],
            "name": "setStatusDokter",
            "nameLocation": "3568:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "3592:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3584:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "_aktif",
                  "nameLocation": "3606:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3601:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3601:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3583:30:0"
            },
            "returnParameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3632:0:0"
            },
            "scope": 905,
            "src": "3559:241:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "3915:517:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 328,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3934:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 330,
                        "indexExpression": {
                          "id": 329,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 320,
                          "src": "3943:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3934:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3953:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3926:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3926:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3926:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 335,
                          "name": "isPasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "3998:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 337,
                        "indexExpression": {
                          "id": 336,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "4007:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3998:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617369656e20746964616b207465726461667461722e",
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4017:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4782a23f877cf9a2cb61015c9d3479d89c3bb6c338a0540e7268bf1efb9819c",
                          "typeString": "literal_string \"Pasien tidak terdaftar.\""
                        },
                        "value": "Pasien tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4782a23f877cf9a2cb61015c9d3479d89c3bb6c338a0540e7268bf1efb9819c",
                          "typeString": "literal_string \"Pasien tidak terdaftar.\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3990:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3990:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "3990:53:0"
                },
                {
                  "assignments": [
                    345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 345,
                      "mutability": "mutable",
                      "name": "pasienDokter",
                      "nameLocation": "4072:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "4054:30:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4054:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 344,
                        "nodeType": "ArrayTypeName",
                        "src": "4054:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 346,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4087:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 348,
                      "indexExpression": {
                        "id": 347,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "4098:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4087:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4107:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "4087:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4054:67:0"
                },
                {
                  "body": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "4179:153:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 363,
                                  "name": "pasienDokter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 345,
                                  "src": "4220:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                    "typeString": "address[] storage pointer"
                                  }
                                },
                                "id": 365,
                                "indexExpression": {
                                  "id": 364,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 352,
                                  "src": "4233:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4220:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 366,
                                "name": "_pasien",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 322,
                                "src": "4239:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4220:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50617369656e20737564616820646974756761736b616e206b6520646f6b74657220696e692e",
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4265:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c614628bd02fed10ab7037aa9ef96182341b00560e3c47f216b8b35ae12ce6a9",
                                "typeString": "literal_string \"Pasien sudah ditugaskan ke dokter ini.\""
                              },
                              "value": "Pasien sudah ditugaskan ke dokter ini."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c614628bd02fed10ab7037aa9ef96182341b00560e3c47f216b8b35ae12ce6a9",
                                "typeString": "literal_string \"Pasien sudah ditugaskan ke dokter ini.\""
                              }
                            ],
                            "id": 362,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4194:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4194:126:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 370,
                        "nodeType": "ExpressionStatement",
                        "src": "4194:126:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 355,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "4149:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 356,
                        "name": "pasienDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "4153:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4166:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4153:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4149:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 372,
                  "initializationExpression": {
                    "assignments": [
                      352
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4142:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "4137:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4137:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 354,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4146:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4137:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4174:3:0",
                      "subExpression": {
                        "id": 359,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "4174:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 361,
                    "nodeType": "ExpressionStatement",
                    "src": "4174:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4132:200:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 376,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "4360:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 373,
                        "name": "pasienDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "4342:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4355:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4342:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4342:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "4342:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 380,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "4407:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 381,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "4416:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 379,
                      "name": "PasienDiassignKeDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "4384:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4384:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "EmitStatement",
                  "src": "4379:45:0"
                }
              ]
            },
            "functionSelector": "19e8f405",
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 325,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 324,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "3904:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "3904:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3904:10:0"
              }
            ],
            "name": "assignPasienToDokter",
            "nameLocation": "3817:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "3856:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "3848:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3848:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "3882:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "3874:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3874:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3837:59:0"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3915:0:0"
            },
            "scope": 905,
            "src": "3808:624:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "4560:264:0",
              "statements": [
                {
                  "assignments": [
                    398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 398,
                      "mutability": "mutable",
                      "name": "pasienList",
                      "nameLocation": "4589:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 428,
                      "src": "4571:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 396,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4571:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 397,
                        "nodeType": "ArrayTypeName",
                        "src": "4571:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 403,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 399,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4602:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 401,
                      "indexExpression": {
                        "id": 400,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "4613:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4602:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 402,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4622:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "4602:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4571:65:0"
                },
                {
                  "body": {
                    "id": 424,
                    "nodeType": "Block",
                    "src": "4692:102:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 415,
                              "name": "pasienList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "4711:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 417,
                            "indexExpression": {
                              "id": 416,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "4722:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4711:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 418,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "4728:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4711:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 423,
                        "nodeType": "IfStatement",
                        "src": "4707:76:0",
                        "trueBody": {
                          "id": 422,
                          "nodeType": "Block",
                          "src": "4737:46:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4763:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 393,
                              "id": 421,
                              "nodeType": "Return",
                              "src": "4756:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 408,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "4664:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 409,
                        "name": "pasienList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "4668:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4679:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4668:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4664:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 425,
                  "initializationExpression": {
                    "assignments": [
                      405
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4657:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 425,
                        "src": "4652:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4652:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 407,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4661:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4652:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4687:3:0",
                      "subExpression": {
                        "id": 412,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "4687:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 414,
                    "nodeType": "ExpressionStatement",
                    "src": "4687:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4647:147:0"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4811:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 393,
                  "id": 427,
                  "nodeType": "Return",
                  "src": "4804:12:0"
                }
              ]
            },
            "functionSelector": "70419a81",
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPasienAssignedToDokter",
            "nameLocation": "4449:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "4492:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "4484:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4484:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "4518:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "4510:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4510:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4473:59:0"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "4554:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4554:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4553:6:0"
            },
            "scope": 905,
            "src": "4440:384:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "4939:124:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 438,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4958:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 440,
                        "indexExpression": {
                          "id": 439,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "4967:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4958:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4977:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4950:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4950:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4950:53:0"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 444,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "5021:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 446,
                      "indexExpression": {
                        "id": 445,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "5032:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5021:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5041:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "5021:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 436,
                  "id": 448,
                  "nodeType": "Return",
                  "src": "5014:41:0"
                }
              ]
            },
            "functionSelector": "350ee3fc",
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssignedPasienByDokter",
            "nameLocation": "4841:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "4885:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "4877:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4877:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4866:33:0"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "4921:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 433,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4921:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 434,
                    "nodeType": "ArrayTypeName",
                    "src": "4921:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4920:18:0"
            },
            "scope": 905,
            "src": "4832:231:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "5233:110:0",
              "statements": [
                {
                  "assignments": [
                    464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 464,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "5259:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 477,
                      "src": "5244:16:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                        "typeString": "struct RekamMedis.Dokter"
                      },
                      "typeName": {
                        "id": 463,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 462,
                          "name": "Dokter",
                          "nameLocations": [
                            "5244:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "5244:6:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "5244:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                          "typeString": "struct RekamMedis.Dokter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 468,
                  "initialValue": {
                    "baseExpression": {
                      "id": 465,
                      "name": "dataDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "5263:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                        "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                      }
                    },
                    "id": 467,
                    "indexExpression": {
                      "id": 466,
                      "name": "_dokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "5274:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5263:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dokter_$11_storage",
                      "typeString": "struct RekamMedis.Dokter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5244:38:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 469,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 464,
                          "src": "5301:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5303:4:0",
                        "memberName": "nama",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "5301:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 471,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 464,
                          "src": "5309:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5311:5:0",
                        "memberName": "aktif",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "5309:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 473,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 464,
                          "src": "5318:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5320:14:0",
                        "memberName": "assignedPasien",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "5318:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "id": 475,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5300:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_bool_$_t_array$_t_address_$dyn_storage_$",
                      "typeString": "tuple(string storage ref,bool,address[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 461,
                  "id": 476,
                  "nodeType": "Return",
                  "src": "5293:42:0"
                }
              ]
            },
            "functionSelector": "3da05518",
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDokter",
            "nameLocation": "5080:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "5108:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "5100:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5100:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5089:33:0"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "nama",
                  "nameLocation": "5185:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "5171:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "aktif",
                  "nameLocation": "5196:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "5191:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5191:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "5220:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "5203:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 458,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5203:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 459,
                    "nodeType": "ArrayTypeName",
                    "src": "5203:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5170:57:0"
            },
            "scope": 905,
            "src": "5071:272:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 517,
              "nodeType": "Block",
              "src": "5542:265:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5561:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 486,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "5562:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 488,
                          "indexExpression": {
                            "id": 487,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "5571:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5562:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c616d617420737564616820746572646166746172207365626167616920446f6b7465722e",
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5581:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be029ad283bd7570d827e2efd69af31e6d9aa723e23fc4389e6b595e7e86d11b",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Dokter.\""
                        },
                        "value": "Alamat sudah terdaftar sebagai Dokter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be029ad283bd7570d827e2efd69af31e6d9aa723e23fc4389e6b595e7e86d11b",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Dokter.\""
                        }
                      ],
                      "id": 485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5553:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5553:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "5553:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5641:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 494,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "5642:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 496,
                          "indexExpression": {
                            "id": 495,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "5651:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5642:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617369656e207375646168207465726461667461722e",
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5661:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64341dd50e2f06c0cac41d11d350ddc2b418e49e56f752b197f71f27c89db58a",
                          "typeString": "literal_string \"Pasien sudah terdaftar.\""
                        },
                        "value": "Pasien sudah terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64341dd50e2f06c0cac41d11d350ddc2b418e49e56f752b197f71f27c89db58a",
                          "typeString": "literal_string \"Pasien sudah terdaftar.\""
                        }
                      ],
                      "id": 493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5633:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5633:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "5633:54:0"
                },
                {
                  "expression": {
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 501,
                        "name": "isPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5698:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 503,
                      "indexExpression": {
                        "id": 502,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "5707:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5698:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5718:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5698:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "5698:24:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 510,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "5751:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 507,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "5733:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5746:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5733:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5733:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "5733:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 514,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "5791:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 513,
                      "name": "PasienTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "5775:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5775:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 516,
                  "nodeType": "EmitStatement",
                  "src": "5770:29:0"
                }
              ]
            },
            "functionSelector": "010ef3b3",
            "id": 518,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 482,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "5531:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "5531:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5531:10:0"
              }
            ],
            "name": "registerPasien",
            "nameLocation": "5492:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "5515:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "5507:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5507:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5506:17:0"
            },
            "returnParameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5542:0:0"
            },
            "scope": 905,
            "src": "5483:324:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 549,
              "nodeType": "Block",
              "src": "5912:210:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5931:21:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 522,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "5932:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 525,
                          "indexExpression": {
                            "expression": {
                              "id": 523,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5941:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5945:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5941:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5932:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e64612073756461682074657264616674617220736562616761692050617369656e2e",
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5954:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0841d6660aee72f790cc47020ada23ff80bb1ecf0407dbd179fa7f96a310aa51",
                          "typeString": "literal_string \"Anda sudah terdaftar sebagai Pasien.\""
                        },
                        "value": "Anda sudah terdaftar sebagai Pasien."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0841d6660aee72f790cc47020ada23ff80bb1ecf0407dbd179fa7f96a310aa51",
                          "typeString": "literal_string \"Anda sudah terdaftar sebagai Pasien.\""
                        }
                      ],
                      "id": 521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5923:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5923:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "5923:70:0"
                },
                {
                  "expression": {
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 530,
                        "name": "isPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "6004:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 533,
                      "indexExpression": {
                        "expression": {
                          "id": 531,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6013:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6017:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6013:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6004:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6027:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6004:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "6004:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 540,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6060:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6064:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6060:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 537,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "6042:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6055:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6042:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6042:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "6042:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 545,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6103:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6107:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6103:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 544,
                      "name": "PasienTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "6087:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6087:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "EmitStatement",
                  "src": "6082:32:0"
                }
              ]
            },
            "functionSelector": "334181f2",
            "id": 550,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selfRegisterPasien",
            "nameLocation": "5884:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5902:2:0"
            },
            "returnParameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5912:0:0"
            },
            "scope": 905,
            "src": "5875:247:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 577,
              "nodeType": "Block",
              "src": "6226:174:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 557,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "6241:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 558,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "6250:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6241:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 562,
                  "nodeType": "IfStatement",
                  "src": "6237:34:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "41646d696e",
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6264:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a729ef4e25027bc652fc8b5c4d1d902947361fa7c8e7b4905e877823f27331b3",
                        "typeString": "literal_string \"Admin\""
                      },
                      "value": "Admin"
                    },
                    "functionReturnParameters": 556,
                    "id": 561,
                    "nodeType": "Return",
                    "src": "6257:14:0"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 563,
                      "name": "isDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "6286:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 565,
                    "indexExpression": {
                      "id": 564,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "6295:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6286:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 568,
                  "nodeType": "IfStatement",
                  "src": "6282:36:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "446f6b746572",
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6310:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ed409fc39e86bba01e2f3ce892f3153d258f5daf56a4904da0fb72c6ff04a7d8",
                        "typeString": "literal_string \"Dokter\""
                      },
                      "value": "Dokter"
                    },
                    "functionReturnParameters": 556,
                    "id": 567,
                    "nodeType": "Return",
                    "src": "6303:15:0"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 569,
                      "name": "isPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "6333:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 571,
                    "indexExpression": {
                      "id": 570,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "6342:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6333:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 574,
                  "nodeType": "IfStatement",
                  "src": "6329:36:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "50617369656e",
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6357:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6383b0bd00903b5c3a202742c52694704f8578001e3c3fd193167fcaac2674db",
                        "typeString": "literal_string \"Pasien\""
                      },
                      "value": "Pasien"
                    },
                    "functionReturnParameters": 556,
                    "id": 573,
                    "nodeType": "Return",
                    "src": "6350:15:0"
                  }
                },
                {
                  "expression": {
                    "hexValue": "556e6b6e6f776e",
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6383:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ff165d3fe0272c13129fc9e1aecd998364a5fdcad04c6ae84a7d1dfc3d06a17",
                      "typeString": "literal_string \"Unknown\""
                    },
                    "value": "Unknown"
                  },
                  "functionReturnParameters": 556,
                  "id": 576,
                  "nodeType": "Return",
                  "src": "6376:16:0"
                }
              ]
            },
            "functionSelector": "27820851",
            "id": 578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRole",
            "nameLocation": "6163:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6183:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "6175:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6175:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6174:15:0"
            },
            "returnParameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 555,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "6211:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6211:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6210:15:0"
            },
            "scope": 905,
            "src": "6154:246:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 590,
              "nodeType": "Block",
              "src": "6556:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 586,
                      "name": "rekamMedisByPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "6574:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 588,
                    "indexExpression": {
                      "id": 587,
                      "name": "pasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 580,
                      "src": "6593:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6574:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 585,
                  "id": 589,
                  "nodeType": "Return",
                  "src": "6567:33:0"
                }
              ]
            },
            "functionSelector": "c967ede8",
            "id": 591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRekamMedisIdsByPasien",
            "nameLocation": "6463:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "6506:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "6498:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6498:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6487:32:0"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "6541:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 582,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "6541:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 583,
                    "nodeType": "ArrayTypeName",
                    "src": "6541:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6540:15:0"
            },
            "scope": 905,
            "src": "6454:154:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 599,
              "nodeType": "Block",
              "src": "6716:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 597,
                    "name": "daftarPasien",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "6734:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 596,
                  "id": 598,
                  "nodeType": "Return",
                  "src": "6727:19:0"
                }
              ]
            },
            "functionSelector": "51887b67",
            "id": 600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDaftarPasien",
            "nameLocation": "6659:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6674:2:0"
            },
            "returnParameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "6698:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 593,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6698:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 594,
                    "nodeType": "ArrayTypeName",
                    "src": "6698:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6697:18:0"
            },
            "scope": 905,
            "src": "6650:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "6916:174:0",
              "statements": [
                {
                  "assignments": [
                    611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 611,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "6941:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 631,
                      "src": "6927:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 609,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6927:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 610,
                        "nodeType": "ArrayTypeName",
                        "src": "6927:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 615,
                  "initialValue": {
                    "baseExpression": {
                      "id": 612,
                      "name": "rekamMedisByPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "6947:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 614,
                    "indexExpression": {
                      "id": 613,
                      "name": "_pasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "6966:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6947:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6927:47:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 616,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 611,
                        "src": "6989:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6993:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6989:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7003:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6989:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 623,
                  "nodeType": "IfStatement",
                  "src": "6985:57:0",
                  "trueBody": {
                    "id": 622,
                    "nodeType": "Block",
                    "src": "7006:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "",
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7028:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "functionReturnParameters": 606,
                        "id": 621,
                        "nodeType": "Return",
                        "src": "7021:9:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 624,
                        "name": "rekamMedis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "7059:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                          "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                        }
                      },
                      "id": 628,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 625,
                          "name": "ids",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 611,
                          "src": "7070:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 627,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7074:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7070:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7059:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                        "typeString": "struct RekamMedis.RekamMedisData storage ref"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7078:4:0",
                    "memberName": "nama",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 36,
                    "src": "7059:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 606,
                  "id": 630,
                  "nodeType": "Return",
                  "src": "7052:30:0"
                }
              ]
            },
            "functionSelector": "ae28c7a9",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNamaPasien",
            "nameLocation": "6833:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "6865:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "6857:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6857:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6846:33:0"
            },
            "returnParameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "6901:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6901:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6900:15:0"
            },
            "scope": 905,
            "src": "6824:266:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "7176:78:0",
              "statements": [
                {
                  "expression": {
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 639,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "7187:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 640,
                      "name": "_newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "7195:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7187:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "7187:17:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 644,
                        "name": "_newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "7236:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 643,
                      "name": "AdminDitetapkan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "7220:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7220:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "EmitStatement",
                  "src": "7215:31:0"
                }
              ]
            },
            "functionSelector": "704b6c02",
            "id": 648,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 637,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 636,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "7165:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "7165:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7165:10:0"
              }
            ],
            "name": "setAdmin",
            "nameLocation": "7130:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 634,
                  "mutability": "mutable",
                  "name": "_newAdmin",
                  "nameLocation": "7147:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "7139:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7139:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7138:19:0"
            },
            "returnParameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7176:0:0"
            },
            "scope": 905,
            "src": "7121:133:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 754,
              "nodeType": "Block",
              "src": "7735:1572:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 676,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7768:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7772:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7768:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 678,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "7782:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7768:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 680,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7793:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7797:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7793:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 682,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "7807:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7793:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7768:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612070617369656e20617461752061646d696e2079616e672062697361206d656e616d6261682072656b616d206d656469732e",
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7827:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4247971d2744700286c60be19a687734902c836535c0b440cdf2974dee2b31f",
                          "typeString": "literal_string \"Hanya pasien atau admin yang bisa menambah rekam medis.\""
                        },
                        "value": "Hanya pasien atau admin yang bisa menambah rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4247971d2744700286c60be19a687734902c836535c0b440cdf2974dee2b31f",
                          "typeString": "literal_string \"Hanya pasien atau admin yang bisa menambah rekam medis.\""
                        }
                      ],
                      "id": 675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7746:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7746:149:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 687,
                  "nodeType": "ExpressionStatement",
                  "src": "7746:149:0"
                },
                {
                  "expression": {
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7908:17:0",
                    "subExpression": {
                      "id": 688,
                      "name": "rekamMedisCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "7908:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 690,
                  "nodeType": "ExpressionStatement",
                  "src": "7908:17:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 691,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7942:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7946:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7942:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 693,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "7956:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7942:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 738,
                    "nodeType": "Block",
                    "src": "8631:527:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 717,
                              "name": "rekamMedis",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "8706:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                              }
                            },
                            "id": 719,
                            "indexExpression": {
                              "id": 718,
                              "name": "rekamMedisCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "8717:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8706:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                              "typeString": "struct RekamMedis.RekamMedisData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 721,
                                "name": "rekamMedisCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "8769:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 722,
                                "name": "_pasien",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 650,
                                "src": "8803:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 723,
                                "name": "_nama",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 652,
                                "src": "8829:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 724,
                                "name": "_umur",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 654,
                                "src": "8853:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 725,
                                "name": "_golonganDarah",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 656,
                                "src": "8877:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 726,
                                "name": "_tanggalLahir",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 658,
                                "src": "8910:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 727,
                                "name": "_gender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 660,
                                "src": "8942:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 728,
                                "name": "_alamat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 662,
                                "src": "8968:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 729,
                                "name": "_noTelepon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 664,
                                "src": "8994:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 730,
                                "name": "_email",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "9023:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 731,
                                "name": "_diagnosa",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 668,
                                "src": "9048:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 732,
                                "name": "_foto",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "9076:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 733,
                                "name": "_catatan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 672,
                                "src": "9100:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9127:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 720,
                              "name": "RekamMedisData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "8736:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_RekamMedisData_$59_storage_ptr_$",
                                "typeString": "type(struct RekamMedis.RekamMedisData storage pointer)"
                              }
                            },
                            "id": 735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8736:410:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RekamMedisData_$59_memory_ptr",
                              "typeString": "struct RekamMedis.RekamMedisData memory"
                            }
                          },
                          "src": "8706:440:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                            "typeString": "struct RekamMedis.RekamMedisData storage ref"
                          }
                        },
                        "id": 737,
                        "nodeType": "ExpressionStatement",
                        "src": "8706:440:0"
                      }
                    ]
                  },
                  "id": 739,
                  "nodeType": "IfStatement",
                  "src": "7938:1220:0",
                  "trueBody": {
                    "id": 716,
                    "nodeType": "Block",
                    "src": "7963:662:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 695,
                              "name": "rekamMedis",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "8053:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                              }
                            },
                            "id": 697,
                            "indexExpression": {
                              "id": 696,
                              "name": "rekamMedisCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "8064:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8053:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                              "typeString": "struct RekamMedis.RekamMedisData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 699,
                                "name": "rekamMedisCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "8116:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 700,
                                "name": "_pasien",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 650,
                                "src": "8150:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 701,
                                "name": "_nama",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 652,
                                "src": "8176:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8200:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "",
                                "id": 703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8236:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8281:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8325:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8363:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8401:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8442:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8479:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8519:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8555:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "74727565",
                                "id": 712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8594:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 698,
                              "name": "RekamMedisData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "8083:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_RekamMedisData_$59_storage_ptr_$",
                                "typeString": "type(struct RekamMedis.RekamMedisData storage pointer)"
                              }
                            },
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8083:530:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RekamMedisData_$59_memory_ptr",
                              "typeString": "struct RekamMedis.RekamMedisData memory"
                            }
                          },
                          "src": "8053:560:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                            "typeString": "struct RekamMedis.RekamMedisData storage ref"
                          }
                        },
                        "id": 715,
                        "nodeType": "ExpressionStatement",
                        "src": "8053:560:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 744,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "9203:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 740,
                          "name": "rekamMedisByPasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "9170:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 742,
                        "indexExpression": {
                          "id": 741,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "9189:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9170:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9198:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "9170:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9170:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "9170:49:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 748,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "9257:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 749,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "9274:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 750,
                        "name": "_diagnosa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 668,
                        "src": "9283:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9294:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 747,
                      "name": "RekamMedisDitambahkan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "9235:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,string memory,bool)"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9235:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "EmitStatement",
                  "src": "9230:69:0"
                }
              ]
            },
            "functionSelector": "68f5dc99",
            "id": 755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tambahRekamMedis",
            "nameLocation": "7323:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "7358:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7350:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7350:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "7390:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7376:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7376:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "_umur",
                  "nameLocation": "7411:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7406:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7406:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "_golonganDarah",
                  "nameLocation": "7441:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7427:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7427:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "_tanggalLahir",
                  "nameLocation": "7480:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7466:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7466:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "_gender",
                  "nameLocation": "7518:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7504:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7504:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "_alamat",
                  "nameLocation": "7550:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7536:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "_noTelepon",
                  "nameLocation": "7582:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7568:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7568:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 666,
                  "mutability": "mutable",
                  "name": "_email",
                  "nameLocation": "7617:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7603:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7603:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "_diagnosa",
                  "nameLocation": "7648:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7634:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7634:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "_foto",
                  "nameLocation": "7682:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7668:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7668:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "_catatan",
                  "nameLocation": "7712:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "7698:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7698:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7339:388:0"
            },
            "returnParameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7735:0:0"
            },
            "scope": 905,
            "src": "7314:1993:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "9821:560:0",
              "statements": [
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "rekam",
                      "nameLocation": "9855:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "9832:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData"
                      },
                      "typeName": {
                        "id": 789,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 788,
                          "name": "RekamMedisData",
                          "nameLocations": [
                            "9832:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59,
                          "src": "9832:14:0"
                        },
                        "referencedDeclaration": 59,
                        "src": "9832:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 794,
                  "initialValue": {
                    "baseExpression": {
                      "id": 791,
                      "name": "rekamMedis",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "9863:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                        "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                      }
                    },
                    "id": 793,
                    "indexExpression": {
                      "id": 792,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "9874:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9863:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9832:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 799,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "9918:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 795,
                          "name": "rekamMedisVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "9889:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
                            "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref[] storage ref)"
                          }
                        },
                        "id": 797,
                        "indexExpression": {
                          "id": 796,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 757,
                          "src": "9908:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9889:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage",
                          "typeString": "struct RekamMedis.RekamMedisData storage ref[] storage ref"
                        }
                      },
                      "id": 798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9913:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "9889:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr_$_t_struct$_RekamMedisData_$59_storage_$returns$__$attached_to$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct RekamMedis.RekamMedisData storage ref[] storage pointer,struct RekamMedis.RekamMedisData storage ref)"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9889:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "9889:35:0"
                },
                {
                  "expression": {
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 802,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "9935:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 804,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9941:4:0",
                      "memberName": "nama",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "9935:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 805,
                      "name": "_nama",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "9948:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9935:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 807,
                  "nodeType": "ExpressionStatement",
                  "src": "9935:18:0"
                },
                {
                  "expression": {
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 808,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "9964:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9970:4:0",
                      "memberName": "umur",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "9964:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 811,
                      "name": "_umur",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "9977:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9964:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "9964:18:0"
                },
                {
                  "expression": {
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 814,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "9993:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9999:13:0",
                      "memberName": "golonganDarah",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "9993:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 817,
                      "name": "_golonganDarah",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "10015:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9993:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "9993:36:0"
                },
                {
                  "expression": {
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 820,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "10040:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10046:12:0",
                      "memberName": "tanggalLahir",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "10040:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 823,
                      "name": "_tanggalLahir",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "10061:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10040:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "10040:34:0"
                },
                {
                  "expression": {
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 826,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "10085:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 828,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10091:6:0",
                      "memberName": "gender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "10085:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 829,
                      "name": "_gender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "10100:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10085:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "10085:22:0"
                },
                {
                  "expression": {
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 832,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "10118:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10124:6:0",
                      "memberName": "alamat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "10118:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 835,
                      "name": "_alamat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "10133:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10118:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "10118:22:0"
                },
                {
                  "expression": {
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 838,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "10151:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 840,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10157:9:0",
                      "memberName": "noTelepon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "10151:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 841,
                      "name": "_noTelepon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "10169:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10151:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "10151:28:0"
                },
                {
                  "expression": {
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 844,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "10190:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10196:5:0",
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "10190:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 847,
                      "name": "_email",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "10204:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10190:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "10190:20:0"
                },
                {
                  "expression": {
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 850,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "10221:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 852,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10227:8:0",
                      "memberName": "diagnosa",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "10221:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 853,
                      "name": "_diagnosa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "10238:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10221:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "10221:26:0"
                },
                {
                  "expression": {
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 856,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "10258:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 858,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10264:4:0",
                      "memberName": "foto",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "10258:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 859,
                      "name": "_foto",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "10271:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10258:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "10258:18:0"
                },
                {
                  "expression": {
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 862,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "10287:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 864,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10293:7:0",
                      "memberName": "catatan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "10287:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 865,
                      "name": "_catatan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "10303:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10287:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "10287:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 869,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "10348:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 870,
                        "name": "_diagnosa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "10353:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 871,
                        "name": "_catatan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "10364:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 868,
                      "name": "RekamMedisDiperbarui",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "10327:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory)"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10327:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 873,
                  "nodeType": "EmitStatement",
                  "src": "10322:51:0"
                }
              ]
            },
            "functionSelector": "f7dc5714",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 782,
                        "name": "rekamMedis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "9797:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                          "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                        }
                      },
                      "id": 784,
                      "indexExpression": {
                        "id": 783,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "9808:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9797:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                        "typeString": "struct RekamMedis.RekamMedisData storage ref"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9813:6:0",
                    "memberName": "pasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34,
                    "src": "9797:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 781,
                  "name": "hanyaDokterAktifUntukPasien",
                  "nameLocations": [
                    "9769:27:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 189,
                  "src": "9769:27:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9769:51:0"
              }
            ],
            "name": "updateRekamMedis",
            "nameLocation": "9364:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "9396:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9391:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9391:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "9424:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9410:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9410:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "_umur",
                  "nameLocation": "9445:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9440:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9440:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "_golonganDarah",
                  "nameLocation": "9475:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9461:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9461:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "_tanggalLahir",
                  "nameLocation": "9514:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9500:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9500:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "_gender",
                  "nameLocation": "9552:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9538:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9538:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "_alamat",
                  "nameLocation": "9584:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9570:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9570:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "_noTelepon",
                  "nameLocation": "9616:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9602:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9602:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "_email",
                  "nameLocation": "9651:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9637:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9637:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "_diagnosa",
                  "nameLocation": "9682:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9668:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9668:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "_foto",
                  "nameLocation": "9716:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9702:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9702:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "_catatan",
                  "nameLocation": "9746:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "9732:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9732:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9380:381:0"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9821:0:0"
            },
            "scope": 905,
            "src": "9355:1026:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "10537:49:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 884,
                      "name": "rekamMedisVersions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "10555:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref[] storage ref)"
                      }
                    },
                    "id": 886,
                    "indexExpression": {
                      "id": 885,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 877,
                      "src": "10574:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10555:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 883,
                  "id": 887,
                  "nodeType": "Return",
                  "src": "10548:30:0"
                }
              ]
            },
            "functionSelector": "d6887802",
            "id": 889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRekamMedisVersions",
            "nameLocation": "10443:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "10480:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "10475:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10475:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10464:26:0"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "10512:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct RekamMedis.RekamMedisData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 880,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 879,
                        "name": "RekamMedisData",
                        "nameLocations": [
                          "10512:14:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 59,
                        "src": "10512:14:0"
                      },
                      "referencedDeclaration": 59,
                      "src": "10512:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData"
                      }
                    },
                    "id": 881,
                    "nodeType": "ArrayTypeName",
                    "src": "10512:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr",
                      "typeString": "struct RekamMedis.RekamMedisData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10511:25:0"
            },
            "scope": 905,
            "src": "10434:152:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 903,
              "nodeType": "Block",
              "src": "10693:48:0",
              "statements": [
                {
                  "expression": {
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 896,
                          "name": "rekamMedis",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "10704:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                            "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                          }
                        },
                        "id": 898,
                        "indexExpression": {
                          "id": 897,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "10715:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10704:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                          "typeString": "struct RekamMedis.RekamMedisData storage ref"
                        }
                      },
                      "id": 899,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10720:5:0",
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "10704:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10728:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "10704:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 902,
                  "nodeType": "ExpressionStatement",
                  "src": "10704:29:0"
                }
              ]
            },
            "functionSelector": "083d8824",
            "id": 904,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 894,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 893,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "10682:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "10682:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10682:10:0"
              }
            ],
            "name": "nonaktifkanRekamMedis",
            "nameLocation": "10643:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "10670:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "10665:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10665:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10664:10:0"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10693:0:0"
            },
            "scope": 905,
            "src": "10634:107:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 906,
        "src": "69:10675:0",
        "usedErrors": []
      }
    ],
    "src": "33:10713:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xC91F21E5E3cd10222e97163Fc5ffc496bA5cF2fc",
      "transactionHash": "0x0ee709f0755d7ff8dd4a01e85df5086881cae1ebe7f7fe2f3700b4617a5d91da"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-05-21T17:08:10.813Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}