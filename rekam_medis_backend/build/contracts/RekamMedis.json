{
  "contractName": "RekamMedis",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminDitetapkan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        }
      ],
      "name": "DokterStatusDiubah",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "nama",
          "type": "string"
        }
      ],
      "name": "DokterTerdaftar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dokter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "PasienDiassignKeDokter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "PasienTerdaftar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        }
      ],
      "name": "RekamMedisDiperbarui",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "RekamMedisDitambahkan",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "daftarDokter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "daftarPasien",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dataDokter",
      "outputs": [
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDokter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPasien",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedis",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedisByPasien",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rekamMedisCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rekamMedisVersions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "catatan",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        }
      ],
      "name": "registerDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDokter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getDokterByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_aktif",
          "type": "bool"
        }
      ],
      "name": "setStatusDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "assignPasienToDokter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "isPasienAssignedToDokter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        }
      ],
      "name": "getAssignedPasienByDokter",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dokter",
          "type": "address"
        }
      ],
      "name": "getDokter",
      "outputs": [
        {
          "internalType": "string",
          "name": "nama",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "aktif",
          "type": "bool"
        },
        {
          "internalType": "address[]",
          "name": "pasien",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        }
      ],
      "name": "registerPasien",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "selfRegisterPasien",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserRole",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pasien",
          "type": "address"
        }
      ],
      "name": "getRekamMedisIdsByPasien",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDaftarPasien",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pasien",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_catatan",
          "type": "string"
        }
      ],
      "name": "tambahRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_nama",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_umur",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_golonganDarah",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tanggalLahir",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_alamat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_noTelepon",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_diagnosa",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_foto",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_catatan",
          "type": "string"
        }
      ],
      "name": "updateRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRekamMedisVersions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pasien",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "nama",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "umur",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "golonganDarah",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tanggalLahir",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "gender",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "alamat",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "noTelepon",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "diagnosa",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "foto",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "catatan",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ],
          "internalType": "struct RekamMedis.RekamMedisData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "nonaktifkanRekamMedis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminDitetapkan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"}],\"name\":\"DokterStatusDiubah\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"}],\"name\":\"DokterTerdaftar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dokter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"PasienDiassignKeDokter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"PasienTerdaftar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"}],\"name\":\"RekamMedisDiperbarui\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"RekamMedisDitambahkan\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"assignPasienToDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daftarDokter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daftarPasien\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dataDokter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"}],\"name\":\"getAssignedPasienByDokter\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDaftarPasien\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"}],\"name\":\"getDokter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"aktif\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"pasien\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDokterByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"}],\"name\":\"getRekamMedisIdsByPasien\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRekamMedisVersions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"internalType\":\"struct RekamMedis.RekamMedisData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserRole\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDokter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPasien\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"isPasienAssignedToDokter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"nonaktifkanRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"}],\"name\":\"registerDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"}],\"name\":\"registerPasien\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedisByPasien\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rekamMedisCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rekamMedisVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"catatan\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selfRegisterPasien\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dokter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_aktif\",\"type\":\"bool\"}],\"name\":\"setStatusDokter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pasien\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_catatan\",\"type\":\"string\"}],\"name\":\"tambahRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDokter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_nama\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_umur\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_golonganDarah\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tanggalLahir\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_alamat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_noTelepon\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_diagnosa\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_foto\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_catatan\",\"type\":\"string\"}],\"name\":\"updateRekamMedis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RekamMedis.sol\":\"RekamMedis\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/RekamMedis.sol\":{\"keccak256\":\"0x9f62f8321595b22875bd52015434a7348604659308731249789097dc3376b686\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7ca780da337eba6f556ea5d95a124e3db65331920b19061df2da9eb9f81d93e\",\"dweb:/ipfs/QmfCTNk23WmVkhwjFAnhfwbei1oBUx7hPf2NN8Nck3gnqj\"]}},\"version\":1}",
  "bytecode": "0x6080806040523461003c57600080546001600160a01b03191673b0dc0bf642d339517438017fc185bb0f758a01d21790556133ae90816100428239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062410cb314612b91578063010ef3b314612a50578063046bdbcc146129e2578063083d88241461299e578063107e202f146125f55780631132beb5146125b657806319e8f4051461240c57806327820851146123d45780632e2dd102146123b6578063334181f2146122f0578063350ee3fc146122855780633da055181461220a57806342699651146121c857806351887b67146121335780635c4c9348146120f4578063683700871461209957806368f5dc99146114af57806370419a8114611479578063704b6c02146114075780637d3e9db8146113e9578063932e0f6d14611339578063abf72abb146112f6578063c3c0fdea14611293578063c967ede8146111df578063d688780214610f17578063dd09a96814610e2f578063f7dc57141461017d5763f851a4401461014f57600080fd5b34610178576000366003190112610178576000546040516001600160a01b039091168152602090f35b600080fd5b3461017857610180366003190112610178576024356001600160401b038111610178576101ae903690600401612cd2565b6064356001600160401b038111610178576101cd903690600401612cd2565b6084356001600160401b038111610178576101ec903690600401612cd2565b9160a4356001600160401b0381116101785761020c903690600401612cd2565b9060c4356001600160401b0381116101785761022c903690600401612cd2565b60e4356001600160401b0381116101785761024b903690600401612cd2565b610104356001600160401b0381116101785761026b903690600401612cd2565b91610124356001600160401b0381116101785761028c903690600401612cd2565b94610144356001600160401b038111610178576102ad903690600401612cd2565b97610164356001600160401b038111610178576102ce903690600401612cd2565b97600435600052600660205260018060a01b036001604060002001541633600052600260205260ff6040600020541680610e18575b15610db5576103129033613115565b15610d5f576004356000526006602052604060002096600960205260406000208054600160401b8110156107dc5761034f91600182018155612f6a565b610d4957888103610c53575b508051906001600160401b0382116107dc5781906103898261038060028d0154612da5565b60028d01612ffb565b602090601f8311600114610be157600092610bd6575b50508160011b916000199060031b1c19161760028801555b60443560038801558051906001600160401b0382116107dc5781906103ec826103e360048c0154612da5565b60048c01612ffb565b602090601f8311600114610b6457600092610b59575b50508160011b916000199060031b1c19161760048701555b8051906001600160401b0382116107dc5781906104478261043e60058b0154612da5565b60058b01612ffb565b602090601f8311600114610ae757600092610adc575b50508160011b916000199060031b1c19161760058601555b8051906001600160401b0382116107dc5781906104a28261049960068a0154612da5565b60068a01612ffb565b602090601f8311600114610a6a57600092610a5f575b50508160011b916000199060031b1c19161760068501555b8051906001600160401b0382116107dc5781906104fd826104f46007890154612da5565b60078901612ffb565b602090601f83116001146109ed576000926109e2575b50508160011b916000199060031b1c19161760078401555b8051906001600160401b0382116107dc5781906105588261054f6008880154612da5565b60088801612ffb565b602090601f831160011461097057600092610965575b50508160011b916000199060031b1c19161760088301555b8051906001600160401b0382116107dc5781906105b3826105aa6009870154612da5565b60098701612ffb565b602090601f83116001146108f3576000926108e8575b50508160011b916000199060031b1c19161760098201555b81516001600160401b0381116107dc5761060b81610602600a850154612da5565b600a8501612ffb565b806020601f821160011461087b57600091610870575b508160011b916000199060031b1c191617600a8201555b83516001600160401b0381116107dc5761066281610659600b850154612da5565b600b8501612ffb565b6020601f82116001146107fd578190600c9495966000926107f2575b50508160011b916000199060031b1c191617600b8201555b01918051926001600160401b0384116107dc576106bd846106b78354612da5565b83612ffb565b602093601f811160011461074e579161073e918361073095947f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1397600091610743575b508160011b916000199060031b1c19161790555b6040519384936004358552606060208601526060850190612d28565b908382036040850152612d28565b0390a1005b905083015188610700565b601f1981168260005260206000209060005b8181106107c457508261073e94927f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1398610730989795600194106107ab575b5050811b019055610714565b85015160001960f88460031b161c19169055888061079f565b85880151835560209788019760019093019201610760565b634e487b7160e01b600052604160045260246000fd5b01519050868061067e565b600b830160005260206000209560005b601f19841681106108585750958291600c959697600194601f1981161061083f575b505050811b01600b820155610696565b015160001960f88460031b161c1916905586808061082f565b8282015188556001909701966020928301920161080d565b905083015186610621565b9150600a830160005260206000206000925b601f19831684106108d0576001935082601f198116106108b7575b5050811b01600a820155610638565b85015160001960f88460031b161c1916905586806108a8565b8581015182556020938401936001909201910161088d565b0151905086806105c9565b9250600984016000526020600020906000935b601f198416851061094a576001945083601f19811610610931575b505050811b0160098201556105e1565b015160001960f88460031b161c19169055868080610921565b81810151835560209485019460019093019290910190610906565b01519050878061056e565b9250600885016000526020600020906000935b601f19841685106109c7576001945083601f198116106109ae575b505050811b016008830155610586565b015160001960f88460031b161c1916905587808061099e565b81810151835560209485019460019093019290910190610983565b015190508880610513565b9250600786016000526020600020906000935b601f1984168510610a44576001945083601f19811610610a2b575b505050811b01600784015561052b565b015160001960f88460031b161c19169055888080610a1b565b81810151835560209485019460019093019290910190610a00565b0151905089806104b8565b9250600687016000526020600020906000935b601f1984168510610ac1576001945083601f19811610610aa8575b505050811b0160068501556104d0565b015160001960f88460031b161c19169055898080610a98565b81810151835560209485019460019093019290910190610a7d565b015190508a8061045d565b9250600588016000526020600020906000935b601f1984168510610b3e576001945083601f19811610610b25575b505050811b016005860155610475565b015160001960f88460031b161c191690558a8080610b15565b81810151835560209485019460019093019290910190610afa565b015190508b80610402565b9250600489016000526020600020906000935b601f1984168510610bbb576001945083601f19811610610ba2575b505050811b01600487015561041a565b015160001960f88460031b161c191690558b8080610b92565b81810151835560209485019460019093019290910190610b77565b015190508c8061039f565b925060028a016000526020600020906000935b601f1984168510610c38576001945083601f19811610610c1f575b505050811b0160028801556103b7565b015160001960f88460031b161c191690558c8080610c0f565b81810151835560209485019460019093019290910190610bf4565b610d4390895481556001810160018060a01b0360018c0154166001600160601b0360a01b825416179055610c8d60028b01600283016132a0565b60038a01546003820155610ca760048b01600483016132a0565b610cb760058b01600583016132a0565b610cc760068b01600683016132a0565b610cd760078b01600783016132a0565b610ce760088b01600883016132a0565b610cf760098b01600983016132a0565b610d07600a8b01600a83016132a0565b610d17600b8b01600b83016132a0565b610d27600c8b01600c83016132a0565b600d60ff818c01541691019060ff801983541691151516179055565b8b61035b565b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152602860248201527f446f6b74657220746964616b2064692d61737369676e20756e74756b2070617360448201526734b2b71034b7349760c11b6064820152608490fd5b60405162461bcd60e51b815260206004820152603560248201527f48616e796120646f6b74657220616b7469662079616e672062697361206d656d6044820152743832b93130b93ab4903932b5b0b69036b2b234b99760591b6064820152608490fd5b50600160205260ff60016040600020015416610303565b34610178576040366003190112610178576024356004356000526009602052604060002090815481101561017857610e6691612f6a565b50805460018201546001600160a01b031691610f1390610e8860028201612ddf565b906003810154610e9a60048301612ddf565b610ea660058401612ddf565b610eb260068501612ddf565b610ebe60078601612ddf565b610eca60088701612ddf565b91610ed760098801612ddf565b93610ee4600a8901612ddf565b95610ef1600b8a01612ddf565b9760ff600d610f02600c8d01612ddf565b9b0154169a6040519e8f9e8f612e85565b0390f35b346101785760208060031936011261017857600435600052600990818152604060002080546001600160401b0381116107dc579160405192600594610f608383881b0186612cb1565b81855260009384528284208386019491855b8484106110df575050505050604051928184019082855251809152604081818601961b85010192916000955b828710610fab5785850386f35b909192938280600192603f1989820301855287519081518152848060a01b038383015116838201526110c26110ae61109a61108661107261105e61104c61103961102661100960408c015160408c6101c091829101528c0190612d28565b6060808d0151908c01526080808d0151908c8303908d0152612d28565b60a0808c0151908b8303908c0152612d28565b60c0808b0151908a8303908b0152612d28565b60e089015188820360e08a0152612d28565b610100808901519088830390890152612d28565b610120808801519087830390880152612d28565b610140808701519086830390870152612d28565b610160808601519085830390860152612d28565b610180808501519084830390850152612d28565b916101a08091015115159101529601920196019592919092610f9e565b600e8660019260409a989a516110f481612c7a565b86548152848060a01b0385880154168382015261111360028801612ddf565b60408201526003870154606082015261112e60048801612ddf565b608082015261113e8d8801612ddf565b60a082015261114f60068801612ddf565b60c082015261116060078801612ddf565b60e082015261117160088801612ddf565b610100820152611182868801612ddf565b610120820152611194600a8801612ddf565b6101408201526111a6600b8801612ddf565b6101608201526111b8600c8801612ddf565b61018082015260ff600d8801541615156101a0820152815201930193019291969496610f72565b3461017857602080600319360112610178576001600160a01b03611201612be9565b1660005260078152604060002060405190818382549182815201908192600052846000209060005b8682821061127f57868661123f82880383612cb1565b604051928392818401908285525180915260408401929160005b82811061126857505050500390f35b835185528695509381019392810192600101611259565b835485529093019260019283019201611229565b34610178576020366003190112610178576001600160a01b036112b4612be9565b1660005260016020526112ea604060002060ff60016112d283612ddf565b92015416604051928392604084526040840190612d28565b90151560208301520390f35b34610178576020366003190112610178576004356000908152600660205260409020805460018201546001600160a01b031691610f1390610e8860028201612ddf565b3461017857604036600319011261017857611352612be9565b6024359081151591828103610178577f3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a926113dc60409360018060a01b03906113a082600054163314612f86565b16928360005260026020526113bb60ff8660002054166130a4565b836000526001602052600185600020019060ff801983541691151516179055565b82519182526020820152a1005b34610178576000366003190112610178576020600454604051908152f35b34610178576020366003190112610178577f4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d6020611443612be9565b600054906001600160a01b039061145d3383851614612f86565b1680916001600160601b0360a01b1617600055604051908152a1005b346101785760403660031901126101785760206114a5611497612be9565b61149f612bff565b90613115565b6040519015158152f35b3461017857610180366003190112610178576114c9612be9565b6024356001600160401b038111610178576114e8903690600401612cd2565b906064356001600160401b03811161017857611508903690600401612cd2565b916084356001600160401b03811161017857611528903690600401612cd2565b9260a4356001600160401b03811161017857611548903690600401612cd2565b9360c4356001600160401b03811161017857611568903690600401612cd2565b9460e4356001600160401b03811161017857611588903690600401612cd2565b610104356001600160401b038111610178576115a8903690600401612cd2565b90610124356001600160401b038111610178576115c9903690600401612cd2565b97610144356001600160401b038111610178576115ea903690600401612cd2565b93610164356001600160401b0381116101785761160b903690600401612cd2565b956001600160a01b038a163303612039576116276008546130f0565b9788600855604051996116398b612c7a565b898b5260018060a01b038c1660208c015260408b015260443560608b015260808a015260a089015260c088015260e08701526101008601526101208501528561014085015261016084015261018083015260016101a08301526000526006602052604060002090805182556001820160018060a01b036020830151166001600160601b0360a01b82541617905560408101518051906001600160401b0382116107dc5781906116f8826116ef6002880154612da5565b60028801612ffb565b602090601f8311600114611fc757600092611fbc575b50508160011b916000199060031b1c19161760028301555b6060810151600383015560808101518051906001600160401b0382116107dc578190611762826117596004880154612da5565b60048801612ffb565b602090601f8311600114611f4a57600092611f3f575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116107dc5781906117c2826117b96005880154612da5565b60058801612ffb565b602090601f8311600114611ecd57600092611ec2575b50508160011b916000199060031b1c19161760058301555b60c08101518051906001600160401b0382116107dc578190611822826118196006880154612da5565b60068801612ffb565b602090601f8311600114611e5057600092611e45575b50508160011b916000199060031b1c19161760068301555b60e08101518051906001600160401b0382116107dc578190611882826118796007880154612da5565b60078801612ffb565b602090601f8311600114611dd357600092611dc8575b50508160011b916000199060031b1c19161760078301555b6101008101518051906001600160401b0382116107dc5781906118da8261054f6008880154612da5565b602090601f8311600114611d5657600092611d4b575b50508160011b916000199060031b1c19161760088301555b6101208101518051906001600160401b0382116107dc57819061193b826119326009880154612da5565b60098801612ffb565b602090601f8311600114611cd957600092611cce575b50508160011b916000199060031b1c19161760098301555b6101408101518051906001600160401b0382116107dc57819061199c82611993600a880154612da5565b600a8801612ffb565b602090601f8311600114611c5c57600092611c51575b50508160011b916000199060031b1c191617600a8301555b6101608101518051906001600160401b0382116107dc5781906119fd826119f4600b880154612da5565b600b8801612ffb565b602090601f8311600114611bdf57600092611bd4575b50508160011b916000199060031b1c191617600b8301555b600c82016101808201518051906001600160401b0382116107dc57611a5a82611a548554612da5565b85612ffb565b602090601f8311600114611b615792826101a093611aab979693600d96600092611b56575b50508160011b916000199060031b1c19161790555b0151151591019060ff801983541691151516179055565b6001600160a01b038116600090815260076020526040902060085481549391600160401b8510156107dc5784611b079160017f8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c99797018155612c62565b819291549060031b91821b91600019901b1916179055611b4a60085491604051938493845260018060a01b03166020840152608060408401526080830190612d28565b600160608301520390a1005b015190508a80611a7f565b90601f198316918460005260206000209260005b818110611bbc575093611aab979693600d9693600193836101a09810611ba3575b505050811b019055611a94565b015160001960f88460031b161c191690558a8080611b96565b92936020600181928786015181550195019301611b75565b015190508680611a13565b9250600b85016000526020600020906000935b601f1984168510611c36576001945083601f19811610611c1d575b505050811b01600b830155611a2b565b015160001960f88460031b161c19169055868080611c0d565b81810151835560209485019460019093019290910190611bf2565b0151905086806119b2565b9250600a85016000526020600020906000935b601f1984168510611cb3576001945083601f19811610611c9a575b505050811b01600a8301556119ca565b015160001960f88460031b161c19169055868080611c8a565b81810151835560209485019460019093019290910190611c6f565b015190508680611951565b9250600985016000526020600020906000935b601f1984168510611d30576001945083601f19811610611d17575b505050811b016009830155611969565b015160001960f88460031b161c19169055868080611d07565b81810151835560209485019460019093019290910190611cec565b0151905086806118f0565b9250600885016000526020600020906000935b601f1984168510611dad576001945083601f19811610611d94575b505050811b016008830155611908565b015160001960f88460031b161c19169055868080611d84565b81810151835560209485019460019093019290910190611d69565b015190508680611898565b9250600785016000526020600020906000935b601f1984168510611e2a576001945083601f19811610611e11575b505050811b0160078301556118b0565b015160001960f88460031b161c19169055868080611e01565b81810151835560209485019460019093019290910190611de6565b015190508680611838565b9250600685016000526020600020906000935b601f1984168510611ea7576001945083601f19811610611e8e575b505050811b016006830155611850565b015160001960f88460031b161c19169055868080611e7e565b81810151835560209485019460019093019290910190611e63565b0151905086806117d8565b9250600585016000526020600020906000935b601f1984168510611f24576001945083601f19811610611f0b575b505050811b0160058301556117f0565b015160001960f88460031b161c19169055868080611efb565b81810151835560209485019460019093019290910190611ee0565b015190508680611778565b9250600485016000526020600020906000935b601f1984168510611fa1576001945083601f19811610611f88575b505050811b016004830155611790565b015160001960f88460031b161c19169055868080611f78565b81810151835560209485019460019093019290910190611f5d565b01519050868061170e565b9250600285016000526020600020906000935b601f198416851061201e576001945083601f19811610612005575b505050811b016002830155611726565b015160001960f88460031b161c19169055868080611ff5565b81810151835560209485019460019093019290910190611fda565b60405162461bcd60e51b815260206004820152603260248201527f48616e79612070617369656e2079616e672062697361206d656d62756174207260448201527132b5b0b69036b2b234b99036b2b932b5b09760711b6064820152608490fd5b34610178576020366003190112610178576004356005548110156101785760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001546040516001600160a01b039091168152602090f35b34610178576020366003190112610178576001600160a01b03612115612be9565b166000526002602052602060ff604060002054166040519015158152f35b34610178576000366003190112610178576040518060055480825282602080930160056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09260005b858282106121a95750505061219592500383612cb1565b610f13604051928284938452830190612d68565b85546001600160a01b031684526001958601958895509301920161217e565b3461017857602036600319011261017857600435600454811015610178576121f1602091612c15565b905460405160039290921b1c6001600160a01b03168152f35b34610178576020366003190112610178576001600160a01b0361222b612be9565b1660005260016020526122706040600020610f1360ff60018301541661225c600261225585612ddf565b940161317d565b604051948594606086526060860190612d28565b91151560208501528382036040850152612d68565b34610178576020366003190112610178576001600160a01b036122a6612be9565b168060005260026020526122c160ff604060002054166130a4565b6000526001602052610f136122dc600260406000200161317d565b604051918291602083526020830190612d68565b346101785760003660031901126101785733600052600360205260ff60406000205416612365573360005260036020526040600020600160ff1982541617905561233933613040565b7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470586020604051338152a1005b60405162461bcd60e51b8152602060048201526024808201527f416e64612073756461682074657264616674617220736562616761692050617360448201526334b2b71760e11b6064820152608490fd5b34610178576000366003190112610178576020600854604051908152f35b3461017857602036600319011261017857610f136123f86123f3612be9565b6131d5565b604051918291602083526020830190612d28565b3461017857604036600319011261017857612425612be9565b61242d612bff565b9060018060a01b03809161244682600054163314612f86565b1680600052816020936002855261246460ff604060002054166130a4565b168060005260039384815260ff60406000205416156125725782600052600181526002604060002001946000948654955b8681106124f85750600160401b8610156107dc576124dc867fd9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a986001604099018155612c62565b81939154911b9185831b921b19161790558351928352820152a1005b8482612504838b612c62565b905490861b1c161461251e57612519906130f0565b612495565b60405162461bcd60e51b815260048101859052602660248201527f50617369656e20737564616820646974756761736b616e206b6520646f6b7465604482015265391034b7349760d11b6064820152608490fd5b6064906040519062461bcd60e51b82526004820152601760248201527f50617369656e20746964616b207465726461667461722e0000000000000000006044820152fd5b34610178576020366003190112610178576001600160a01b036125d7612be9565b166000526003602052602060ff604060002054166040519015158152f35b346101785760403660031901126101785761260e612be9565b6024356001600160401b0381116101785761262d903690600401612cd2565b61264260018060a01b03600054163314612f86565b6001600160a01b03821660009081526002602052604090205460ff16612959576001600160a01b03821660009081526003602052604090205460ff166129055760018060a01b03821660005260026020526040600020600160ff1982541617905560405191602083018381106001600160401b038211176107dc576040526000835260405192606084018481106001600160401b038211176107dc57604052828452602084019060018252604085015260018060a01b038216600052600160205260406000209084518051906001600160401b0382116107dc576127308261272a8654612da5565b86612ffb565b602090601f83116001146128925792826040959361278093600296600092612887575b50508160011b916000199060031b1c19161783555b511515600183019060ff801983541691151516179055565b01930151928351906001600160401b0382116107dc57600160401b948583116107dc57602090825484845580851061286a575b500190600052602060002060005b83811061284d5750505050600454928310156107dc576128088360017fc38147498c0c3f6433ae14d0586b30fef7b292e301be82700c6478971c423dce9501600455612c15565b81549060031b9060018060a01b038416821b9160018060a01b03901b191617905561073e60405192839260018060a01b03168352604060208401526040830190612d28565b82516001600160a01b0316818301556020909201916001016127c1565b612881908460005285846000209182019101612fe4565b876127b3565b015190508a80612753565b908460005260206000209160005b601f19851681106128ed575083612780936002969360019360409997601f198116106128d4575b505050811b018355612768565b015160001960f88460031b161c191690558a80806128c7565b919260206001819286850151815501940192016128a0565b60405162461bcd60e51b815260206004820152602660248201527f416c616d6174207375646168207465726461667461722073656261676169205060448201526530b9b4b2b71760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f446f6b746572207375646168207465726461667461722e0000000000000000006044820152606490fd5b34610178576020366003190112610178576129c460018060a01b03600054163314612f86565b6004356000908152600660205260409020600d01805460ff19169055005b3461017857602036600319011261017857600435600454811015612a0b576121f1602091612c15565b60405162461bcd60e51b815260206004820152601960248201527f496e64657820646f6b74657220746964616b2076616c69642e000000000000006044820152606490fd5b346101785760208060031936011261017857612a6a612be9565b9060018060a01b03612a8181600054163314612f86565b8216806000526002825260ff60406000205416612b3d57806000526003825260ff60406000205416612af857612aef7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470589382600052600384526040600020600160ff19825416179055613040565b604051908152a1005b60405162461bcd60e51b815260048101839052601760248201527f50617369656e207375646168207465726461667461722e0000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101839052602660248201527f416c616d6174207375646168207465726461667461722073656261676169204460448201526537b5ba32b91760d11b6064820152608490fd5b3461017857604036600319011261017857612baa612be9565b6001600160a01b031660009081526007602052604090208054602435919082101561017857602091612bdb91612c62565b90546040519160031b1c8152f35b600435906001600160a01b038216820361017857565b602435906001600160a01b038216820361017857565b600454811015612c4c5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015612c4c5760005260206000200190600090565b6101c081019081106001600160401b038211176107dc57604052565b604081019081106001600160401b038211176107dc57604052565b90601f801991011681019081106001600160401b038211176107dc57604052565b81601f82011215610178578035906001600160401b0382116107dc5760405192612d06601f8401601f191660200185612cb1565b8284526020838301011161017857816000926020809301838601378301015290565b919082519283825260005b848110612d54575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612d33565b90815180825260208080930193019160005b828110612d88575050505090565b83516001600160a01b031685529381019392810192600101612d7a565b90600182811c92168015612dd5575b6020831014612dbf57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612db4565b9060405191826000825492612df384612da5565b908184526001948581169081600014612e625750600114612e1f575b5050612e1d92500383612cb1565b565b9093915060005260209081600020936000915b818310612e4a575050612e1d93508201013880612e0f565b85548884018501529485019487945091830191612e32565b915050612e1d94506020925060ff191682840152151560051b8201013880612e0f565b9d9e9d6101a09c98612f09829f9c9699612efb612f629f9a612eed612f539f989d612f359c612f449f612f269c612eda91612f179c8c5260018060a01b031660208c01526101c08060408d01528b0190612d28565b9160608a015288820360808a0152612d28565b9086820360a0880152612d28565b9084820360c0860152612d28565b9160e0818403910152612d28565b8c81036101008e015290612d28565b908a82036101208c0152612d28565b908882036101408a0152612d28565b90868203610160880152612d28565b90848203610180860152612d28565b931515910152565b8054821015612c4c57600052600e602060002091020190600090565b15612f8d57565b60405162461bcd60e51b815260206004820152602960248201527f48616e79612061646d696e2079616e672062697361206d656c616b756b616e2060448201526830b5b9b49034b7349760b91b6064820152608490fd5b818110612fef575050565b60008155600101612fe4565b9190601f811161300a57505050565b612e1d926000526020600020906020601f840160051c83019310613036575b601f0160051c0190612fe4565b9091508190613029565b600554600160401b8110156107dc576001810180600555811015612c4c5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03909216919091179055565b156130ab57565b60405162461bcd60e51b815260206004820152601760248201527f446f6b74657220746964616b207465726461667461722e0000000000000000006044820152606490fd5b60001981146130ff5760010190565b634e487b7160e01b600052601160045260246000fd5b60018060a01b038091166000526001908160205260026040600020016000938154945b85811061314a57505050505050600090565b836131558285612c62565b9190548185169260031b1c16146131745761316f906130f0565b613138565b50505050905090565b9060405191828154918282526020928383019160005283600020936000905b8282106131b257505050612e1d92500383612cb1565b85546001600160a01b03168452600195860195889550938101939091019061319c565b6000546001600160a01b039182169116811461327e5780600052600260205260ff6040600020541661325b57600052600360205260ff604060002054166132395760405161322281612c96565b60078152662ab735b737bbb760c91b602082015290565b60405161324581612c96565b60068152652830b9b4b2b760d11b602082015290565b5060405161326881612c96565b60068152652237b5ba32b960d11b602082015290565b5060405161328b81612c96565b600581526420b236b4b760d91b602082015290565b90808214613374576132b28154612da5565b906001600160401b0382116107dc5781906132d18261272a8654612da5565b600090601f8311600114613308576000926132fd575b50508160011b916000199060031b1c1916179055565b0154905038806132e7565b81526020808220858352818320935090601f1985169083905b82821061335b575050908460019594939210613342575b505050811b019055565b015460001960f88460031b161c19169055388080613338565b8495819295850154815560018091019601940190613321565b505056fea26469706673582212200190edefb300020c5f7c32131ee5dd42950768af418bfab10c9e7ca5e1cdc58c64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c8062410cb314612b91578063010ef3b314612a50578063046bdbcc146129e2578063083d88241461299e578063107e202f146125f55780631132beb5146125b657806319e8f4051461240c57806327820851146123d45780632e2dd102146123b6578063334181f2146122f0578063350ee3fc146122855780633da055181461220a57806342699651146121c857806351887b67146121335780635c4c9348146120f4578063683700871461209957806368f5dc99146114af57806370419a8114611479578063704b6c02146114075780637d3e9db8146113e9578063932e0f6d14611339578063abf72abb146112f6578063c3c0fdea14611293578063c967ede8146111df578063d688780214610f17578063dd09a96814610e2f578063f7dc57141461017d5763f851a4401461014f57600080fd5b34610178576000366003190112610178576000546040516001600160a01b039091168152602090f35b600080fd5b3461017857610180366003190112610178576024356001600160401b038111610178576101ae903690600401612cd2565b6064356001600160401b038111610178576101cd903690600401612cd2565b6084356001600160401b038111610178576101ec903690600401612cd2565b9160a4356001600160401b0381116101785761020c903690600401612cd2565b9060c4356001600160401b0381116101785761022c903690600401612cd2565b60e4356001600160401b0381116101785761024b903690600401612cd2565b610104356001600160401b0381116101785761026b903690600401612cd2565b91610124356001600160401b0381116101785761028c903690600401612cd2565b94610144356001600160401b038111610178576102ad903690600401612cd2565b97610164356001600160401b038111610178576102ce903690600401612cd2565b97600435600052600660205260018060a01b036001604060002001541633600052600260205260ff6040600020541680610e18575b15610db5576103129033613115565b15610d5f576004356000526006602052604060002096600960205260406000208054600160401b8110156107dc5761034f91600182018155612f6a565b610d4957888103610c53575b508051906001600160401b0382116107dc5781906103898261038060028d0154612da5565b60028d01612ffb565b602090601f8311600114610be157600092610bd6575b50508160011b916000199060031b1c19161760028801555b60443560038801558051906001600160401b0382116107dc5781906103ec826103e360048c0154612da5565b60048c01612ffb565b602090601f8311600114610b6457600092610b59575b50508160011b916000199060031b1c19161760048701555b8051906001600160401b0382116107dc5781906104478261043e60058b0154612da5565b60058b01612ffb565b602090601f8311600114610ae757600092610adc575b50508160011b916000199060031b1c19161760058601555b8051906001600160401b0382116107dc5781906104a28261049960068a0154612da5565b60068a01612ffb565b602090601f8311600114610a6a57600092610a5f575b50508160011b916000199060031b1c19161760068501555b8051906001600160401b0382116107dc5781906104fd826104f46007890154612da5565b60078901612ffb565b602090601f83116001146109ed576000926109e2575b50508160011b916000199060031b1c19161760078401555b8051906001600160401b0382116107dc5781906105588261054f6008880154612da5565b60088801612ffb565b602090601f831160011461097057600092610965575b50508160011b916000199060031b1c19161760088301555b8051906001600160401b0382116107dc5781906105b3826105aa6009870154612da5565b60098701612ffb565b602090601f83116001146108f3576000926108e8575b50508160011b916000199060031b1c19161760098201555b81516001600160401b0381116107dc5761060b81610602600a850154612da5565b600a8501612ffb565b806020601f821160011461087b57600091610870575b508160011b916000199060031b1c191617600a8201555b83516001600160401b0381116107dc5761066281610659600b850154612da5565b600b8501612ffb565b6020601f82116001146107fd578190600c9495966000926107f2575b50508160011b916000199060031b1c191617600b8201555b01918051926001600160401b0384116107dc576106bd846106b78354612da5565b83612ffb565b602093601f811160011461074e579161073e918361073095947f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1397600091610743575b508160011b916000199060031b1c19161790555b6040519384936004358552606060208601526060850190612d28565b908382036040850152612d28565b0390a1005b905083015188610700565b601f1981168260005260206000209060005b8181106107c457508261073e94927f2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e1398610730989795600194106107ab575b5050811b019055610714565b85015160001960f88460031b161c19169055888061079f565b85880151835560209788019760019093019201610760565b634e487b7160e01b600052604160045260246000fd5b01519050868061067e565b600b830160005260206000209560005b601f19841681106108585750958291600c959697600194601f1981161061083f575b505050811b01600b820155610696565b015160001960f88460031b161c1916905586808061082f565b8282015188556001909701966020928301920161080d565b905083015186610621565b9150600a830160005260206000206000925b601f19831684106108d0576001935082601f198116106108b7575b5050811b01600a820155610638565b85015160001960f88460031b161c1916905586806108a8565b8581015182556020938401936001909201910161088d565b0151905086806105c9565b9250600984016000526020600020906000935b601f198416851061094a576001945083601f19811610610931575b505050811b0160098201556105e1565b015160001960f88460031b161c19169055868080610921565b81810151835560209485019460019093019290910190610906565b01519050878061056e565b9250600885016000526020600020906000935b601f19841685106109c7576001945083601f198116106109ae575b505050811b016008830155610586565b015160001960f88460031b161c1916905587808061099e565b81810151835560209485019460019093019290910190610983565b015190508880610513565b9250600786016000526020600020906000935b601f1984168510610a44576001945083601f19811610610a2b575b505050811b01600784015561052b565b015160001960f88460031b161c19169055888080610a1b565b81810151835560209485019460019093019290910190610a00565b0151905089806104b8565b9250600687016000526020600020906000935b601f1984168510610ac1576001945083601f19811610610aa8575b505050811b0160068501556104d0565b015160001960f88460031b161c19169055898080610a98565b81810151835560209485019460019093019290910190610a7d565b015190508a8061045d565b9250600588016000526020600020906000935b601f1984168510610b3e576001945083601f19811610610b25575b505050811b016005860155610475565b015160001960f88460031b161c191690558a8080610b15565b81810151835560209485019460019093019290910190610afa565b015190508b80610402565b9250600489016000526020600020906000935b601f1984168510610bbb576001945083601f19811610610ba2575b505050811b01600487015561041a565b015160001960f88460031b161c191690558b8080610b92565b81810151835560209485019460019093019290910190610b77565b015190508c8061039f565b925060028a016000526020600020906000935b601f1984168510610c38576001945083601f19811610610c1f575b505050811b0160028801556103b7565b015160001960f88460031b161c191690558c8080610c0f565b81810151835560209485019460019093019290910190610bf4565b610d4390895481556001810160018060a01b0360018c0154166001600160601b0360a01b825416179055610c8d60028b01600283016132a0565b60038a01546003820155610ca760048b01600483016132a0565b610cb760058b01600583016132a0565b610cc760068b01600683016132a0565b610cd760078b01600783016132a0565b610ce760088b01600883016132a0565b610cf760098b01600983016132a0565b610d07600a8b01600a83016132a0565b610d17600b8b01600b83016132a0565b610d27600c8b01600c83016132a0565b600d60ff818c01541691019060ff801983541691151516179055565b8b61035b565b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152602860248201527f446f6b74657220746964616b2064692d61737369676e20756e74756b2070617360448201526734b2b71034b7349760c11b6064820152608490fd5b60405162461bcd60e51b815260206004820152603560248201527f48616e796120646f6b74657220616b7469662079616e672062697361206d656d6044820152743832b93130b93ab4903932b5b0b69036b2b234b99760591b6064820152608490fd5b50600160205260ff60016040600020015416610303565b34610178576040366003190112610178576024356004356000526009602052604060002090815481101561017857610e6691612f6a565b50805460018201546001600160a01b031691610f1390610e8860028201612ddf565b906003810154610e9a60048301612ddf565b610ea660058401612ddf565b610eb260068501612ddf565b610ebe60078601612ddf565b610eca60088701612ddf565b91610ed760098801612ddf565b93610ee4600a8901612ddf565b95610ef1600b8a01612ddf565b9760ff600d610f02600c8d01612ddf565b9b0154169a6040519e8f9e8f612e85565b0390f35b346101785760208060031936011261017857600435600052600990818152604060002080546001600160401b0381116107dc579160405192600594610f608383881b0186612cb1565b81855260009384528284208386019491855b8484106110df575050505050604051928184019082855251809152604081818601961b85010192916000955b828710610fab5785850386f35b909192938280600192603f1989820301855287519081518152848060a01b038383015116838201526110c26110ae61109a61108661107261105e61104c61103961102661100960408c015160408c6101c091829101528c0190612d28565b6060808d0151908c01526080808d0151908c8303908d0152612d28565b60a0808c0151908b8303908c0152612d28565b60c0808b0151908a8303908b0152612d28565b60e089015188820360e08a0152612d28565b610100808901519088830390890152612d28565b610120808801519087830390880152612d28565b610140808701519086830390870152612d28565b610160808601519085830390860152612d28565b610180808501519084830390850152612d28565b916101a08091015115159101529601920196019592919092610f9e565b600e8660019260409a989a516110f481612c7a565b86548152848060a01b0385880154168382015261111360028801612ddf565b60408201526003870154606082015261112e60048801612ddf565b608082015261113e8d8801612ddf565b60a082015261114f60068801612ddf565b60c082015261116060078801612ddf565b60e082015261117160088801612ddf565b610100820152611182868801612ddf565b610120820152611194600a8801612ddf565b6101408201526111a6600b8801612ddf565b6101608201526111b8600c8801612ddf565b61018082015260ff600d8801541615156101a0820152815201930193019291969496610f72565b3461017857602080600319360112610178576001600160a01b03611201612be9565b1660005260078152604060002060405190818382549182815201908192600052846000209060005b8682821061127f57868661123f82880383612cb1565b604051928392818401908285525180915260408401929160005b82811061126857505050500390f35b835185528695509381019392810192600101611259565b835485529093019260019283019201611229565b34610178576020366003190112610178576001600160a01b036112b4612be9565b1660005260016020526112ea604060002060ff60016112d283612ddf565b92015416604051928392604084526040840190612d28565b90151560208301520390f35b34610178576020366003190112610178576004356000908152600660205260409020805460018201546001600160a01b031691610f1390610e8860028201612ddf565b3461017857604036600319011261017857611352612be9565b6024359081151591828103610178577f3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a926113dc60409360018060a01b03906113a082600054163314612f86565b16928360005260026020526113bb60ff8660002054166130a4565b836000526001602052600185600020019060ff801983541691151516179055565b82519182526020820152a1005b34610178576000366003190112610178576020600454604051908152f35b34610178576020366003190112610178577f4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d6020611443612be9565b600054906001600160a01b039061145d3383851614612f86565b1680916001600160601b0360a01b1617600055604051908152a1005b346101785760403660031901126101785760206114a5611497612be9565b61149f612bff565b90613115565b6040519015158152f35b3461017857610180366003190112610178576114c9612be9565b6024356001600160401b038111610178576114e8903690600401612cd2565b906064356001600160401b03811161017857611508903690600401612cd2565b916084356001600160401b03811161017857611528903690600401612cd2565b9260a4356001600160401b03811161017857611548903690600401612cd2565b9360c4356001600160401b03811161017857611568903690600401612cd2565b9460e4356001600160401b03811161017857611588903690600401612cd2565b610104356001600160401b038111610178576115a8903690600401612cd2565b90610124356001600160401b038111610178576115c9903690600401612cd2565b97610144356001600160401b038111610178576115ea903690600401612cd2565b93610164356001600160401b0381116101785761160b903690600401612cd2565b956001600160a01b038a163303612039576116276008546130f0565b9788600855604051996116398b612c7a565b898b5260018060a01b038c1660208c015260408b015260443560608b015260808a015260a089015260c088015260e08701526101008601526101208501528561014085015261016084015261018083015260016101a08301526000526006602052604060002090805182556001820160018060a01b036020830151166001600160601b0360a01b82541617905560408101518051906001600160401b0382116107dc5781906116f8826116ef6002880154612da5565b60028801612ffb565b602090601f8311600114611fc757600092611fbc575b50508160011b916000199060031b1c19161760028301555b6060810151600383015560808101518051906001600160401b0382116107dc578190611762826117596004880154612da5565b60048801612ffb565b602090601f8311600114611f4a57600092611f3f575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116107dc5781906117c2826117b96005880154612da5565b60058801612ffb565b602090601f8311600114611ecd57600092611ec2575b50508160011b916000199060031b1c19161760058301555b60c08101518051906001600160401b0382116107dc578190611822826118196006880154612da5565b60068801612ffb565b602090601f8311600114611e5057600092611e45575b50508160011b916000199060031b1c19161760068301555b60e08101518051906001600160401b0382116107dc578190611882826118796007880154612da5565b60078801612ffb565b602090601f8311600114611dd357600092611dc8575b50508160011b916000199060031b1c19161760078301555b6101008101518051906001600160401b0382116107dc5781906118da8261054f6008880154612da5565b602090601f8311600114611d5657600092611d4b575b50508160011b916000199060031b1c19161760088301555b6101208101518051906001600160401b0382116107dc57819061193b826119326009880154612da5565b60098801612ffb565b602090601f8311600114611cd957600092611cce575b50508160011b916000199060031b1c19161760098301555b6101408101518051906001600160401b0382116107dc57819061199c82611993600a880154612da5565b600a8801612ffb565b602090601f8311600114611c5c57600092611c51575b50508160011b916000199060031b1c191617600a8301555b6101608101518051906001600160401b0382116107dc5781906119fd826119f4600b880154612da5565b600b8801612ffb565b602090601f8311600114611bdf57600092611bd4575b50508160011b916000199060031b1c191617600b8301555b600c82016101808201518051906001600160401b0382116107dc57611a5a82611a548554612da5565b85612ffb565b602090601f8311600114611b615792826101a093611aab979693600d96600092611b56575b50508160011b916000199060031b1c19161790555b0151151591019060ff801983541691151516179055565b6001600160a01b038116600090815260076020526040902060085481549391600160401b8510156107dc5784611b079160017f8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c99797018155612c62565b819291549060031b91821b91600019901b1916179055611b4a60085491604051938493845260018060a01b03166020840152608060408401526080830190612d28565b600160608301520390a1005b015190508a80611a7f565b90601f198316918460005260206000209260005b818110611bbc575093611aab979693600d9693600193836101a09810611ba3575b505050811b019055611a94565b015160001960f88460031b161c191690558a8080611b96565b92936020600181928786015181550195019301611b75565b015190508680611a13565b9250600b85016000526020600020906000935b601f1984168510611c36576001945083601f19811610611c1d575b505050811b01600b830155611a2b565b015160001960f88460031b161c19169055868080611c0d565b81810151835560209485019460019093019290910190611bf2565b0151905086806119b2565b9250600a85016000526020600020906000935b601f1984168510611cb3576001945083601f19811610611c9a575b505050811b01600a8301556119ca565b015160001960f88460031b161c19169055868080611c8a565b81810151835560209485019460019093019290910190611c6f565b015190508680611951565b9250600985016000526020600020906000935b601f1984168510611d30576001945083601f19811610611d17575b505050811b016009830155611969565b015160001960f88460031b161c19169055868080611d07565b81810151835560209485019460019093019290910190611cec565b0151905086806118f0565b9250600885016000526020600020906000935b601f1984168510611dad576001945083601f19811610611d94575b505050811b016008830155611908565b015160001960f88460031b161c19169055868080611d84565b81810151835560209485019460019093019290910190611d69565b015190508680611898565b9250600785016000526020600020906000935b601f1984168510611e2a576001945083601f19811610611e11575b505050811b0160078301556118b0565b015160001960f88460031b161c19169055868080611e01565b81810151835560209485019460019093019290910190611de6565b015190508680611838565b9250600685016000526020600020906000935b601f1984168510611ea7576001945083601f19811610611e8e575b505050811b016006830155611850565b015160001960f88460031b161c19169055868080611e7e565b81810151835560209485019460019093019290910190611e63565b0151905086806117d8565b9250600585016000526020600020906000935b601f1984168510611f24576001945083601f19811610611f0b575b505050811b0160058301556117f0565b015160001960f88460031b161c19169055868080611efb565b81810151835560209485019460019093019290910190611ee0565b015190508680611778565b9250600485016000526020600020906000935b601f1984168510611fa1576001945083601f19811610611f88575b505050811b016004830155611790565b015160001960f88460031b161c19169055868080611f78565b81810151835560209485019460019093019290910190611f5d565b01519050868061170e565b9250600285016000526020600020906000935b601f198416851061201e576001945083601f19811610612005575b505050811b016002830155611726565b015160001960f88460031b161c19169055868080611ff5565b81810151835560209485019460019093019290910190611fda565b60405162461bcd60e51b815260206004820152603260248201527f48616e79612070617369656e2079616e672062697361206d656d62756174207260448201527132b5b0b69036b2b234b99036b2b932b5b09760711b6064820152608490fd5b34610178576020366003190112610178576004356005548110156101785760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001546040516001600160a01b039091168152602090f35b34610178576020366003190112610178576001600160a01b03612115612be9565b166000526002602052602060ff604060002054166040519015158152f35b34610178576000366003190112610178576040518060055480825282602080930160056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09260005b858282106121a95750505061219592500383612cb1565b610f13604051928284938452830190612d68565b85546001600160a01b031684526001958601958895509301920161217e565b3461017857602036600319011261017857600435600454811015610178576121f1602091612c15565b905460405160039290921b1c6001600160a01b03168152f35b34610178576020366003190112610178576001600160a01b0361222b612be9565b1660005260016020526122706040600020610f1360ff60018301541661225c600261225585612ddf565b940161317d565b604051948594606086526060860190612d28565b91151560208501528382036040850152612d68565b34610178576020366003190112610178576001600160a01b036122a6612be9565b168060005260026020526122c160ff604060002054166130a4565b6000526001602052610f136122dc600260406000200161317d565b604051918291602083526020830190612d68565b346101785760003660031901126101785733600052600360205260ff60406000205416612365573360005260036020526040600020600160ff1982541617905561233933613040565b7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470586020604051338152a1005b60405162461bcd60e51b8152602060048201526024808201527f416e64612073756461682074657264616674617220736562616761692050617360448201526334b2b71760e11b6064820152608490fd5b34610178576000366003190112610178576020600854604051908152f35b3461017857602036600319011261017857610f136123f86123f3612be9565b6131d5565b604051918291602083526020830190612d28565b3461017857604036600319011261017857612425612be9565b61242d612bff565b9060018060a01b03809161244682600054163314612f86565b1680600052816020936002855261246460ff604060002054166130a4565b168060005260039384815260ff60406000205416156125725782600052600181526002604060002001946000948654955b8681106124f85750600160401b8610156107dc576124dc867fd9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a986001604099018155612c62565b81939154911b9185831b921b19161790558351928352820152a1005b8482612504838b612c62565b905490861b1c161461251e57612519906130f0565b612495565b60405162461bcd60e51b815260048101859052602660248201527f50617369656e20737564616820646974756761736b616e206b6520646f6b7465604482015265391034b7349760d11b6064820152608490fd5b6064906040519062461bcd60e51b82526004820152601760248201527f50617369656e20746964616b207465726461667461722e0000000000000000006044820152fd5b34610178576020366003190112610178576001600160a01b036125d7612be9565b166000526003602052602060ff604060002054166040519015158152f35b346101785760403660031901126101785761260e612be9565b6024356001600160401b0381116101785761262d903690600401612cd2565b61264260018060a01b03600054163314612f86565b6001600160a01b03821660009081526002602052604090205460ff16612959576001600160a01b03821660009081526003602052604090205460ff166129055760018060a01b03821660005260026020526040600020600160ff1982541617905560405191602083018381106001600160401b038211176107dc576040526000835260405192606084018481106001600160401b038211176107dc57604052828452602084019060018252604085015260018060a01b038216600052600160205260406000209084518051906001600160401b0382116107dc576127308261272a8654612da5565b86612ffb565b602090601f83116001146128925792826040959361278093600296600092612887575b50508160011b916000199060031b1c19161783555b511515600183019060ff801983541691151516179055565b01930151928351906001600160401b0382116107dc57600160401b948583116107dc57602090825484845580851061286a575b500190600052602060002060005b83811061284d5750505050600454928310156107dc576128088360017fc38147498c0c3f6433ae14d0586b30fef7b292e301be82700c6478971c423dce9501600455612c15565b81549060031b9060018060a01b038416821b9160018060a01b03901b191617905561073e60405192839260018060a01b03168352604060208401526040830190612d28565b82516001600160a01b0316818301556020909201916001016127c1565b612881908460005285846000209182019101612fe4565b876127b3565b015190508a80612753565b908460005260206000209160005b601f19851681106128ed575083612780936002969360019360409997601f198116106128d4575b505050811b018355612768565b015160001960f88460031b161c191690558a80806128c7565b919260206001819286850151815501940192016128a0565b60405162461bcd60e51b815260206004820152602660248201527f416c616d6174207375646168207465726461667461722073656261676169205060448201526530b9b4b2b71760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f446f6b746572207375646168207465726461667461722e0000000000000000006044820152606490fd5b34610178576020366003190112610178576129c460018060a01b03600054163314612f86565b6004356000908152600660205260409020600d01805460ff19169055005b3461017857602036600319011261017857600435600454811015612a0b576121f1602091612c15565b60405162461bcd60e51b815260206004820152601960248201527f496e64657820646f6b74657220746964616b2076616c69642e000000000000006044820152606490fd5b346101785760208060031936011261017857612a6a612be9565b9060018060a01b03612a8181600054163314612f86565b8216806000526002825260ff60406000205416612b3d57806000526003825260ff60406000205416612af857612aef7f4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da470589382600052600384526040600020600160ff19825416179055613040565b604051908152a1005b60405162461bcd60e51b815260048101839052601760248201527f50617369656e207375646168207465726461667461722e0000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101839052602660248201527f416c616d6174207375646168207465726461667461722073656261676169204460448201526537b5ba32b91760d11b6064820152608490fd5b3461017857604036600319011261017857612baa612be9565b6001600160a01b031660009081526007602052604090208054602435919082101561017857602091612bdb91612c62565b90546040519160031b1c8152f35b600435906001600160a01b038216820361017857565b602435906001600160a01b038216820361017857565b600454811015612c4c5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015612c4c5760005260206000200190600090565b6101c081019081106001600160401b038211176107dc57604052565b604081019081106001600160401b038211176107dc57604052565b90601f801991011681019081106001600160401b038211176107dc57604052565b81601f82011215610178578035906001600160401b0382116107dc5760405192612d06601f8401601f191660200185612cb1565b8284526020838301011161017857816000926020809301838601378301015290565b919082519283825260005b848110612d54575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612d33565b90815180825260208080930193019160005b828110612d88575050505090565b83516001600160a01b031685529381019392810192600101612d7a565b90600182811c92168015612dd5575b6020831014612dbf57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612db4565b9060405191826000825492612df384612da5565b908184526001948581169081600014612e625750600114612e1f575b5050612e1d92500383612cb1565b565b9093915060005260209081600020936000915b818310612e4a575050612e1d93508201013880612e0f565b85548884018501529485019487945091830191612e32565b915050612e1d94506020925060ff191682840152151560051b8201013880612e0f565b9d9e9d6101a09c98612f09829f9c9699612efb612f629f9a612eed612f539f989d612f359c612f449f612f269c612eda91612f179c8c5260018060a01b031660208c01526101c08060408d01528b0190612d28565b9160608a015288820360808a0152612d28565b9086820360a0880152612d28565b9084820360c0860152612d28565b9160e0818403910152612d28565b8c81036101008e015290612d28565b908a82036101208c0152612d28565b908882036101408a0152612d28565b90868203610160880152612d28565b90848203610180860152612d28565b931515910152565b8054821015612c4c57600052600e602060002091020190600090565b15612f8d57565b60405162461bcd60e51b815260206004820152602960248201527f48616e79612061646d696e2079616e672062697361206d656c616b756b616e2060448201526830b5b9b49034b7349760b91b6064820152608490fd5b818110612fef575050565b60008155600101612fe4565b9190601f811161300a57505050565b612e1d926000526020600020906020601f840160051c83019310613036575b601f0160051c0190612fe4565b9091508190613029565b600554600160401b8110156107dc576001810180600555811015612c4c5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03909216919091179055565b156130ab57565b60405162461bcd60e51b815260206004820152601760248201527f446f6b74657220746964616b207465726461667461722e0000000000000000006044820152606490fd5b60001981146130ff5760010190565b634e487b7160e01b600052601160045260246000fd5b60018060a01b038091166000526001908160205260026040600020016000938154945b85811061314a57505050505050600090565b836131558285612c62565b9190548185169260031b1c16146131745761316f906130f0565b613138565b50505050905090565b9060405191828154918282526020928383019160005283600020936000905b8282106131b257505050612e1d92500383612cb1565b85546001600160a01b03168452600195860195889550938101939091019061319c565b6000546001600160a01b039182169116811461327e5780600052600260205260ff6040600020541661325b57600052600360205260ff604060002054166132395760405161322281612c96565b60078152662ab735b737bbb760c91b602082015290565b60405161324581612c96565b60068152652830b9b4b2b760d11b602082015290565b5060405161326881612c96565b60068152652237b5ba32b960d11b602082015290565b5060405161328b81612c96565b600581526420b236b4b760d91b602082015290565b90808214613374576132b28154612da5565b906001600160401b0382116107dc5781906132d18261272a8654612da5565b600090601f8311600114613308576000926132fd575b50508160011b916000199060031b1c1916179055565b0154905038806132e7565b81526020808220858352818320935090601f1985169083905b82821061335b575050908460019594939210613342575b505050811b019055565b015460001960f88460031b161c19169055388080613338565b8495819295850154815560018091019601940190613321565b505056fea26469706673582212200190edefb300020c5f7c32131ee5dd42950768af418bfab10c9e7ca5e1cdc58c64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "69:9617:0:-:0;;;;;;;1647:50;69:9617;;-1:-1:-1;;;;;;69:9617:0;1655:42;69:9617;;;;;;;;;;;;;",
  "deployedSourceMap": "69:9617:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;;;8656:10;69:9617;;;;;;;;;;;8656:22;69:9617;;2202:10;69:9617;;2193:8;69:9617;;;;;;;;2193:52;;;69:9617;;;;2359:45;2202:10;;2359:45;:::i;:::-;69:9617;;;;;;;8656:10;69:9617;;;;;;8793:18;69:9617;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;8877:10;;69:9617;8877:10;69:9617;2193:8;8877:10;;69:9617;;:::i;:::-;2193:8;8877:10;;69:9617;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:8;8877:10;;69:9617;;;;;8906:10;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;8935:19;;69:9617;8935:19;69:9617;;8935:19;;69:9617;;:::i;:::-;;8935:19;;69:9617;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8935:19;;69:9617;;;;;-1:-1:-1;;;;;69:9617:0;;;;8982:18;;69:9617;8982:18;69:9617;8982:18;;;69:9617;;:::i;:::-;8982:18;;;69:9617;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8982:18;;;69:9617;;;;;-1:-1:-1;;;;;69:9617:0;;;;9027:12;;69:9617;9027:12;69:9617;8656:10;9027:12;;69:9617;;:::i;:::-;8656:10;9027:12;;69:9617;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8656:10;9027:12;;69:9617;;;;;-1:-1:-1;;;;;69:9617:0;;;;9060:12;;69:9617;9060:12;69:9617;9060:12;;;69:9617;;:::i;:::-;9060:12;;;69:9617;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9060:12;;;69:9617;;;;;-1:-1:-1;;;;;69:9617:0;;;;9093:15;;69:9617;9093:15;69:9617;9093:15;;;69:9617;;:::i;:::-;9093:15;;;69:9617;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9093:15;;;69:9617;;;;;-1:-1:-1;;;;;69:9617:0;;;;9132:11;;69:9617;9132:11;69:9617;8793:18;9132:11;;69:9617;;:::i;:::-;8793:18;9132:11;;69:9617;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8793:18;9132:11;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;9163:14;69:9617;9163:14;;;69:9617;;:::i;:::-;9163:14;;;69:9617;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9163:14;;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;9200:10;69:9617;9200:10;;;69:9617;;:::i;:::-;9200:10;;;69:9617;:::i;:::-;;;;;;;;;;;9229:13;69:9617;;;;;;;;;;;;;;;;;;;;;;;9200:10;;;69:9617;;9229:13;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;9269:46;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;9269:46;;;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9269:46;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;9200:10;;;69:9617;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;9229:13;69:9617;;;;;;;;;;;;;;;;;;;9200:10;;;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9163:14;;;;;69:9617;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;9163:14;;;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;9132:11;;8793:18;9132:11;;69:9617;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;8793:18;9132:11;;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;9093:15;;;;;69:9617;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;9093:15;;;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;9060:12;;;;;69:9617;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;9060:12;;;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;9027:12;;8656:10;9027:12;;69:9617;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;8656:10;9027:12;;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;8982:18;;;;;69:9617;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;8982:18;;;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;8935:19;;69:9617;8935:19;;69:9617;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;8935:19;;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;8877:10;;2193:8;8877:10;;69:9617;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;2193:8;8877:10;;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;2193:8;69:9617;;2193:8;69:9617;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;8656:10;69:9617;;8656:10;69:9617;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;8793:18;69:9617;;8793:18;69:9617;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;2193:52;69:9617;;;;;;;;;2217:28;69:9617;;2193:52;;69:9617;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;1075:59;69:9617;;;;;;;;1075:59;;;;;;;;:::i;:::-;-1:-1:-1;69:9617:0;;;1075:59;;69:9617;-1:-1:-1;;;;;69:9617:0;;;;1075:59;;;;;:::i;:::-;;69:9617;1075:59;;69:9617;1075:59;69:9617;1075:59;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;69:9617;1075:59;;;;;;:::i;:::-;;;69:9617;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9497:18;69:9617;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;:::i;:::-;;;;6771:18;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;-1:-1:-1;;;;;69:9617:0;;:::i;:::-;;;;;;;;;;;;;233:44;;;:::i;:::-;;;69:9617;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;890:49;69:9617;;;;;;;;890:49;;69:9617;-1:-1:-1;;;;;69:9617:0;;;;890:49;;;;;:::i;69:9617::-;;;;;;-1:-1:-1;;69:9617:0;;;;;;:::i;:::-;;;;;;;;;;;;;3917:35;69:9617;3867:34;69:9617;;;;;;;;1746:110;69:9617;;;;1768:10;:19;1746:110;:::i;:::-;69:9617;;;;;3811:8;69:9617;;3803:53;69:9617;;;;;;3803:53;:::i;:::-;69:9617;;;;;;;;;;3867:25;69:9617;;;;;;;;;;;;;;;3867:34;69:9617;;;;;;;;;3917:35;69:9617;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;7081:26;69:9617;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;1746:110;1768:10;69:9617;;;1768:19;1746:110;:::i;:::-;69:9617;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;7081:26;69:9617;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;69:9617:0;;2570:10;:20;69:9617;;7610:17;;69:9617;7610:17;:::i;:::-;69:9617;;7610:17;69:9617;;;;;;;:::i;:::-;;;;;;;;;;;;7668:350;;69:9617;;7668:350;;69:9617;;;;7668:350;;69:9617;;7668:350;;69:9617;;7668:350;;69:9617;;7668:350;;69:9617;;7668:350;;69:9617;;7668:350;;69:9617;;7668:350;;69:9617;7668:350;69:9617;7668:350;;69:9617;;7668:350;;69:9617;;7668:350;;69:9617;;7668:350;;;69:9617;;;7638:10;69:9617;;;;;;;;;;;;;;;;;;;7668:350;;69:9617;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;7668:350;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7668:350;;69:9617;;;;;;7668:350;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7668:350;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7668:350;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;7638:10;69:9617;;;;:::i;:::-;7638:10;69:9617;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7638:10;69:9617;;;;;7668:350;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7668:350;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;7610:17;69:9617;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7610:17;69:9617;;;;;7668:350;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7668:350;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7668:350;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7668:350;;69:9617;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;7668:350;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7668:350;69:9617;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;7610:17;69:9617;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;8094:64;69:9617;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7610:17;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;8094:64;;;69:9617;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7668:350;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;7610:17;69:9617;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;7610:17;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;7638:10;69:9617;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;7638:10;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;446:29;69:9617;446:29;;;;;;69:9617;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;-1:-1:-1;;;;;69:9617:0;;:::i;:::-;;;;284:40;69:9617;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;6931:12;69:9617;;;;;;;;;6931:12;69:9617;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;380:29;;;;;;69:9617;380:29;;:::i;:::-;69:9617;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;-1:-1:-1;;;;;69:9617:0;;:::i;:::-;;;;;;;;;;;;;;5636:7;;69:9617;;;5645:16;69:9617;;;:::i;:::-;5645:16;;69:9617;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:9617:0;;;;-1:-1:-1;;;;;69:9617:0;;:::i;:::-;;;;;5261:8;69:9617;;5253:53;69:9617;;;;;;5253:53;:::i;:::-;69:9617;;;;;;;5261:8;69:9617;;;5324:34;69:9617;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:9617:0;;;;6140:10;69:9617;;;;;;;;;;;;;6140:10;69:9617;;;;;;;;6226:4;69:9617;;;;;;;;6241:29;6140:10;6241:29;:::i;:::-;6286:27;69:9617;;;6140:10;69:9617;;6286:27;69:9617;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;1007:27;69:9617;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;69:9617:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;1746:110;69:9617;;;;1768:10;:19;1746:110;:::i;:::-;69:9617;;;;;;;4135:8;69:9617;;4127:53;69:9617;;;;;;4127:53;:::i;:::-;69:9617;;;;;;;;;;;;;;;;;;;;;;;;4135:8;69:9617;;;4290:34;4340:10;69:9617;;;;4335:188;4352:23;;;;;;69:9617;-1:-1:-1;;;69:9617:0;;;;;;;4575:40;69:9617;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;4575:40;69:9617;4377:3;4401:15;;;;;;:::i;:::-;69:9617;;;;;;;4401:26;4397:115;;4377:3;;;:::i;:::-;4340:10;;4397:115;69:9617;;-1:-1:-1;;;4448:48:0;;69:9617;4448:48;;69:9617;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;4448:48;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;-1:-1:-1;;;;;69:9617:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;:::i;:::-;1746:110;69:9617;;;;;;;;1768:10;:19;1746:110;:::i;:::-;-1:-1:-1;;;;;69:9617:0;;;;;;2884:8;69:9617;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;2884:8;69:9617;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;3077:118;;69:9617;;;;;3077:118;;69:9617;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;2884:8;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3077:118;;69:9617;;;;;-1:-1:-1;;;;;69:9617:0;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3248:31;69:9617;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;;;2884:8;69:9617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;1746:110;69:9617;;;;;;;;1768:10;:19;1746:110;:::i;:::-;69:9617;;;;;;9646:10;69:9617;;;;;9646:21;;69:9617;;-1:-1:-1;;69:9617:0;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;;3568:27;;69:9617;;;3643:19;69:9617;3643:19;;:::i;69:9617::-;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1746:110;69:9617;;;;1768:10;:19;1746:110;:::i;:::-;69:9617;;;;;5792:8;69:9617;;;;;;;;;;;;;;;;;;;;;;;;5963:26;6005:24;69:9617;;;;;;;;;;;;;;;;;;;5963:26;:::i;:::-;69:9617;;;;;6005:24;69:9617;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;:::i;:::-;-1:-1:-1;;;;;69:9617:0;;;;;946:52;69:9617;;;;;;;;;;;946:52;;;;;69:9617;946:52;;;;:::i;:::-;69:9617;;;;;;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;69:9617:0;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;69:9617:0;;;;-1:-1:-1;69:9617:0;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;-1:-1:-1;69:9617:0;;;-1:-1:-1;69:9617:0;:::o;:::-;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;69:9617:0;;;;-1:-1:-1;69:9617:0;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;69:9617:0;;;-1:-1:-1;69:9617:0;;;;;-1:-1:-1;69:9617:0;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;69:9617:0;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;69:9617:0;;;;;5963:12;69:9617;-1:-1:-1;;;69:9617:0;;;;;;;;;5963:12;69:9617;;;;;;5963:12;-1:-1:-1;69:9617:0;;;;;-1:-1:-1;;;;;;69:9617:0;-1:-1:-1;;;;;69:9617:0;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;69:9617:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;69:9617:0;;;;;;;:::o;:::-;;;;;;;;;;;;4682:384;69:9617;;;;;;;;-1:-1:-1;69:9617:0;;;;;;4844:34;69:9617;-1:-1:-1;69:9617:0;4844:34;-1:-1:-1;69:9617:0;;;4889:147;4906:21;;;;;;5046:12;;;;;;-1:-1:-1;4682:384:0;:::o;4929:3::-;4953:13;;;;;:::i;:::-;69:9617;;;;;;;;;;;4953:24;4949:76;;4929:3;;;:::i;:::-;4894:10;;4949:76;4998:11;;;;;;;:::o;69:9617::-;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;;-1:-1:-1;69:9617:0;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;-1:-1:-1;69:9617:0;;;;;;;;;;6351:246;6447:5;69:9617;-1:-1:-1;;;;;69:9617:0;;;;;6438:14;;6434:34;;69:9617;6447:5;69:9617;6483:8;69:9617;;;;6447:5;69:9617;;;6479:36;;6447:5;69:9617;6530:8;69:9617;;;;6447:5;69:9617;;;6526:36;;69:9617;;;;;:::i;:::-;;;;-1:-1:-1;;;69:9617:0;;;;6351:246;:::o;6526:36::-;69:9617;;;;;:::i;:::-;;;;-1:-1:-1;;;69:9617:0;;;;6547:15;:::o;6479:36::-;69:9617;;;;;;:::i;:::-;;;;-1:-1:-1;;;69:9617:0;;;;6500:15;:::o;6434:34::-;69:9617;;;;;;:::i;:::-;;;;-1:-1:-1;;;69:9617:0;;;;6454:14;:::o;69:9617::-;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;69:9617:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;69:9617:0;;;;;;;;;;;;;;;;;;-1:-1:-1;69:9617:0;-1:-1:-1;;69:9617:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract RekamMedis {\r\n    address public admin;\r\n\r\n    struct Dokter {\r\n        string nama;\r\n        bool aktif;\r\n        address[] assignedPasien;\r\n    }\r\n\r\n    mapping(address => Dokter) public dataDokter;\r\n    mapping(address => bool) public isDokter;\r\n    mapping(address => bool) public isPasien;\r\n\r\n    address[] public daftarDokter; // daftar semua alamat dokter\r\n    address[] public daftarPasien; // daftar semua alamat pasien\r\n\r\n    struct RekamMedisData {\r\n        uint id;\r\n        address pasien;\r\n        string nama;\r\n        uint umur;\r\n        string golonganDarah;\r\n        string tanggalLahir;\r\n        string gender;\r\n        string alamat;\r\n        string noTelepon;\r\n        string email;\r\n        string diagnosa;\r\n        string foto;\r\n        string catatan;\r\n        bool valid;\r\n    }\r\n\r\n    mapping(uint => RekamMedisData) public rekamMedis;\r\n    mapping(address => uint[]) public rekamMedisByPasien;\r\n\r\n    uint public rekamMedisCount;\r\n    // Versi history rekam medis\r\n    mapping(uint => RekamMedisData[]) public rekamMedisVersions;\r\n    event RekamMedisDitambahkan(\r\n        uint id,\r\n        address pasien,\r\n        string diagnosa,\r\n        bool valid\r\n    );\r\n    event RekamMedisDiperbarui(uint id, string diagnosa, string catatan);\r\n    event AdminDitetapkan(address newAdmin);\r\n    event DokterTerdaftar(address dokter, string nama);\r\n    event DokterStatusDiubah(address dokter, bool aktif);\r\n    event PasienDiassignKeDokter(address dokter, address pasien);\r\n    event PasienTerdaftar(address pasien);\r\n\r\n    constructor() {\r\n        admin = 0xB0dC0Bf642d339517438017Fc185Bb0f758A01D2;\r\n    }\r\n\r\n    modifier hanyaAdmin() {\r\n        require(\r\n            msg.sender == admin,\r\n            \"Hanya admin yang bisa melakukan aksi ini.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaDokterAktif() {\r\n        require(\r\n            isDokter[msg.sender] && dataDokter[msg.sender].aktif,\r\n            \"Hanya dokter aktif yang bisa memperbarui rekam medis.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaDokterAktifUntukPasien(address _pasien) {\r\n        require(\r\n            isDokter[msg.sender] && dataDokter[msg.sender].aktif,\r\n            \"Hanya dokter aktif yang bisa memperbarui rekam medis.\"\r\n        );\r\n        require(\r\n            isPasienAssignedToDokter(msg.sender, _pasien),\r\n            \"Dokter tidak di-assign untuk pasien ini.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier hanyaPasien(address pasien) {\r\n        require(\r\n            msg.sender == pasien,\r\n            \"Hanya pasien yang bisa membuat rekam medis mereka.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    // Register dokter baru dengan nama dan aktifkan langsung\r\n    function registerDokter(\r\n        address _dokter,\r\n        string memory _nama\r\n    ) public hanyaAdmin {\r\n        require(!isDokter[_dokter], \"Dokter sudah terdaftar.\");\r\n        require(!isPasien[_dokter], \"Alamat sudah terdaftar sebagai Pasien.\");\r\n        isDokter[_dokter] = true;\r\n        dataDokter[_dokter] = Dokter({\r\n            nama: _nama,\r\n            aktif: true,\r\n            assignedPasien: new address[](0)\r\n        });\r\n        daftarDokter.push(_dokter);\r\n        emit DokterTerdaftar(_dokter, _nama);\r\n    }\r\n\r\n    // Ambil total dokter terdaftar\r\n    function totalDokter() public view returns (uint) {\r\n        return daftarDokter.length;\r\n    }\r\n\r\n    // Ambil alamat dokter berdasarkan index\r\n    function getDokterByIndex(uint index) public view returns (address) {\r\n        require(index < daftarDokter.length, \"Index dokter tidak valid.\");\r\n        return daftarDokter[index];\r\n    }\r\n\r\n    // Set status dokter aktif/nonaktif\r\n    function setStatusDokter(address _dokter, bool _aktif) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        dataDokter[_dokter].aktif = _aktif;\r\n        emit DokterStatusDiubah(_dokter, _aktif);\r\n    }\r\n\r\n    // Assign pasien ke dokter tertentu\r\n    function assignPasienToDokter(\r\n        address _dokter,\r\n        address _pasien\r\n    ) public hanyaAdmin {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        require(isPasien[_pasien], \"Pasien tidak terdaftar.\");\r\n\r\n        address[] storage pasienDokter = dataDokter[_dokter].assignedPasien;\r\n        for (uint i = 0; i < pasienDokter.length; i++) {\r\n            if (pasienDokter[i] == _pasien) {\r\n                revert(\"Pasien sudah ditugaskan ke dokter ini.\");\r\n            }\r\n        }\r\n        pasienDokter.push(_pasien);\r\n        emit PasienDiassignKeDokter(_dokter, _pasien);\r\n    }\r\n\r\n    // Cek apakah pasien sudah diassign ke dokter\r\n    function isPasienAssignedToDokter(\r\n        address _dokter,\r\n        address _pasien\r\n    ) public view returns (bool) {\r\n        address[] storage pasienList = dataDokter[_dokter].assignedPasien;\r\n        for (uint i = 0; i < pasienList.length; i++) {\r\n            if (pasienList[i] == _pasien) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Ambil daftar pasien yang diassign ke dokter tertentu\r\n    function getAssignedPasienByDokter(\r\n        address _dokter\r\n    ) public view returns (address[] memory) {\r\n        require(isDokter[_dokter], \"Dokter tidak terdaftar.\");\r\n        return dataDokter[_dokter].assignedPasien;\r\n    }\r\n\r\n    // Get data dokter\r\n    function getDokter(\r\n        address _dokter\r\n    )\r\n        public\r\n        view\r\n        returns (string memory nama, bool aktif, address[] memory pasien)\r\n    {\r\n        Dokter storage d = dataDokter[_dokter];\r\n        return (d.nama, d.aktif, d.assignedPasien);\r\n    }\r\n\r\n    // Register pasien oleh admin\r\n    function registerPasien(address _pasien) public hanyaAdmin {\r\n        require(!isDokter[_pasien], \"Alamat sudah terdaftar sebagai Dokter.\");\r\n        require(!isPasien[_pasien], \"Pasien sudah terdaftar.\");\r\n        isPasien[_pasien] = true;\r\n        daftarPasien.push(_pasien);\r\n        emit PasienTerdaftar(_pasien);\r\n    }\r\n\r\n    // Self register pasien\r\n    function selfRegisterPasien() public {\r\n        require(!isPasien[msg.sender], \"Anda sudah terdaftar sebagai Pasien.\");\r\n        isPasien[msg.sender] = true;\r\n        daftarPasien.push(msg.sender);\r\n        emit PasienTerdaftar(msg.sender);\r\n    }\r\n\r\n    // Get role user\r\n    function getUserRole(address _user) public view returns (string memory) {\r\n        if (_user == admin) return \"Admin\";\r\n        if (isDokter[_user]) return \"Dokter\";\r\n        if (isPasien[_user]) return \"Pasien\";\r\n        return \"Unknown\";\r\n    }\r\n\r\n    // Ambil daftar rekam medis milik pasien\r\n    function getRekamMedisIdsByPasien(\r\n        address pasien\r\n    ) public view returns (uint[] memory) {\r\n        return rekamMedisByPasien[pasien];\r\n    }\r\n\r\n    // Ambil daftar semua pasien\r\n    function getDaftarPasien() public view returns (address[] memory) {\r\n        return daftarPasien;\r\n    }\r\n\r\n    // Set admin baru\r\n    function setAdmin(address _newAdmin) public hanyaAdmin {\r\n        admin = _newAdmin;\r\n        emit AdminDitetapkan(_newAdmin);\r\n    }\r\n\r\n    // Tambah rekam medis pasien\r\n    function tambahRekamMedis(\r\n        address _pasien,\r\n        string memory _nama,\r\n        uint _umur,\r\n        string memory _golonganDarah,\r\n        string memory _tanggalLahir,\r\n        string memory _gender,\r\n        string memory _alamat,\r\n        string memory _noTelepon,\r\n        string memory _email,\r\n        string memory _diagnosa,\r\n        string memory _foto,\r\n        string memory _catatan\r\n    ) public hanyaPasien(_pasien) {\r\n        rekamMedisCount++;\r\n        rekamMedis[rekamMedisCount] = RekamMedisData(\r\n            rekamMedisCount,\r\n            _pasien,\r\n            _nama,\r\n            _umur,\r\n            _golonganDarah,\r\n            _tanggalLahir,\r\n            _gender,\r\n            _alamat,\r\n            _noTelepon,\r\n            _email,\r\n            _diagnosa,\r\n            _foto,\r\n            _catatan,\r\n            true\r\n        );\r\n        rekamMedisByPasien[_pasien].push(rekamMedisCount);\r\n        emit RekamMedisDitambahkan(rekamMedisCount, _pasien, _diagnosa, true);\r\n    }\r\n\r\n    // Update rekam medis dokter aktif\r\n    function updateRekamMedis(\r\n        uint _id,\r\n        string memory _nama,\r\n        uint _umur,\r\n        string memory _golonganDarah,\r\n        string memory _tanggalLahir,\r\n        string memory _gender,\r\n        string memory _alamat,\r\n        string memory _noTelepon,\r\n        string memory _email,\r\n        string memory _diagnosa,\r\n        string memory _foto,\r\n        string memory _catatan\r\n    ) public hanyaDokterAktifUntukPasien(rekamMedis[_id].pasien) {\r\n        RekamMedisData storage rekam = rekamMedis[_id];\r\n        // Simpan versi lama ke array versi\r\n        rekamMedisVersions[_id].push(rekam);\r\n\r\n        // Update data rekam medis\r\n        rekam.nama = _nama;\r\n        rekam.umur = _umur;\r\n        rekam.golonganDarah = _golonganDarah;\r\n        rekam.tanggalLahir = _tanggalLahir;\r\n        rekam.gender = _gender;\r\n        rekam.alamat = _alamat;\r\n        rekam.noTelepon = _noTelepon;\r\n        rekam.email = _email;\r\n        rekam.diagnosa = _diagnosa;\r\n        rekam.foto = _foto;\r\n        rekam.catatan = _catatan;\r\n        emit RekamMedisDiperbarui(_id, _diagnosa, _catatan);\r\n    }\r\n\r\n    // Fungsi untuk ambil versi rekam medis\r\n    function getRekamMedisVersions(\r\n        uint _id\r\n    ) public view returns (RekamMedisData[] memory) {\r\n        return rekamMedisVersions[_id];\r\n    }\r\n\r\n    // Nonaktifkan rekam medis (admin)\r\n    function nonaktifkanRekamMedis(uint _id) public hanyaAdmin {\r\n        rekamMedis[_id].valid = false;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\TA\\Rekam_Medis_Blockchain\\rekam_medis_backend\\contracts\\RekamMedis.sol",
  "ast": {
    "absolutePath": "project:/contracts/RekamMedis.sol",
    "exportedSymbols": {
      "RekamMedis": [
        836
      ]
    },
    "id": 837,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "RekamMedis",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 836,
        "linearizedBaseContracts": [
          836
        ],
        "name": "RekamMedis",
        "nameLocation": "78:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 3,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "111:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 836,
            "src": "96:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "96:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RekamMedis.Dokter",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "nama",
                "nameLocation": "157:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "150:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "150:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "aktif",
                "nameLocation": "177:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "172:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "assignedPasien",
                "nameLocation": "203:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "193:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9,
                  "nodeType": "ArrayTypeName",
                  "src": "193:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Dokter",
            "nameLocation": "132:6:0",
            "nodeType": "StructDefinition",
            "scope": 836,
            "src": "125:100:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3c0fdea",
            "id": 16,
            "mutability": "mutable",
            "name": "dataDokter",
            "nameLocation": "267:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 836,
            "src": "233:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
              "typeString": "mapping(address => struct RekamMedis.Dokter)"
            },
            "typeName": {
              "id": 15,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "241:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "233:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                "typeString": "mapping(address => struct RekamMedis.Dokter)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 14,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 13,
                  "name": "Dokter",
                  "nameLocations": [
                    "252:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "252:6:0"
                },
                "referencedDeclaration": 11,
                "src": "252:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                  "typeString": "struct RekamMedis.Dokter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c4c9348",
            "id": 20,
            "mutability": "mutable",
            "name": "isDokter",
            "nameLocation": "316:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 836,
            "src": "284:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 19,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "292:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "284:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 18,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "303:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1132beb5",
            "id": 24,
            "mutability": "mutable",
            "name": "isPasien",
            "nameLocation": "363:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 836,
            "src": "331:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 23,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "339:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "331:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 22,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "350:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "42699651",
            "id": 27,
            "mutability": "mutable",
            "name": "daftarDokter",
            "nameLocation": "397:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 836,
            "src": "380:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "380:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 26,
              "nodeType": "ArrayTypeName",
              "src": "380:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68370087",
            "id": 30,
            "mutability": "mutable",
            "name": "daftarPasien",
            "nameLocation": "463:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 836,
            "src": "446:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "446:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "446:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RekamMedis.RekamMedisData",
            "id": 59,
            "members": [
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "552:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "547:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "547:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "pasien",
                "nameLocation": "573:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "565:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 33,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "565:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "nama",
                "nameLocation": "597:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "590:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "590:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "umur",
                "nameLocation": "617:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "612:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "612:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "golonganDarah",
                "nameLocation": "639:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "632:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 39,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "632:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "tanggalLahir",
                "nameLocation": "670:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "663:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 41,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "gender",
                "nameLocation": "700:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "693:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 43,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "alamat",
                "nameLocation": "724:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "717:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 45,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "noTelepon",
                "nameLocation": "748:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "741:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 47,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "741:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "email",
                "nameLocation": "775:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "768:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 49,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "768:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "diagnosa",
                "nameLocation": "798:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "791:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 51,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "791:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "foto",
                "nameLocation": "824:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "817:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 53,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "817:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "catatan",
                "nameLocation": "846:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "839:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 55,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "839:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "869:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 59,
                "src": "864:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 57,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "864:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RekamMedisData",
            "nameLocation": "521:14:0",
            "nodeType": "StructDefinition",
            "scope": 836,
            "src": "514:368:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "abf72abb",
            "id": 64,
            "mutability": "mutable",
            "name": "rekamMedis",
            "nameLocation": "929:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 836,
            "src": "890:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
              "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData)"
            },
            "typeName": {
              "id": 63,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 60,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "898:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "890:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 62,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 61,
                  "name": "RekamMedisData",
                  "nameLocations": [
                    "906:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59,
                  "src": "906:14:0"
                },
                "referencedDeclaration": 59,
                "src": "906:14:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                  "typeString": "struct RekamMedis.RekamMedisData"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "00410cb3",
            "id": 69,
            "mutability": "mutable",
            "name": "rekamMedisByPasien",
            "nameLocation": "980:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 836,
            "src": "946:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 68,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "954:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "946:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 66,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "965:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 67,
                "nodeType": "ArrayTypeName",
                "src": "965:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2e2dd102",
            "id": 71,
            "mutability": "mutable",
            "name": "rekamMedisCount",
            "nameLocation": "1019:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 836,
            "src": "1007:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1007:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd09a968",
            "id": 77,
            "mutability": "mutable",
            "name": "rekamMedisVersions",
            "nameLocation": "1116:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 836,
            "src": "1075:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData[])"
            },
            "typeName": {
              "id": 76,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 72,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1083:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1075:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 74,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 73,
                    "name": "RekamMedisData",
                    "nameLocations": [
                      "1091:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 59,
                    "src": "1091:14:0"
                  },
                  "referencedDeclaration": 59,
                  "src": "1091:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                    "typeString": "struct RekamMedis.RekamMedisData"
                  }
                },
                "id": 75,
                "nodeType": "ArrayTypeName",
                "src": "1091:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr",
                  "typeString": "struct RekamMedis.RekamMedisData[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8647b41d1ffdc302f876f0e70e0c442d110a3c8bad284218f99616149394c997",
            "id": 87,
            "name": "RekamMedisDitambahkan",
            "nameLocation": "1147:21:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1184:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1179:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1205:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1197:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "diagnosa",
                  "nameLocation": "1229:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1222:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "1253:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1248:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1168:97:0"
            },
            "src": "1141:125:0"
          },
          {
            "anonymous": false,
            "eventSelector": "2a3c8ca9ac6f36396c175111b8f04207d249d61d733222e37c97a5ed7cfa7e13",
            "id": 95,
            "name": "RekamMedisDiperbarui",
            "nameLocation": "1278:20:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1304:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1299:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "diagnosa",
                  "nameLocation": "1315:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1308:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "catatan",
                  "nameLocation": "1332:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1325:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:42:0"
            },
            "src": "1272:69:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4d644268affe3d5bee1f2f5cb981613ce82c79f04442f0d58c544d9cd09b2f8d",
            "id": 99,
            "name": "AdminDitetapkan",
            "nameLocation": "1353:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "1377:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1369:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:18:0"
            },
            "src": "1347:40:0"
          },
          {
            "anonymous": false,
            "eventSelector": "c38147498c0c3f6433ae14d0586b30fef7b292e301be82700c6478971c423dce",
            "id": 105,
            "name": "DokterTerdaftar",
            "nameLocation": "1399:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1423:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1415:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nama",
                  "nameLocation": "1438:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1431:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1414:29:0"
            },
            "src": "1393:51:0"
          },
          {
            "anonymous": false,
            "eventSelector": "3dcd68c14f5f191f12b3b56bf35d5d7eb22447e9ec685290967b4558822ca98a",
            "id": 111,
            "name": "DokterStatusDiubah",
            "nameLocation": "1456:18:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1483:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1475:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "aktif",
                  "nameLocation": "1496:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1491:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1491:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1474:28:0"
            },
            "src": "1450:53:0"
          },
          {
            "anonymous": false,
            "eventSelector": "d9a2627959a7f46a8b96c10424cdae1f1b65151551cd206b119aca54c0a86a5a",
            "id": 117,
            "name": "PasienDiassignKeDokter",
            "nameLocation": "1515:22:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dokter",
                  "nameLocation": "1546:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1538:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1562:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1554:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1537:32:0"
            },
            "src": "1509:61:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4b58b2df530813522df235c26662546cdf2164ef8e0f7c6d18f415d15da47058",
            "id": 121,
            "name": "PasienTerdaftar",
            "nameLocation": "1582:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "1606:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1598:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:16:0"
            },
            "src": "1576:38:0"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1636:69:0",
              "statements": [
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1647:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307842306443304266363432643333393531373433383031374663313835426230663735384130314432",
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1655:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xB0dC0Bf642d339517438017Fc185Bb0f758A01D2"
                    },
                    "src": "1647:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:50:0"
                }
              ]
            },
            "id": 129,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1633:2:0"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1636:0:0"
            },
            "scope": 836,
            "src": "1622:83:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1735:141:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 132,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1768:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1772:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1768:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 134,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1782:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1768:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612061646d696e2079616e672062697361206d656c616b756b616e20616b736920696e692e",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1802:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40743133d152203b81977e888be4a239119d67c3c029e27406bd4fbf4c6eff2f",
                          "typeString": "literal_string \"Hanya admin yang bisa melakukan aksi ini.\""
                        },
                        "value": "Hanya admin yang bisa melakukan aksi ini."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40743133d152203b81977e888be4a239119d67c3c029e27406bd4fbf4c6eff2f",
                          "typeString": "literal_string \"Hanya admin yang bisa melakukan aksi ini.\""
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1746:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1746:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:110:0"
                },
                {
                  "id": 139,
                  "nodeType": "PlaceholderStatement",
                  "src": "1867:1:0"
                }
              ]
            },
            "id": 141,
            "name": "hanyaAdmin",
            "nameLocation": "1722:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:2:0"
            },
            "src": "1713:163:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1912:186:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 144,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1945:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 147,
                          "indexExpression": {
                            "expression": {
                              "id": 145,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1954:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1958:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1954:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1945:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 148,
                              "name": "dataDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "1969:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                                "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                              }
                            },
                            "id": 151,
                            "indexExpression": {
                              "expression": {
                                "id": 149,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1980:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1984:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1980:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1969:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dokter_$11_storage",
                              "typeString": "struct RekamMedis.Dokter storage ref"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1992:5:0",
                          "memberName": "aktif",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "1969:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1945:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e796120646f6b74657220616b7469662079616e672062697361206d656d70657262617275692072656b616d206d656469732e",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2012:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        },
                        "value": "Hanya dokter aktif yang bisa memperbarui rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1923:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1923:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1923:155:0"
                },
                {
                  "id": 157,
                  "nodeType": "PlaceholderStatement",
                  "src": "2089:1:0"
                }
              ]
            },
            "id": 159,
            "name": "hanyaDokterAktif",
            "nameLocation": "1893:16:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1909:2:0"
            },
            "src": "1884:214:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "2160:332:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 164,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2193:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 167,
                          "indexExpression": {
                            "expression": {
                              "id": 165,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2202:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2206:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2202:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2193:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 168,
                              "name": "dataDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "2217:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                                "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                              }
                            },
                            "id": 171,
                            "indexExpression": {
                              "expression": {
                                "id": 169,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2228:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2232:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2228:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2217:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dokter_$11_storage",
                              "typeString": "struct RekamMedis.Dokter storage ref"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2240:5:0",
                          "memberName": "aktif",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "2217:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2193:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e796120646f6b74657220616b7469662079616e672062697361206d656d70657262617275692072656b616d206d656469732e",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2260:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        },
                        "value": "Hanya dokter aktif yang bisa memperbarui rekam medis."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4ac9a8083d47e295346fe41ad65b030e86333f94c7671a6d515f141a4f88ed7",
                          "typeString": "literal_string \"Hanya dokter aktif yang bisa memperbarui rekam medis.\""
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2171:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2171:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:155:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 179,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2384:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2388:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2384:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 181,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "2396:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 178,
                          "name": "isPasienAssignedToDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 430,
                          "src": "2359:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2359:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b2064692d61737369676e20756e74756b2070617369656e20696e692e",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2419:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e82baccf1116aea183061ae2d562c35c217635aaf6d8edae2e53db74fd1d63d",
                          "typeString": "literal_string \"Dokter tidak di-assign untuk pasien ini.\""
                        },
                        "value": "Dokter tidak di-assign untuk pasien ini."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e82baccf1116aea183061ae2d562c35c217635aaf6d8edae2e53db74fd1d63d",
                          "typeString": "literal_string \"Dokter tidak di-assign untuk pasien ini.\""
                        }
                      ],
                      "id": 177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2337:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2337:135:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "2337:135:0"
                },
                {
                  "id": 186,
                  "nodeType": "PlaceholderStatement",
                  "src": "2483:1:0"
                }
              ]
            },
            "id": 188,
            "name": "hanyaDokterAktifUntukPasien",
            "nameLocation": "2115:27:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "2151:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "2143:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2142:17:0"
            },
            "src": "2106:386:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "2537:151:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2570:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2574:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2570:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 195,
                          "name": "pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "2584:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2570:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48616e79612070617369656e2079616e672062697361206d656d627561742072656b616d206d65646973206d6572656b612e",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2605:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be9e5faf1ada86bba8df6c823638bf7d94a2e628e433585b67a75bd6684f5304",
                          "typeString": "literal_string \"Hanya pasien yang bisa membuat rekam medis mereka.\""
                        },
                        "value": "Hanya pasien yang bisa membuat rekam medis mereka."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be9e5faf1ada86bba8df6c823638bf7d94a2e628e433585b67a75bd6684f5304",
                          "typeString": "literal_string \"Hanya pasien yang bisa membuat rekam medis mereka.\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2548:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2548:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:120:0"
                },
                {
                  "id": 200,
                  "nodeType": "PlaceholderStatement",
                  "src": "2679:1:0"
                }
              ]
            },
            "id": 202,
            "name": "hanyaPasien",
            "nameLocation": "2509:11:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "2529:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2521:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2521:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2520:16:0"
            },
            "src": "2500:188:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "2864:423:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2883:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 212,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2884:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 214,
                          "indexExpression": {
                            "id": 213,
                            "name": "_dokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2893:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2884:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b746572207375646168207465726461667461722e",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2903:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_244ba53ff803a73914781092e4815e3084e42d1edb577a9193f81c0183023344",
                          "typeString": "literal_string \"Dokter sudah terdaftar.\""
                        },
                        "value": "Dokter sudah terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_244ba53ff803a73914781092e4815e3084e42d1edb577a9193f81c0183023344",
                          "typeString": "literal_string \"Dokter sudah terdaftar.\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2875:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2875:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "2875:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2948:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 220,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2949:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 222,
                          "indexExpression": {
                            "id": 221,
                            "name": "_dokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2958:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2949:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c616d61742073756461682074657264616674617220736562616761692050617369656e2e",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2968:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84c42e7ccb88d3ba71eb5ceba45ba7a042208342e460783b267a4a0a677d60f2",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Pasien.\""
                        },
                        "value": "Alamat sudah terdaftar sebagai Pasien."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84c42e7ccb88d3ba71eb5ceba45ba7a042208342e460783b267a4a0a677d60f2",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Pasien.\""
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2940:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:69:0"
                },
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 227,
                        "name": "isDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3020:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 229,
                      "indexExpression": {
                        "id": 228,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "3029:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3020:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3040:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3020:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3020:24:0"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 233,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3055:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "id": 234,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "3066:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3055:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 237,
                          "name": "_nama",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "3105:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3132:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3181:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3167:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 239,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3171:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 240,
                              "nodeType": "ArrayTypeName",
                              "src": "3171:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3167:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "id": 236,
                        "name": "Dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "3077:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Dokter_$11_storage_ptr_$",
                          "typeString": "type(struct RekamMedis.Dokter storage pointer)"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3099:4:0",
                        "3125:5:0",
                        "3151:14:0"
                      ],
                      "names": [
                        "nama",
                        "aktif",
                        "assignedPasien"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3077:118:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_memory_ptr",
                        "typeString": "struct RekamMedis.Dokter memory"
                      }
                    },
                    "src": "3055:140:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dokter_$11_storage",
                      "typeString": "struct RekamMedis.Dokter storage ref"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "3055:140:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 250,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "3224:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 247,
                        "name": "daftarDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "3206:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3219:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3206:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3206:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "3206:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "3264:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 255,
                        "name": "_nama",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "3273:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 253,
                      "name": "DokterTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "3248:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3248:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "EmitStatement",
                  "src": "3243:36:0"
                }
              ]
            },
            "functionSelector": "107e202f",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 209,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 208,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "2853:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "2853:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2853:10:0"
              }
            ],
            "name": "registerDokter",
            "nameLocation": "2768:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "2801:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "2793:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2793:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "2833:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "2819:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2782:63:0"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2864:0:0"
            },
            "scope": 836,
            "src": "2759:528:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "3382:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 264,
                      "name": "daftarDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3400:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3413:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3400:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 263,
                  "id": 266,
                  "nodeType": "Return",
                  "src": "3393:26:0"
                }
              ]
            },
            "functionSelector": "7d3e9db8",
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDokter",
            "nameLocation": "3341:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3352:2:0"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "3376:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3375:6:0"
            },
            "scope": 836,
            "src": "3332:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "3549:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 276,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "3568:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 277,
                            "name": "daftarDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "3576:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3589:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3576:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3568:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e64657820646f6b74657220746964616b2076616c69642e",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3597:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3e7eef6eca0aa2543ab5b1b1fefb44d677dd8a64bfa1603b451f59a63157404",
                          "typeString": "literal_string \"Index dokter tidak valid.\""
                        },
                        "value": "Index dokter tidak valid."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3e7eef6eca0aa2543ab5b1b1fefb44d677dd8a64bfa1603b451f59a63157404",
                          "typeString": "literal_string \"Index dokter tidak valid.\""
                        }
                      ],
                      "id": 275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3560:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:65:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 283,
                      "name": "daftarDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3643:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 285,
                    "indexExpression": {
                      "id": 284,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "3656:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3643:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 274,
                  "id": 286,
                  "nodeType": "Return",
                  "src": "3636:26:0"
                }
              ]
            },
            "functionSelector": "046bdbcc",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDokterByIndex",
            "nameLocation": "3490:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3512:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "3507:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3507:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3506:12:0"
            },
            "returnParameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "3540:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3539:9:0"
            },
            "scope": 836,
            "src": "3481:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "3792:168:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 298,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3811:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 300,
                        "indexExpression": {
                          "id": 299,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "3820:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3811:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3830:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3803:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3803:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "3803:53:0"
                },
                {
                  "expression": {
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 304,
                          "name": "dataDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "3867:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                            "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                          }
                        },
                        "id": 306,
                        "indexExpression": {
                          "id": 305,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "3878:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3867:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$11_storage",
                          "typeString": "struct RekamMedis.Dokter storage ref"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3887:5:0",
                      "memberName": "aktif",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "3867:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 308,
                      "name": "_aktif",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "3895:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3867:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "3867:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 312,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3936:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 313,
                        "name": "_aktif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "3945:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 311,
                      "name": "DokterStatusDiubah",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3917:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3917:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "EmitStatement",
                  "src": "3912:40:0"
                }
              ]
            },
            "functionSelector": "932e0f6d",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 295,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 294,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "3781:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "3781:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3781:10:0"
              }
            ],
            "name": "setStatusDokter",
            "nameLocation": "3728:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "3752:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3744:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_aktif",
                  "nameLocation": "3766:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3761:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3761:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3743:30:0"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3792:0:0"
            },
            "scope": 836,
            "src": "3719:241:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "4116:507:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 327,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4135:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 329,
                        "indexExpression": {
                          "id": 328,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "4144:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4135:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4154:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4127:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4127:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "4127:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 334,
                          "name": "isPasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "4199:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 336,
                        "indexExpression": {
                          "id": 335,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "4208:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4199:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617369656e20746964616b207465726461667461722e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4218:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4782a23f877cf9a2cb61015c9d3479d89c3bb6c338a0540e7268bf1efb9819c",
                          "typeString": "literal_string \"Pasien tidak terdaftar.\""
                        },
                        "value": "Pasien tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4782a23f877cf9a2cb61015c9d3479d89c3bb6c338a0540e7268bf1efb9819c",
                          "typeString": "literal_string \"Pasien tidak terdaftar.\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4191:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4191:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "4191:53:0"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "pasienDokter",
                      "nameLocation": "4275:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "4257:30:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4257:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 343,
                        "nodeType": "ArrayTypeName",
                        "src": "4257:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 345,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4290:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 347,
                      "indexExpression": {
                        "id": 346,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "4301:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4290:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4310:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "4290:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4257:67:0"
                },
                {
                  "body": {
                    "id": 372,
                    "nodeType": "Block",
                    "src": "4382:141:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 361,
                              "name": "pasienDokter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 344,
                              "src": "4401:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 363,
                            "indexExpression": {
                              "id": 362,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "4414:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4401:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 364,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "4420:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4401:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 371,
                        "nodeType": "IfStatement",
                        "src": "4397:115:0",
                        "trueBody": {
                          "id": 370,
                          "nodeType": "Block",
                          "src": "4429:83:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "50617369656e20737564616820646974756761736b616e206b6520646f6b74657220696e692e",
                                    "id": 367,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4455:40:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c614628bd02fed10ab7037aa9ef96182341b00560e3c47f216b8b35ae12ce6a9",
                                      "typeString": "literal_string \"Pasien sudah ditugaskan ke dokter ini.\""
                                    },
                                    "value": "Pasien sudah ditugaskan ke dokter ini."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c614628bd02fed10ab7037aa9ef96182341b00560e3c47f216b8b35ae12ce6a9",
                                      "typeString": "literal_string \"Pasien sudah ditugaskan ke dokter ini.\""
                                    }
                                  ],
                                  "id": 366,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967277,
                                    4294967277
                                  ],
                                  "referencedDeclaration": 4294967277,
                                  "src": "4448:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4448:48:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 369,
                              "nodeType": "ExpressionStatement",
                              "src": "4448:48:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 354,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "4352:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 355,
                        "name": "pasienDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4356:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4369:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4356:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4352:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 373,
                  "initializationExpression": {
                    "assignments": [
                      351
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4345:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "4340:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4340:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 353,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4349:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4340:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4377:3:0",
                      "subExpression": {
                        "id": 358,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "4377:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 360,
                    "nodeType": "ExpressionStatement",
                    "src": "4377:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4335:188:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 377,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "4551:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 374,
                        "name": "pasienDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4533:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4546:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4533:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4533:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "4533:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 381,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "4598:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 382,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "4607:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 380,
                      "name": "PasienDiassignKeDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "4575:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4575:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "EmitStatement",
                  "src": "4570:45:0"
                }
              ]
            },
            "functionSelector": "19e8f405",
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 324,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 323,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "4105:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "4105:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4105:10:0"
              }
            ],
            "name": "assignPasienToDokter",
            "nameLocation": "4018:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "4057:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4049:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4049:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "4083:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4075:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4075:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4038:59:0"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4116:0:0"
            },
            "scope": 836,
            "src": "4009:614:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "4802:264:0",
              "statements": [
                {
                  "assignments": [
                    399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 399,
                      "mutability": "mutable",
                      "name": "pasienList",
                      "nameLocation": "4831:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 429,
                      "src": "4813:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4813:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 398,
                        "nodeType": "ArrayTypeName",
                        "src": "4813:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 404,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 400,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4844:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 402,
                      "indexExpression": {
                        "id": 401,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 388,
                        "src": "4855:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4844:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4864:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "4844:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4813:65:0"
                },
                {
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "4934:102:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 416,
                              "name": "pasienList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 399,
                              "src": "4953:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 418,
                            "indexExpression": {
                              "id": 417,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "4964:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4953:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 419,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "4970:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4953:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 424,
                        "nodeType": "IfStatement",
                        "src": "4949:76:0",
                        "trueBody": {
                          "id": 423,
                          "nodeType": "Block",
                          "src": "4979:46:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5005:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 394,
                              "id": 422,
                              "nodeType": "Return",
                              "src": "4998:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 409,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "4906:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 410,
                        "name": "pasienList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "4910:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4921:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4910:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4906:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 426,
                  "initializationExpression": {
                    "assignments": [
                      406
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4899:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "4894:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4894:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 408,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4903:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4894:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4929:3:0",
                      "subExpression": {
                        "id": 413,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "4929:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 415,
                    "nodeType": "ExpressionStatement",
                    "src": "4929:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4889:147:0"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5053:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 394,
                  "id": 428,
                  "nodeType": "Return",
                  "src": "5046:12:0"
                }
              ]
            },
            "functionSelector": "70419a81",
            "id": 430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPasienAssignedToDokter",
            "nameLocation": "4691:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "4734:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "4726:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4726:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "4760:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "4752:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4752:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4715:59:0"
            },
            "returnParameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "4796:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4796:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4795:6:0"
            },
            "scope": 836,
            "src": "4682:384:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "5242:124:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 439,
                          "name": "isDokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "5261:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 441,
                        "indexExpression": {
                          "id": 440,
                          "name": "_dokter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 432,
                          "src": "5270:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5261:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6b74657220746964616b207465726461667461722e",
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5280:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        },
                        "value": "Dokter tidak terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d27c592323fdbb8d7c2e1d1c95883c529172b4d8b5daac9ce6dd01495b6ae0",
                          "typeString": "literal_string \"Dokter tidak terdaftar.\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5253:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5253:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "5253:53:0"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 445,
                        "name": "dataDokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "5324:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                          "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                        }
                      },
                      "id": 447,
                      "indexExpression": {
                        "id": 446,
                        "name": "_dokter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "5335:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5324:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage",
                        "typeString": "struct RekamMedis.Dokter storage ref"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5344:14:0",
                    "memberName": "assignedPasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "5324:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 437,
                  "id": 449,
                  "nodeType": "Return",
                  "src": "5317:41:0"
                }
              ]
            },
            "functionSelector": "350ee3fc",
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssignedPasienByDokter",
            "nameLocation": "5144:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "5188:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "5180:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5180:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5169:33:0"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "5224:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 434,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5224:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 435,
                    "nodeType": "ArrayTypeName",
                    "src": "5224:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5223:18:0"
            },
            "scope": 836,
            "src": "5135:231:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "5560:110:0",
              "statements": [
                {
                  "assignments": [
                    465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 465,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "5586:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 478,
                      "src": "5571:16:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                        "typeString": "struct RekamMedis.Dokter"
                      },
                      "typeName": {
                        "id": 464,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 463,
                          "name": "Dokter",
                          "nameLocations": [
                            "5571:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "5571:6:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "5571:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                          "typeString": "struct RekamMedis.Dokter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 469,
                  "initialValue": {
                    "baseExpression": {
                      "id": 466,
                      "name": "dataDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "5590:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Dokter_$11_storage_$",
                        "typeString": "mapping(address => struct RekamMedis.Dokter storage ref)"
                      }
                    },
                    "id": 468,
                    "indexExpression": {
                      "id": 467,
                      "name": "_dokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "5601:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5590:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dokter_$11_storage",
                      "typeString": "struct RekamMedis.Dokter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5571:38:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 470,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 465,
                          "src": "5628:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5630:4:0",
                        "memberName": "nama",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "5628:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 472,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 465,
                          "src": "5636:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5638:5:0",
                        "memberName": "aktif",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "5636:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 474,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 465,
                          "src": "5645:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dokter_$11_storage_ptr",
                            "typeString": "struct RekamMedis.Dokter storage pointer"
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5647:14:0",
                        "memberName": "assignedPasien",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "5645:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "id": 476,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5627:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_bool_$_t_array$_t_address_$dyn_storage_$",
                      "typeString": "tuple(string storage ref,bool,address[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 462,
                  "id": 477,
                  "nodeType": "Return",
                  "src": "5620:42:0"
                }
              ]
            },
            "functionSelector": "3da05518",
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDokter",
            "nameLocation": "5407:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "_dokter",
                  "nameLocation": "5435:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "5427:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5427:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5416:33:0"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "nama",
                  "nameLocation": "5512:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "5498:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5498:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "aktif",
                  "nameLocation": "5523:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "5518:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5518:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "5547:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "5530:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 459,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5530:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 460,
                    "nodeType": "ArrayTypeName",
                    "src": "5530:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5497:57:0"
            },
            "scope": 836,
            "src": "5398:272:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "5772:265:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5791:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 487,
                            "name": "isDokter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "5792:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 489,
                          "indexExpression": {
                            "id": 488,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "5801:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5792:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c616d617420737564616820746572646166746172207365626167616920446f6b7465722e",
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5811:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be029ad283bd7570d827e2efd69af31e6d9aa723e23fc4389e6b595e7e86d11b",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Dokter.\""
                        },
                        "value": "Alamat sudah terdaftar sebagai Dokter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be029ad283bd7570d827e2efd69af31e6d9aa723e23fc4389e6b595e7e86d11b",
                          "typeString": "literal_string \"Alamat sudah terdaftar sebagai Dokter.\""
                        }
                      ],
                      "id": 486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5783:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5783:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "5783:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5871:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 495,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "5872:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 497,
                          "indexExpression": {
                            "id": 496,
                            "name": "_pasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "5881:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5872:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617369656e207375646168207465726461667461722e",
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5891:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64341dd50e2f06c0cac41d11d350ddc2b418e49e56f752b197f71f27c89db58a",
                          "typeString": "literal_string \"Pasien sudah terdaftar.\""
                        },
                        "value": "Pasien sudah terdaftar."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64341dd50e2f06c0cac41d11d350ddc2b418e49e56f752b197f71f27c89db58a",
                          "typeString": "literal_string \"Pasien sudah terdaftar.\""
                        }
                      ],
                      "id": 494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5863:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5863:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "5863:54:0"
                },
                {
                  "expression": {
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 502,
                        "name": "isPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5928:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 504,
                      "indexExpression": {
                        "id": 503,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "5937:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5928:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5948:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5928:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "5928:24:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 511,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "5981:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 508,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "5963:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5976:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5963:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5963:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "5963:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 515,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "6021:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 514,
                      "name": "PasienTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "6005:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "EmitStatement",
                  "src": "6000:29:0"
                }
              ]
            },
            "functionSelector": "010ef3b3",
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 484,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 483,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "5761:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "5761:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5761:10:0"
              }
            ],
            "name": "registerPasien",
            "nameLocation": "5722:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "5745:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "5737:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5737:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5736:17:0"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5772:0:0"
            },
            "scope": 836,
            "src": "5713:324:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 550,
              "nodeType": "Block",
              "src": "6111:210:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6130:21:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 523,
                            "name": "isPasien",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "6131:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 526,
                          "indexExpression": {
                            "expression": {
                              "id": 524,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6140:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6144:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6140:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6131:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e64612073756461682074657264616674617220736562616761692050617369656e2e",
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6153:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0841d6660aee72f790cc47020ada23ff80bb1ecf0407dbd179fa7f96a310aa51",
                          "typeString": "literal_string \"Anda sudah terdaftar sebagai Pasien.\""
                        },
                        "value": "Anda sudah terdaftar sebagai Pasien."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0841d6660aee72f790cc47020ada23ff80bb1ecf0407dbd179fa7f96a310aa51",
                          "typeString": "literal_string \"Anda sudah terdaftar sebagai Pasien.\""
                        }
                      ],
                      "id": 522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6122:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6122:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "6122:70:0"
                },
                {
                  "expression": {
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 531,
                        "name": "isPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "6203:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 534,
                      "indexExpression": {
                        "expression": {
                          "id": 532,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6212:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6216:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6212:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6203:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6226:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6203:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "6203:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 541,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6259:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6263:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6259:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 538,
                        "name": "daftarPasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "6241:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6254:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6241:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6241:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "6241:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 546,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6302:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6306:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6302:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 545,
                      "name": "PasienTerdaftar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "6286:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6286:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "EmitStatement",
                  "src": "6281:32:0"
                }
              ]
            },
            "functionSelector": "334181f2",
            "id": 551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selfRegisterPasien",
            "nameLocation": "6083:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6101:2:0"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6111:0:0"
            },
            "scope": 836,
            "src": "6074:247:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 578,
              "nodeType": "Block",
              "src": "6423:174:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 558,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "6438:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 559,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "6447:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6438:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 563,
                  "nodeType": "IfStatement",
                  "src": "6434:34:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "41646d696e",
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6461:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a729ef4e25027bc652fc8b5c4d1d902947361fa7c8e7b4905e877823f27331b3",
                        "typeString": "literal_string \"Admin\""
                      },
                      "value": "Admin"
                    },
                    "functionReturnParameters": 557,
                    "id": 562,
                    "nodeType": "Return",
                    "src": "6454:14:0"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 564,
                      "name": "isDokter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "6483:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 566,
                    "indexExpression": {
                      "id": 565,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "6492:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6483:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 569,
                  "nodeType": "IfStatement",
                  "src": "6479:36:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "446f6b746572",
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6507:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ed409fc39e86bba01e2f3ce892f3153d258f5daf56a4904da0fb72c6ff04a7d8",
                        "typeString": "literal_string \"Dokter\""
                      },
                      "value": "Dokter"
                    },
                    "functionReturnParameters": 557,
                    "id": 568,
                    "nodeType": "Return",
                    "src": "6500:15:0"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 570,
                      "name": "isPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "6530:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 572,
                    "indexExpression": {
                      "id": 571,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "6539:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6530:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 575,
                  "nodeType": "IfStatement",
                  "src": "6526:36:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "50617369656e",
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6554:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6383b0bd00903b5c3a202742c52694704f8578001e3c3fd193167fcaac2674db",
                        "typeString": "literal_string \"Pasien\""
                      },
                      "value": "Pasien"
                    },
                    "functionReturnParameters": 557,
                    "id": 574,
                    "nodeType": "Return",
                    "src": "6547:15:0"
                  }
                },
                {
                  "expression": {
                    "hexValue": "556e6b6e6f776e",
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6580:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ff165d3fe0272c13129fc9e1aecd998364a5fdcad04c6ae84a7d1dfc3d06a17",
                      "typeString": "literal_string \"Unknown\""
                    },
                    "value": "Unknown"
                  },
                  "functionReturnParameters": 557,
                  "id": 577,
                  "nodeType": "Return",
                  "src": "6573:16:0"
                }
              ]
            },
            "functionSelector": "27820851",
            "id": 579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRole",
            "nameLocation": "6360:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 553,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6380:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "6372:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6372:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6371:15:0"
            },
            "returnParameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "6408:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6408:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6407:15:0"
            },
            "scope": 836,
            "src": "6351:246:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "6753:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 587,
                      "name": "rekamMedisByPasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "6771:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 589,
                    "indexExpression": {
                      "id": 588,
                      "name": "pasien",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "6790:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6771:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 586,
                  "id": 590,
                  "nodeType": "Return",
                  "src": "6764:33:0"
                }
              ]
            },
            "functionSelector": "c967ede8",
            "id": 592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRekamMedisIdsByPasien",
            "nameLocation": "6660:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "pasien",
                  "nameLocation": "6703:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "6695:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6695:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6684:32:0"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "6738:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 583,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "6738:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 584,
                    "nodeType": "ArrayTypeName",
                    "src": "6738:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6737:15:0"
            },
            "scope": 836,
            "src": "6651:154:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "6913:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 598,
                    "name": "daftarPasien",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "6931:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 597,
                  "id": 599,
                  "nodeType": "Return",
                  "src": "6924:19:0"
                }
              ]
            },
            "functionSelector": "51887b67",
            "id": 601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDaftarPasien",
            "nameLocation": "6856:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6871:2:0"
            },
            "returnParameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "6895:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 594,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6895:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 595,
                    "nodeType": "ArrayTypeName",
                    "src": "6895:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6894:18:0"
            },
            "scope": 836,
            "src": "6847:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "7037:78:0",
              "statements": [
                {
                  "expression": {
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 608,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "7048:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 609,
                      "name": "_newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "7056:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7048:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "7048:17:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 613,
                        "name": "_newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "7097:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 612,
                      "name": "AdminDitetapkan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "7081:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7081:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "EmitStatement",
                  "src": "7076:31:0"
                }
              ]
            },
            "functionSelector": "704b6c02",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 606,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 605,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "7026:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "7026:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7026:10:0"
              }
            ],
            "name": "setAdmin",
            "nameLocation": "6991:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "_newAdmin",
                  "nameLocation": "7008:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "7000:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7000:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6999:19:0"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7037:0:0"
            },
            "scope": 836,
            "src": "6982:133:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "7599:567:0",
              "statements": [
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7610:17:0",
                    "subExpression": {
                      "id": 647,
                      "name": "rekamMedisCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "7610:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "7610:17:0"
                },
                {
                  "expression": {
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 650,
                        "name": "rekamMedis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "7638:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                          "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                        }
                      },
                      "id": 652,
                      "indexExpression": {
                        "id": 651,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "7649:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7638:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                        "typeString": "struct RekamMedis.RekamMedisData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 654,
                          "name": "rekamMedisCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "7697:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 655,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 619,
                          "src": "7727:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 656,
                          "name": "_nama",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "7749:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 657,
                          "name": "_umur",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 623,
                          "src": "7769:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 658,
                          "name": "_golonganDarah",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 625,
                          "src": "7789:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 659,
                          "name": "_tanggalLahir",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 627,
                          "src": "7818:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 660,
                          "name": "_gender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 629,
                          "src": "7846:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 661,
                          "name": "_alamat",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 631,
                          "src": "7868:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 662,
                          "name": "_noTelepon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 633,
                          "src": "7890:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 663,
                          "name": "_email",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 635,
                          "src": "7915:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 664,
                          "name": "_diagnosa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 637,
                          "src": "7936:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 665,
                          "name": "_foto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 639,
                          "src": "7960:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 666,
                          "name": "_catatan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 641,
                          "src": "7980:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8003:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 653,
                        "name": "RekamMedisData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "7668:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RekamMedisData_$59_storage_ptr_$",
                          "typeString": "type(struct RekamMedis.RekamMedisData storage pointer)"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7668:350:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_memory_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData memory"
                      }
                    },
                    "src": "7638:380:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "7638:380:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 675,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "8062:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 671,
                          "name": "rekamMedisByPasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "8029:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 673,
                        "indexExpression": {
                          "id": 672,
                          "name": "_pasien",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 619,
                          "src": "8048:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8029:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8057:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "8029:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8029:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "8029:49:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 679,
                        "name": "rekamMedisCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "8116:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 680,
                        "name": "_pasien",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "8133:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 681,
                        "name": "_diagnosa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 637,
                        "src": "8142:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8153:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 678,
                      "name": "RekamMedisDitambahkan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "8094:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,string memory,bool)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8094:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 684,
                  "nodeType": "EmitStatement",
                  "src": "8089:69:0"
                }
              ]
            },
            "functionSelector": "68f5dc99",
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 644,
                    "name": "_pasien",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 619,
                    "src": "7590:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 645,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 643,
                  "name": "hanyaPasien",
                  "nameLocations": [
                    "7578:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 202,
                  "src": "7578:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7578:20:0"
              }
            ],
            "name": "tambahRekamMedis",
            "nameLocation": "7166:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "_pasien",
                  "nameLocation": "7201:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7193:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7193:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "7233:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7219:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7219:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "_umur",
                  "nameLocation": "7254:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7249:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7249:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "_golonganDarah",
                  "nameLocation": "7284:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7270:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7270:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 627,
                  "mutability": "mutable",
                  "name": "_tanggalLahir",
                  "nameLocation": "7323:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7309:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 626,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7309:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "_gender",
                  "nameLocation": "7361:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7347:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7347:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "_alamat",
                  "nameLocation": "7393:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7379:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7379:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "mutability": "mutable",
                  "name": "_noTelepon",
                  "nameLocation": "7425:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7411:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7411:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "_email",
                  "nameLocation": "7460:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7446:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7446:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "_diagnosa",
                  "nameLocation": "7491:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7477:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7477:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "_foto",
                  "nameLocation": "7525:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7511:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7511:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "_catatan",
                  "nameLocation": "7555:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7541:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7541:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7182:388:0"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7599:0:0"
            },
            "scope": 836,
            "src": "7157:1009:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "8680:643:0",
              "statements": [
                {
                  "assignments": [
                    721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 721,
                      "mutability": "mutable",
                      "name": "rekam",
                      "nameLocation": "8714:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 805,
                      "src": "8691:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData"
                      },
                      "typeName": {
                        "id": 720,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 719,
                          "name": "RekamMedisData",
                          "nameLocations": [
                            "8691:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59,
                          "src": "8691:14:0"
                        },
                        "referencedDeclaration": 59,
                        "src": "8691:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 725,
                  "initialValue": {
                    "baseExpression": {
                      "id": 722,
                      "name": "rekamMedis",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "8722:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                        "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                      }
                    },
                    "id": 724,
                    "indexExpression": {
                      "id": 723,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "8733:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8722:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8691:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 730,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "8822:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 726,
                          "name": "rekamMedisVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "8793:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
                            "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref[] storage ref)"
                          }
                        },
                        "id": 728,
                        "indexExpression": {
                          "id": 727,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 688,
                          "src": "8812:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8793:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage",
                          "typeString": "struct RekamMedis.RekamMedisData storage ref[] storage ref"
                        }
                      },
                      "id": 729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8817:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "8793:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr_$_t_struct$_RekamMedisData_$59_storage_$returns$__$attached_to$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct RekamMedis.RekamMedisData storage ref[] storage pointer,struct RekamMedis.RekamMedisData storage ref)"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8793:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 732,
                  "nodeType": "ExpressionStatement",
                  "src": "8793:35:0"
                },
                {
                  "expression": {
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 733,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "8877:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8883:4:0",
                      "memberName": "nama",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "8877:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 736,
                      "name": "_nama",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "8890:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8877:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "8877:18:0"
                },
                {
                  "expression": {
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 739,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "8906:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8912:4:0",
                      "memberName": "umur",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "8906:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 742,
                      "name": "_umur",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "8919:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8906:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 744,
                  "nodeType": "ExpressionStatement",
                  "src": "8906:18:0"
                },
                {
                  "expression": {
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 745,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "8935:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8941:13:0",
                      "memberName": "golonganDarah",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "8935:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 748,
                      "name": "_golonganDarah",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 694,
                      "src": "8957:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8935:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "8935:36:0"
                },
                {
                  "expression": {
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 751,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "8982:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 753,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8988:12:0",
                      "memberName": "tanggalLahir",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "8982:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 754,
                      "name": "_tanggalLahir",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "9003:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8982:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "8982:34:0"
                },
                {
                  "expression": {
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 757,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "9027:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9033:6:0",
                      "memberName": "gender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "9027:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 760,
                      "name": "_gender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 698,
                      "src": "9042:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9027:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "9027:22:0"
                },
                {
                  "expression": {
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 763,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "9060:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9066:6:0",
                      "memberName": "alamat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "9060:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 766,
                      "name": "_alamat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "9075:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9060:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "9060:22:0"
                },
                {
                  "expression": {
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 769,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "9093:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9099:9:0",
                      "memberName": "noTelepon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "9093:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 772,
                      "name": "_noTelepon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 702,
                      "src": "9111:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9093:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "9093:28:0"
                },
                {
                  "expression": {
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 775,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "9132:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9138:5:0",
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "9132:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 778,
                      "name": "_email",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 704,
                      "src": "9146:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9132:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "9132:20:0"
                },
                {
                  "expression": {
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 781,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "9163:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9169:8:0",
                      "memberName": "diagnosa",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "9163:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 784,
                      "name": "_diagnosa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "9180:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9163:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "9163:26:0"
                },
                {
                  "expression": {
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 787,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "9200:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 789,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9206:4:0",
                      "memberName": "foto",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "9200:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 790,
                      "name": "_foto",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "9213:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9200:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "9200:18:0"
                },
                {
                  "expression": {
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 793,
                        "name": "rekam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "9229:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                          "typeString": "struct RekamMedis.RekamMedisData storage pointer"
                        }
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9235:7:0",
                      "memberName": "catatan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "9229:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 796,
                      "name": "_catatan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "9245:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9229:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "9229:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 800,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "9290:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 801,
                        "name": "_diagnosa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "9295:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 802,
                        "name": "_catatan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "9306:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 799,
                      "name": "RekamMedisDiperbarui",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "9269:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory)"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9269:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 804,
                  "nodeType": "EmitStatement",
                  "src": "9264:51:0"
                }
              ]
            },
            "functionSelector": "f7dc5714",
            "id": 806,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 713,
                        "name": "rekamMedis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "8656:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                          "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                        }
                      },
                      "id": 715,
                      "indexExpression": {
                        "id": 714,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "8667:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8656:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                        "typeString": "struct RekamMedis.RekamMedisData storage ref"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8672:6:0",
                    "memberName": "pasien",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34,
                    "src": "8656:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 717,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 712,
                  "name": "hanyaDokterAktifUntukPasien",
                  "nameLocations": [
                    "8628:27:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 188,
                  "src": "8628:27:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8628:51:0"
              }
            ],
            "name": "updateRekamMedis",
            "nameLocation": "8223:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "8255:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8250:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8250:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "_nama",
                  "nameLocation": "8283:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8269:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8269:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "_umur",
                  "nameLocation": "8304:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8299:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8299:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "_golonganDarah",
                  "nameLocation": "8334:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8320:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8320:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "_tanggalLahir",
                  "nameLocation": "8373:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8359:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8359:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "_gender",
                  "nameLocation": "8411:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8397:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8397:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "_alamat",
                  "nameLocation": "8443:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8429:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8429:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 702,
                  "mutability": "mutable",
                  "name": "_noTelepon",
                  "nameLocation": "8475:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8461:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8461:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 704,
                  "mutability": "mutable",
                  "name": "_email",
                  "nameLocation": "8510:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8496:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8496:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 706,
                  "mutability": "mutable",
                  "name": "_diagnosa",
                  "nameLocation": "8541:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8527:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8527:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "_foto",
                  "nameLocation": "8575:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8561:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8561:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 710,
                  "mutability": "mutable",
                  "name": "_catatan",
                  "nameLocation": "8605:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8591:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8591:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8239:381:0"
            },
            "returnParameters": {
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8680:0:0"
            },
            "scope": 836,
            "src": "8214:1109:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 819,
              "nodeType": "Block",
              "src": "9479:49:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 815,
                      "name": "rekamMedisVersions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "9497:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref[] storage ref)"
                      }
                    },
                    "id": 817,
                    "indexExpression": {
                      "id": 816,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "9516:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9497:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage",
                      "typeString": "struct RekamMedis.RekamMedisData storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 814,
                  "id": 818,
                  "nodeType": "Return",
                  "src": "9490:30:0"
                }
              ]
            },
            "functionSelector": "d6887802",
            "id": 820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRekamMedisVersions",
            "nameLocation": "9385:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "9422:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "9417:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9417:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9406:26:0"
            },
            "returnParameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "9454:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct RekamMedis.RekamMedisData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 811,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 810,
                        "name": "RekamMedisData",
                        "nameLocations": [
                          "9454:14:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 59,
                        "src": "9454:14:0"
                      },
                      "referencedDeclaration": 59,
                      "src": "9454:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RekamMedisData_$59_storage_ptr",
                        "typeString": "struct RekamMedis.RekamMedisData"
                      }
                    },
                    "id": 812,
                    "nodeType": "ArrayTypeName",
                    "src": "9454:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RekamMedisData_$59_storage_$dyn_storage_ptr",
                      "typeString": "struct RekamMedis.RekamMedisData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9453:25:0"
            },
            "scope": 836,
            "src": "9376:152:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 834,
              "nodeType": "Block",
              "src": "9635:48:0",
              "statements": [
                {
                  "expression": {
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 827,
                          "name": "rekamMedis",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "9646:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RekamMedisData_$59_storage_$",
                            "typeString": "mapping(uint256 => struct RekamMedis.RekamMedisData storage ref)"
                          }
                        },
                        "id": 829,
                        "indexExpression": {
                          "id": 828,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 822,
                          "src": "9657:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9646:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RekamMedisData_$59_storage",
                          "typeString": "struct RekamMedis.RekamMedisData storage ref"
                        }
                      },
                      "id": 830,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9662:5:0",
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "9646:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9670:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9646:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "9646:29:0"
                }
              ]
            },
            "functionSelector": "083d8824",
            "id": 835,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 825,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 824,
                  "name": "hanyaAdmin",
                  "nameLocations": [
                    "9624:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 141,
                  "src": "9624:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9624:10:0"
              }
            ],
            "name": "nonaktifkanRekamMedis",
            "nameLocation": "9585:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "9612:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "9607:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9607:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9606:10:0"
            },
            "returnParameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9635:0:0"
            },
            "scope": 836,
            "src": "9576:107:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 837,
        "src": "69:9617:0",
        "usedErrors": []
      }
    ],
    "src": "33:9655:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xe402a874ee3d4dE61Ed95E3ceBeFaffEBa8DA2F9",
      "transactionHash": "0x5760febbf31a5bdc5454e15cea9ad88cbd9bcd61fd18ddb061139731c5307cc2"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-05-20T03:43:23.272Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}